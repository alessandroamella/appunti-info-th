1
00:00:14,960 --> 00:00:16,320
Allora, è tutto più o meno chiaro quello

2
00:00:16,320 --> 00:00:18,119
che abbiamo fatto scorsa volta. Era

3
00:00:18,119 --> 00:00:20,600
giusto un recapo velocissimo.

4
00:00:20,600 --> 00:00:22,160
L'importante è che abbiate più o meno i

5
00:00:22,160 --> 00:00:24,599
concetti, li rivediamo velocissimamente

6
00:00:24,599 --> 00:00:28,279
oggi e poi introduciamo un concetto

7
00:00:28,279 --> 00:00:32,679
nuovo. Ok?

8
00:00:33,200 --> 00:00:35,879
Allora, come abbiamo detto

9
00:00:35,879 --> 00:00:38,200
come abbiamo detto noi studieremo la

10
00:00:38,200 --> 00:00:40,440
complessità non degli algoritmi ma dei

11
00:00:40,440 --> 00:00:42,399
problemi. Ok? Questa è la differenza

12
00:00:42,399 --> 00:00:44,079
sostanziale fra quello che avete visto

13
00:00:44,079 --> 00:00:47,079
finora e quello che vedremo in questo

14
00:00:47,079 --> 00:00:49,239
corso. Per questa ragione abbiamo

15
00:00:49,239 --> 00:00:51,440
necessità di formalizzare i problemi.

16
00:00:51,440 --> 00:00:53,680
Abbiamo detto che ci stanno problemi di

17
00:00:53,680 --> 00:00:55,440
ricerca, che sono quei problemi per i

18
00:00:55,440 --> 00:00:57,559
quali le risposte possono essere varie e

19
00:00:57,559 --> 00:01:00,000
i problemi di decisione i quali hanno

20
00:01:00,000 --> 00:01:03,120
come risposta solamente un buleano. Ok?

21
00:01:03,120 --> 00:01:05,439
S no.

22
00:01:05,439 --> 00:01:09,439
Abbiamo detto che praticamente eh i

23
00:01:09,439 --> 00:01:11,000
problemi di decisione possono essere

24
00:01:11,000 --> 00:01:12,840
vari, possono essere vari contesti, ci

25
00:01:12,840 --> 00:01:15,880
possono essere matrici, grafi,

26
00:01:15,880 --> 00:01:18,040
ipergrafi, qualsiasi qualsiasi cosa

27
00:01:18,040 --> 00:01:22,159
viene in mente immagini, testo, bla, eh

28
00:01:22,159 --> 00:01:25,119
tale per cui, insomma ehm

29
00:01:25,119 --> 00:01:27,640
andarli ad analizzare da questo punto di

30
00:01:27,640 --> 00:01:29,759
vista, cioè se non mettiamo delle

31
00:01:29,759 --> 00:01:31,720
ipotesi di semplificazione di viene

32
00:01:31,720 --> 00:01:34,040
tutto un po' indicato. Ok? Allora, noi

33
00:01:34,040 --> 00:01:35,759
ci siamo andati a scegliere dei problemi

34
00:01:35,759 --> 00:01:37,720
che avete già visto nella vostra

35
00:01:37,720 --> 00:01:40,320
carriera, che è il problema di decidere

36
00:01:40,320 --> 00:01:43,360
linguaggi. Ok? Perché facciamo questo?

37
00:01:43,360 --> 00:01:44,880
Perché decidere in un linguaggio è un

38
00:01:44,880 --> 00:01:47,280
problema di decisione. Vi ricordate cosa

39
00:01:47,280 --> 00:01:51,399
significa decidere un linguaggio?

40
00:01:53,280 --> 00:01:55,040
Verificare se una stringa appartiene o

41
00:01:55,040 --> 00:01:56,960
meno
Verificare se una stringa

42
00:01:56,960 --> 00:01:58,680
appartiene o meno un dato linguaggio.

43
00:01:58,680 --> 00:02:02,399
Quindi, qual è l'input?

44
00:02:04,880 --> 00:02:06,920
una stringa.

45
00:02:06,920 --> 00:02:09,560
Il linguaggio fa parte dell'input,

46
00:02:09,560 --> 00:02:12,040
no? Ok, questo è importante. Ok, quindi

47
00:02:12,040 --> 00:02:13,560
l'input

48
00:02:13,560 --> 00:02:15,440
del problema di decidere un linguaggio è

49
00:02:15,440 --> 00:02:17,680
dato una stringa e un linguaggio che in

50
00:02:17,680 --> 00:02:19,440
qualche modo noi conosciamo, che ci

51
00:02:19,440 --> 00:02:21,200
viene dato e definito all'interno del

52
00:02:21,200 --> 00:02:22,360
problema. Noi dobbiamo decidere se

53
00:02:22,360 --> 00:02:24,000
questa stringa fa parte di questo

54
00:02:24,000 --> 00:02:26,920
insieme o meno. Ok?

55
00:02:26,920 --> 00:02:30,080
Allora, poiché

56
00:02:30,080 --> 00:02:33,840
noi abbiamo detto possiamo codificare,

57
00:02:33,840 --> 00:02:37,319
no, con un codice opportuno

58
00:02:37,319 --> 00:02:41,000
dentro i linguaggi varie cose,

59
00:02:41,000 --> 00:02:45,040
sostanzialmente possiamo ricodificare,

60
00:02:45,040 --> 00:02:47,640
ok, all'interno

61
00:02:47,640 --> 00:02:50,760
di linguaggio opportuno i problemi e

62
00:02:50,760 --> 00:02:53,680
decisioni a cui siamo interessati. Ok?

63
00:02:53,680 --> 00:02:55,319
Chiaro per tutti come si fa? Perché noi

64
00:02:55,319 --> 00:02:57,640
possiamo definire dei linguaggi appositi

65
00:02:57,640 --> 00:03:00,920
su un alfabeto apposita, no? Tale per

66
00:03:00,920 --> 00:03:03,560
cui le stringhe che fanno parte del

67
00:03:03,560 --> 00:03:09,720
linguaggio sono, ok? Nel caso

68
00:03:09,720 --> 00:03:11,720
nel caso dei problemi di decisione noi

69
00:03:11,720 --> 00:03:15,480
abbiamo che nel linguaggio

70
00:03:15,480 --> 00:03:19,159
fanno parte,

71
00:03:19,720 --> 00:03:21,720
ok? Pensiamo a questo problema, il

72
00:03:21,720 --> 00:03:25,560
problema dei grafi

73
00:03:25,560 --> 00:03:28,360
totalmente connessi. Sapete cos'è il un

74
00:03:28,360 --> 00:03:31,280
grafo completamente connesso, totalmente

75
00:03:31,280 --> 00:03:33,640
connesso? Ok? È un grafo da cui da ogni

76
00:03:33,640 --> 00:03:35,799
nodo si può arrivare a qualsiasi altro

77
00:03:35,799 --> 00:03:39,360
nodo. Ok?

78
00:03:39,400 --> 00:03:43,120
Supponiamo di avere questo problema. Ok?

79
00:03:43,120 --> 00:03:46,239
Dato un grafo, stabilire se totalmente

80
00:03:46,239 --> 00:03:47,480
connesso. Questo è un problema di

81
00:03:47,480 --> 00:03:51,319
decisione, un problema di ricerca.

82
00:03:52,760 --> 00:03:56,239
problema di decisione perché

83
00:03:56,239 --> 00:03:57,959
perché la risposta in buuleano, cioè ci

84
00:03:57,959 --> 00:03:59,680
danno un grafo, noi dobbiamo dire sì,

85
00:03:59,680 --> 00:04:02,159
no. Poi, ok, può richiedere che ci

86
00:04:02,159 --> 00:04:04,680
inventiamo varie cose prima di dire sì

87
00:04:04,680 --> 00:04:06,959
no, però la risposta alla fine è o sì o

88
00:04:06,959 --> 00:04:10,079
no. Quello fa sì che il problema sia di

89
00:04:10,079 --> 00:04:13,599
decisione. Ok?

90
00:04:13,599 --> 00:04:17,280
Se dobbiamo inventarci un linguaggio che

91
00:04:17,280 --> 00:04:19,680
in qualche modo codifichi il problema di

92
00:04:19,680 --> 00:04:21,959
decidere se un grafo è totalmente

93
00:04:21,959 --> 00:04:24,400
connesso, che linguaggio potremmo

94
00:04:24,400 --> 00:04:27,400
inventarci?

95
00:04:32,520 --> 00:04:34,240
Ecco,

96
00:04:34,240 --> 00:04:36,360
puoi dire un po' più adatto. Cioè, il

97
00:04:36,360 --> 00:04:39,479
linguaggio stammina.

98
00:04:39,479 --> 00:04:41,600
Esatto. Cioè, noi ci possiamo inventare

99
00:04:41,600 --> 00:04:44,280
una codifica su dei simboli opportuni

100
00:04:44,280 --> 00:04:48,800
tale per cui le stringhe che fanno parte

101
00:04:48,800 --> 00:04:52,759
di questo linguaggio sono solamente

102
00:04:52,759 --> 00:04:56,880
le stringhe che secondo la nostra

103
00:04:56,880 --> 00:04:58,479
codifica

104
00:04:58,479 --> 00:05:01,000
codificano un linguaggio, un grafo

105
00:05:01,000 --> 00:05:05,880
totalmente connesso. Ok, è chiaro?

106
00:05:05,880 --> 00:05:08,560
Supponiamo di ricevere input una stringa

107
00:05:08,560 --> 00:05:10,160
stramba

108
00:05:10,160 --> 00:05:12,680
che non codifica un grafo secondo la

109
00:05:12,680 --> 00:05:15,440
nostra codifica. Ok? Questa stringa fa

110
00:05:15,440 --> 00:05:18,960
parte del linguaggio? No, no. Ok? Perché

111
00:05:18,960 --> 00:05:22,800
del linguaggio fanno parte solamente le

112
00:05:22,800 --> 00:05:25,600
stringhe sensate, cioè che codificano i

113
00:05:25,600 --> 00:05:28,639
grafici e che sono totalmente connessi.

114
00:05:28,639 --> 00:05:32,280
Ok? Quindi da un lato

115
00:05:32,280 --> 00:05:35,039
noi abbiamo che eh i problemi di

116
00:05:35,039 --> 00:05:37,960
decisione possono essere reincoded in

117
00:05:37,960 --> 00:05:41,319
linguaggi opportuni, tale per cui sulle

118
00:05:41,319 --> 00:05:43,440
stringue per le quali noi dobbiamo

119
00:05:43,440 --> 00:05:45,039
rispondere sì, sono le stringhe che

120
00:05:45,039 --> 00:05:47,280
appartengono al linguaggio. Le stringhe

121
00:05:47,280 --> 00:05:50,000
che codificano roba strana, per

122
00:05:50,000 --> 00:05:52,680
definizione nostra, non stanno dentro

123
00:05:52,680 --> 00:05:55,440
questo linguaggio. Ok? Ma questa cosa

124
00:05:55,440 --> 00:05:57,800
ovviamente si può anche estendere ai

125
00:05:57,800 --> 00:06:01,039
problemi di ricerca. Mh, pensiamoci un

126
00:06:01,039 --> 00:06:02,960
po' assieme. Supponiamo che dobbiamo

127
00:06:02,960 --> 00:06:05,400
codificare dentro un opportuno

128
00:06:05,400 --> 00:06:09,000
linguaggio un problema di ricerca. Come

129
00:06:09,000 --> 00:06:12,360
possiamo fare?

130
00:06:17,639 --> 00:06:19,479
Il problema di decis, cioè risolve il

131
00:06:19,479 --> 00:06:20,919
problema di decisione.
Problema di

132
00:06:20,919 --> 00:06:23,199
ricerca. Noi vogliamo codificare in un

133
00:06:23,199 --> 00:06:26,639
linguaggio un problema di ricerca. Eh,

134
00:06:26,639 --> 00:06:29,000
la mia risposta sarebbe stata prima

135
00:06:29,000 --> 00:06:32,080
risolvo quello di decisione e lo trovo e

136
00:06:32,080 --> 00:06:35,520
una volta che l'ho trovato lo leggo e mi

137
00:06:35,520 --> 00:06:37,919
dà quella
No, vogliamo codificare in un

138
00:06:37,919 --> 00:06:41,639
linguaggio opportuno le stringhe che mi

139
00:06:41,639 --> 00:06:43,880
codificano un problema di ricerca. Che

140
00:06:43,880 --> 00:06:45,479
cos'è un problema di ricerca? Cos'è un

141
00:06:45,479 --> 00:06:48,919
problema in generale?

142
00:06:49,199 --> 00:06:52,280
Eh, è una
una relazione che sono c

143
00:06:52,280 --> 00:06:54,440
string di
è una relazione binaria, sono

144
00:06:54,440 --> 00:06:57,440
coppie, ok? Ricordatevi un problema sono

145
00:06:57,440 --> 00:07:00,840
coppie di stringhe, input output, ok?

146
00:07:00,840 --> 00:07:03,240
Solo che noi perché parliamo a che cos'è

147
00:07:03,240 --> 00:07:05,160
l'input, che cos'è l'output, qual è la

148
00:07:05,160 --> 00:07:07,680
relazione? Se in realtà un problema è un

149
00:07:07,680 --> 00:07:10,360
insieme di coppie, perché i problemi che

150
00:07:10,360 --> 00:07:12,759
ci interessano hanno una lista infinita

151
00:07:12,759 --> 00:07:14,000
di coppie, quindi non è che possiamo

152
00:07:14,000 --> 00:07:15,840
metterci a scriverle tutte. Allora, ci

153
00:07:15,840 --> 00:07:18,759
dobbiamo inventare un modo per

154
00:07:18,759 --> 00:07:20,680
descrivere in maniera finita una

155
00:07:20,680 --> 00:07:22,400
relazione infinita. Quindi lo

156
00:07:22,400 --> 00:07:24,240
descriviamo. Dice questo è l'input,

157
00:07:24,240 --> 00:07:26,199
questo è l'output. La relazione fra

158
00:07:26,199 --> 00:07:29,240
input e output è questa. Però di fondo

159
00:07:29,240 --> 00:07:32,960
un problema di ricerca è una relazione

160
00:07:32,960 --> 00:07:35,720
binaria tra stringer che associa input

161
00:07:35,720 --> 00:07:39,720
ad output. Ok? Supponiamo noi volessimo

162
00:07:39,720 --> 00:07:41,919
codificare dentro un linguaggio un

163
00:07:41,919 --> 00:07:46,440
problema di ricerca. Che possiamo fare?

164
00:07:47,599 --> 00:07:50,400
secondo, eh, vediamo se c'è qualche voce

165
00:07:50,400 --> 00:07:56,159
nuova. Voci nuove. Niente, eh. Ok,

166
00:07:56,159 --> 00:07:57,879
prego.

167
00:07:57,879 --> 00:08:01,199
Mettere una

168
00:08:01,199 --> 00:08:04,319
puoi alzare la forare una stringa in cui

169
00:08:04,319 --> 00:08:08,919
è codificato grafo input e
il grafo.
Il

170
00:08:08,919 --> 00:08:13,080
grafica input e il corso

171
00:08:13,080 --> 00:08:15,240
ma tu stai suppendo, lei sta supponendo

172
00:08:15,240 --> 00:08:17,720
che stiamo un problema di ricerca sul

173
00:08:17,720 --> 00:08:20,720
graso.

174
00:08:21,560 --> 00:08:24,319
Ok, riformuliamo. Quindi è un linguaggio

175
00:08:24,319 --> 00:08:25,560
in cui abbiamo le stringhe che

176
00:08:25,560 --> 00:08:27,560
codificano

177
00:08:27,560 --> 00:08:30,280
input e l'output. Ok? Cioè noi abbiamo

178
00:08:30,280 --> 00:08:34,680
in un linguaggio per ehm

179
00:08:34,680 --> 00:08:36,440
codificare un problema di ricerca

180
00:08:36,440 --> 00:08:38,919
abbiamo delle codifiche opportune su un

181
00:08:38,919 --> 00:08:41,680
alfabeto opportuno

182
00:08:41,680 --> 00:08:44,200
della relazione input output, ok? E in

183
00:08:44,200 --> 00:08:46,480
quel linguaggio che ci stanno? Ci stanno

184
00:08:46,480 --> 00:08:49,320
tutte le stringhe che codificano,

185
00:08:49,320 --> 00:08:52,519
secondo la nostra codifica, le coppie

186
00:08:52,519 --> 00:08:55,519
input output del problema in questione.

187
00:08:55,519 --> 00:08:57,240
Ok?

188
00:08:57,240 --> 00:09:00,839
Quindi a quel punto decidere quel tipo

189
00:09:00,839 --> 00:09:02,640
di linguaggio

190
00:09:02,640 --> 00:09:05,000
richiederà per noi sostanzialmente

191
00:09:05,000 --> 00:09:07,320
calcolare la soluzione, anche se non è

192
00:09:07,320 --> 00:09:09,320
propriamente così, lo vedremo poi nelle

193
00:09:09,320 --> 00:09:11,600
lezioni a venire, ok?

194
00:09:11,600 --> 00:09:14,959
E quelle coppie le cui la cui stringa di

195
00:09:14,959 --> 00:09:20,959
input è una cosa stran linguaggio o no?

196
00:09:20,959 --> 00:09:23,839
No. Quelle stringhe che non codificano

197
00:09:23,839 --> 00:09:26,560
coppie ci stanno nel linguaggio, no? No.

198
00:09:26,560 --> 00:09:29,360
Ok? Cioè, quindi noi possiamo sempre

199
00:09:29,360 --> 00:09:31,760
codificare all'interno di un linguaggio

200
00:09:31,760 --> 00:09:33,040
i problemi che a cui noi siamo

201
00:09:33,040 --> 00:09:36,120
interessati, però per semplicità noi ci

202
00:09:36,120 --> 00:09:38,640
focalizziamo sui problemi di decisioni e

203
00:09:38,640 --> 00:09:40,640
di conseguenza siccome un problema di

204
00:09:40,640 --> 00:09:43,800
decisione come risposte si no è un

205
00:09:43,800 --> 00:09:46,680
linguaggio a di uccidere un linguaggio

206
00:09:46,680 --> 00:09:48,920
ha come risposta sino la codifica al

207
00:09:48,920 --> 00:09:50,880
linguaggio di un problema decisione è il

208
00:09:50,880 --> 00:09:54,640
linguaggio che contiene tutte le istanze

209
00:09:54,640 --> 00:09:58,200
sì di quel particolare. problema. Ok?

210
00:09:58,200 --> 00:10:00,480
Così è unistanza sì, è un'istanza, cioè

211
00:10:00,480 --> 00:10:01,920
una stringa che fa parte di quel

212
00:10:01,920 --> 00:10:06,160
linguaggio o un input per quel problema,

213
00:10:06,160 --> 00:10:08,640
la tua risposta è sì.

214
00:10:08,640 --> 00:10:11,279
È chiaro? Quindi noi possiamo fare

215
00:10:11,279 --> 00:10:13,519
sempre questo genere di di giochino.

216
00:10:13,519 --> 00:10:15,480
Facciamo questa cosa perché perché ci

217
00:10:15,480 --> 00:10:18,839
semplifica la vita. Ok?

218
00:10:18,839 --> 00:10:21,279
Dopodiché abbiamo introdotto,

219
00:10:21,279 --> 00:10:23,880
siccome noi vogliamo stabilire se un

220
00:10:23,880 --> 00:10:26,200
determinato linguaggio sia decidibile o

221
00:10:26,200 --> 00:10:28,720
meno e per noi intuitivamente, poi

222
00:10:28,720 --> 00:10:30,600
vedremo più nel dettaglio questo che

223
00:10:30,600 --> 00:10:32,640
significa, ma intuitivamente una cosa è

224
00:10:32,640 --> 00:10:34,440
risolvibile se c'è un algoritmo che la

225
00:10:34,440 --> 00:10:36,519
risolve, allora noi ci dovevamo

226
00:10:36,519 --> 00:10:39,000
inventare degli algoritmi che

227
00:10:39,000 --> 00:10:41,360
decidessero linguaggi. Allora, che

228
00:10:41,360 --> 00:10:42,920
facciamo? Li facciamo in Java, li

229
00:10:42,920 --> 00:10:45,079
facciamo in Python, li facciamo in

230
00:10:45,079 --> 00:10:49,120
Gobble. Ok? Vien detto, per evitare di

231
00:10:49,120 --> 00:10:52,120
impelarci, impantanarci nella sintassi

232
00:10:52,120 --> 00:10:54,480
dei linguaggi, noi utilizziamo un

233
00:10:54,480 --> 00:10:56,600
formalismo che è molto più asciutto, che

234
00:10:56,600 --> 00:10:59,639
è il formalismo degli automa. Quindi noi

235
00:10:59,639 --> 00:11:03,279
abbiamo che un certo linguaggio è

236
00:11:03,279 --> 00:11:05,880
decidibile se esiste un automa che lo

237
00:11:05,880 --> 00:11:08,600
decide. Ok? Oggi faremo differenza fra

238
00:11:08,600 --> 00:11:10,399
automi che accettano e automi che

239
00:11:10,399 --> 00:11:14,360
decidono. Ok?

240
00:11:16,240 --> 00:11:18,399
Che cosa abbiamo visto? Abbiamo visto

241
00:11:18,399 --> 00:11:21,000
due classi di autommi così

242
00:11:21,000 --> 00:11:22,839
velocissimamente e poi che avete fatto i

243
00:11:22,839 --> 00:11:24,560
linguaggi li avete sicuramente studiati

244
00:11:24,560 --> 00:11:26,959
in maniera più approfondita, però due

245
00:11:26,959 --> 00:11:29,959
due classi di automi molto semplici sono

246
00:11:29,959 --> 00:11:33,920
gli automi deterministici a stati finiti

247
00:11:33,920 --> 00:11:37,959
e gli automi non deterministici a stati

248
00:11:37,959 --> 00:11:41,200
finiti, pure quelli. Ok?

249
00:11:41,200 --> 00:11:44,320
l'intuizione che avevamo dato e quindi

250
00:11:44,320 --> 00:11:45,760
riprendiamo questa perché oggi

251
00:11:45,760 --> 00:11:48,240
lavoreremo su questa qua. L'intuizione

252
00:11:48,240 --> 00:11:50,959
per un automa stati finiti, che sia

253
00:11:50,959 --> 00:11:53,680
deterministico o sia non deterministico,

254
00:11:53,680 --> 00:11:55,519
è questo.

255
00:11:55,519 --> 00:11:58,600
L'automa ha un input.

256
00:11:58,600 --> 00:12:01,360
L'input di quest'automa è un lungo

257
00:12:01,360 --> 00:12:05,160
scontrino, è un nastro, ok? sui quali

258
00:12:05,160 --> 00:12:08,279
vengono scritti dei simboli.

259
00:12:08,279 --> 00:12:10,839
Sono i simboli dell'alfabeto su cui il

260
00:12:10,839 --> 00:12:14,519
linguaggio è definito.

261
00:12:14,519 --> 00:12:17,720
Chiaro? Sto andando troppo veloce.

262
00:12:17,720 --> 00:12:20,959
Ok. L'automa che fa? Ogni volta che

263
00:12:20,959 --> 00:12:23,959
legge un simbolo e si trova in un certo

264
00:12:23,959 --> 00:12:26,160
stato di funzionamento,

265
00:12:26,160 --> 00:12:29,600
transisce verso un nuovo stato e butta

266
00:12:29,600 --> 00:12:31,519
via il simbolo, cioè va avanti sul

267
00:12:31,519 --> 00:12:35,160
nastro. La caratteristica di questi

268
00:12:35,160 --> 00:12:40,160
automi è che una volta che la macchina

269
00:12:40,160 --> 00:12:43,279
supera un simbolo, va, porta avanti il

270
00:12:43,279 --> 00:12:45,839
lettore, diciamo, quel simbolo è perso,

271
00:12:45,839 --> 00:12:47,680
cioè non possiamo andare indietro a

272
00:12:47,680 --> 00:12:50,680
guardarlo. Ok? Quindi questa è una

273
00:12:50,680 --> 00:12:52,959
macchina che ogni volta che vedo un

274
00:12:52,959 --> 00:12:54,880
simbolo deve tra virgolette fare

275
00:12:54,880 --> 00:12:57,760
l'operazione giusta perché indietro non

276
00:12:57,760 --> 00:13:00,680
torna. Ok,

277
00:13:00,680 --> 00:13:03,079
abbiamo introdotto poi delle macchine

278
00:13:03,079 --> 00:13:06,399
strane che erano delle macchine non

279
00:13:06,399 --> 00:13:08,560
deterministiche. In cosa consisteva il

280
00:13:08,560 --> 00:13:11,360
nondeterminismo? Il nonismo di queste

281
00:13:11,360 --> 00:13:15,199
macchine consisteva nel fatto che questi

282
00:13:15,199 --> 00:13:18,360
automi in presenza di un certo simbolo e

283
00:13:18,360 --> 00:13:21,480
un certo stato interno di funzionamento,

284
00:13:21,480 --> 00:13:24,440
non avevano una scelta obbligata su cosa

285
00:13:24,440 --> 00:13:28,800
fare, ma potevano transire verso più

286
00:13:28,800 --> 00:13:31,920
stati successivi. Ok? Quindi le macchine

287
00:13:31,920 --> 00:13:33,880
non deterministiche avevano scelte, le

288
00:13:33,880 --> 00:13:35,680
macchine deterministiche non hanno

289
00:13:35,680 --> 00:13:39,160
scelte. Ok, ci siamo fatti questa

290
00:13:39,160 --> 00:13:40,760
metafora. Allora, abbiamo detto che

291
00:13:40,760 --> 00:13:43,680
formalmente una macchina accetta, una

292
00:13:43,680 --> 00:13:45,399
macchina deterministica accetta se la

293
00:13:45,399 --> 00:13:47,399
sua computazione deterministica va a

294
00:13:47,399 --> 00:13:49,519
finire in uno stato accettante,

295
00:13:49,519 --> 00:13:52,240
consumando tutto l'input. Una macchina

296
00:13:52,240 --> 00:13:56,480
non deterministica accetta se ha un modo

297
00:13:56,480 --> 00:13:59,120
di accettare il proprio input, ok?

298
00:13:59,120 --> 00:14:01,519
Perché avendo varie scelte potrebbe

299
00:14:01,519 --> 00:14:03,839
computarle in vari modi. Alcuni che

300
00:14:03,839 --> 00:14:05,680
accettano, altri che non accettano.

301
00:14:05,680 --> 00:14:07,880
Allora, ci siamo detti, ma se ci sono

302
00:14:07,880 --> 00:14:09,639
modi per accettare e modi per non

303
00:14:09,639 --> 00:14:12,600
accettare, la macchina dice sì o no? La

304
00:14:12,600 --> 00:14:14,759
macchina dice sì ogni volta che c'è

305
00:14:14,759 --> 00:14:18,560
almeno un modo per accettare. Ok,

306
00:14:18,560 --> 00:14:20,839
chiaro? E ci sono classi strane in cui

307
00:14:20,839 --> 00:14:23,480
la maggioranza delle computazioni deve

308
00:14:23,480 --> 00:14:25,800
essere Sì, ma quelle forse alla fine se

309
00:14:25,800 --> 00:14:28,399
abbiamo tempo le guarderemo.

310
00:14:28,399 --> 00:14:31,040
Al momento facciamo il modello standard.

311
00:14:31,040 --> 00:14:33,519
La macchina accetta se esiste almeno un

312
00:14:33,519 --> 00:14:36,360
modo per accettare. Ok?

313
00:14:36,360 --> 00:14:39,000
Risultato interessante che abbiamo

314
00:14:39,000 --> 00:14:43,040
menzionato ma non dimostrato è che

315
00:14:43,040 --> 00:14:45,639
le macchine non deterministiche, sebbene

316
00:14:45,639 --> 00:14:48,120
sembrano sembrano più furbe delle

317
00:14:48,120 --> 00:14:50,040
macchine deterministiche, in realtà

318
00:14:50,040 --> 00:14:51,959
hanno lo stesso potere di calcolo, cioè

319
00:14:51,959 --> 00:14:55,040
sanno fare le stesse cose, non sanno

320
00:14:55,040 --> 00:14:56,920
fare più cose e in particolare non lo

321
00:14:56,920 --> 00:14:59,040
sanno fare nemmeno più velocemente

322
00:14:59,040 --> 00:15:03,519
perché si può dimostrare che automi non

323
00:15:03,519 --> 00:15:05,519
deterministici

324
00:15:05,519 --> 00:15:07,839
a Stati finiti possono essere

325
00:15:07,839 --> 00:15:11,040
trasformati in automi deterministi già

326
00:15:11,040 --> 00:15:13,480
Stati finiti equivalenti, cioè che

327
00:15:13,480 --> 00:15:15,759
riconoscono lo stesso linguaggio e la

328
00:15:15,759 --> 00:15:18,560
performance è la stessa, cioè il tempo

329
00:15:18,560 --> 00:15:21,199
che la macchina ci mette a decidere una

330
00:15:21,199 --> 00:15:23,880
stenda è sempre lineare perché guarda un

331
00:15:23,880 --> 00:15:25,440
simbolo per volta, che sia non

332
00:15:25,440 --> 00:15:27,480
deterministico, che sia deterministico,

333
00:15:27,480 --> 00:15:29,600
ok? Cioè, quindi le macchine non

334
00:15:29,600 --> 00:15:31,160
deterministiche, gli automi non

335
00:15:31,160 --> 00:15:33,319
deterministici che abbiamo visto finora,

336
00:15:33,319 --> 00:15:35,480
non hanno nulla di più potente di quello

337
00:15:35,480 --> 00:15:37,639
che abbiamo. Sono più facilmente

338
00:15:37,639 --> 00:15:39,680
programmabili rispetto alle macchine

339
00:15:39,680 --> 00:15:42,000
deterministiche. Tutto qua. Perché ce le

340
00:15:42,000 --> 00:15:44,839
siamo inventate? Perché progettare

341
00:15:44,839 --> 00:15:46,800
automi non deterministici è più facile.

342
00:15:46,800 --> 00:15:49,160
Poi lo diamo impasto a un compilatore,

343
00:15:49,160 --> 00:15:50,480
ci mette in mano e tira fuori la

344
00:15:50,480 --> 00:15:52,199
macchina deterministica. Ok? Noi non ci

345
00:15:52,199 --> 00:15:54,959
siamo cervellati per capire come fare

346
00:15:54,959 --> 00:15:59,240
una macchina deterministica. Ok?

347
00:16:00,079 --> 00:16:02,240
Una cosa che abbiamo notato e ci siamo

348
00:16:02,240 --> 00:16:04,839
lasciati con questo esempio la scorsa

349
00:16:04,839 --> 00:16:07,680
volta era il linguaggio

350
00:16:07,680 --> 00:16:09,480
delle

351
00:16:09,480 --> 00:16:14,440
parentesi, a volte si chiama comunque

352
00:16:14,440 --> 00:16:17,759
questo qua.

353
00:16:25,240 --> 00:16:28,800
Allora, avevamo definito

354
00:16:28,800 --> 00:16:31,160
avevamo definito

355
00:16:31,160 --> 00:16:33,160
il linguaggio

356
00:16:33,160 --> 00:16:36,800
delle stringhe sull'alfabeto AB tale per

357
00:16:36,800 --> 00:16:40,839
cui abbiamo prima una sequenza di A, poi

358
00:16:40,839 --> 00:16:43,759
una sequenza di B e il numero di B deve

359
00:16:43,759 --> 00:16:46,279
essere uguale al al numero di A. Ok?

360
00:16:46,279 --> 00:16:49,319
Questo era il constraint. Abbiamo visto

361
00:16:49,319 --> 00:16:51,880
intuitivamente perché questa cosa non

362
00:16:51,880 --> 00:16:53,880
può funzionare, cioè non ci può essere

363
00:16:53,880 --> 00:16:56,279
un automa stati finiti in grado di

364
00:16:56,279 --> 00:16:58,920
riconoscere questo linguaggio, né

365
00:16:58,920 --> 00:17:01,600
deterministico né non deterministico. E

366
00:17:01,600 --> 00:17:04,640
l'intuizione dietro era che la macchina,

367
00:17:04,640 --> 00:17:06,600
cioè che l'automa Stati Uniti è troppo

368
00:17:06,600 --> 00:17:09,400
semplice, non è in grado di contare. Ok?

369
00:17:09,400 --> 00:17:11,039
Eppure noi abbiamo l'esperienza che in

370
00:17:11,039 --> 00:17:13,240
Python, in Java eccetera. Noi siamo in

371
00:17:13,240 --> 00:17:14,720
grado di riconoscere quel genere di

372
00:17:14,720 --> 00:17:17,959
linguaggio. Ok? Allora, la cosa è che un

373
00:17:17,959 --> 00:17:20,079
automa stati finiti è troppo semplice,

374
00:17:20,079 --> 00:17:22,280
cioè non ha un potere di calcolo

375
00:17:22,280 --> 00:17:25,120
sufficientemente forte da essere in

376
00:17:25,120 --> 00:17:29,840
grado di contare le cose. Ok?

377
00:17:29,840 --> 00:17:32,360
Introduciamo giusto questa notazione

378
00:17:32,360 --> 00:17:36,360
perché ci serve poi che sono la

379
00:17:36,360 --> 00:17:39,080
notazione dei linguaggi

380
00:17:39,080 --> 00:17:42,080
regolari.

381
00:17:48,799 --> 00:17:52,480
Allora, sia a sigma

382
00:17:52,480 --> 00:17:55,679
un alfabeto,

383
00:17:59,320 --> 00:18:03,919
un linguaggio regolare su sigma

384
00:18:03,919 --> 00:18:07,480
è un linguaggio che si può ottenere

385
00:18:07,480 --> 00:18:09,720
tramite

386
00:18:09,720 --> 00:18:13,799
concatenazioni di simboli in sigma

387
00:18:13,799 --> 00:18:16,080
e

388
00:18:16,080 --> 00:18:20,280
altre parole. Ok?

389
00:18:21,440 --> 00:18:24,880
Allora, una un linguaggio regolare è un

390
00:18:24,880 --> 00:18:27,360
linguaggio le cui stringhe vengono

391
00:18:27,360 --> 00:18:30,159
caratterizzate da quelle che si chiamano

392
00:18:30,159 --> 00:18:34,000
espressioni regolari.

393
00:18:39,799 --> 00:18:41,720
Le espressioni regolari sono un modo

394
00:18:41,720 --> 00:18:45,000
compatto di esprimere linguaggi su

395
00:18:45,000 --> 00:18:48,760
sull'alfabeto. Allora,

396
00:18:48,760 --> 00:18:51,360
se alfa è un simbolo appartenente a

397
00:18:51,360 --> 00:18:54,280
sigma,

398
00:18:54,280 --> 00:18:59,919
allora alfa è un'espressione regolare.

399
00:19:01,520 --> 00:19:03,720
Ad esempio, se noi abbiamo, che ne so,

400
00:19:03,720 --> 00:19:07,720
sigma che è 0,

401
00:19:08,440 --> 00:19:10,159
allora

402
00:19:10,159 --> 00:19:13,080
solamente 0 o solamente 1 sono delle

403
00:19:13,080 --> 00:19:17,280
espressioni regolari, ok?

404
00:19:17,280 --> 00:19:24,080
Dopodiché abbiamo che se alfa e beta

405
00:19:24,080 --> 00:19:25,600
sono

406
00:19:25,600 --> 00:19:29,400
espressioni regolari,

407
00:19:29,400 --> 00:19:31,280
allora

408
00:19:31,280 --> 00:19:33,440
anche la concatenazione

409
00:19:33,440 --> 00:19:38,280
anche la concatenazione

410
00:19:40,919 --> 00:19:48,039
alfa beta oplà è una espressione

411
00:19:48,039 --> 00:19:49,799
regolare.

412
00:19:49,799 --> 00:19:54,600
Ok? Quindi se noi avevamo che 0 e 1 come

413
00:19:54,600 --> 00:19:57,240
simboli distinti sono espressioni

414
00:19:57,240 --> 00:20:00,919
regolari, allora per questa ragione 00

415
00:20:00,919 --> 00:20:05,120
sarà un'espressione regolare. 0 1

416
00:20:05,120 --> 00:20:08,159
1 1 1 1 e insomma. Ok? Tutti i modi di

417
00:20:08,159 --> 00:20:11,440
agganciare i simboli su sigma sono

418
00:20:11,440 --> 00:20:13,840
espressioni regolari.

419
00:20:13,840 --> 00:20:16,559
Un'altra espressione regolare è la

420
00:20:16,559 --> 00:20:19,559
disgiunzione.

421
00:20:20,520 --> 00:20:24,760
Alfa e beta sono

422
00:20:24,760 --> 00:20:28,480
espressioni regolari.

423
00:20:28,480 --> 00:20:31,480
Allora,

424
00:20:31,760 --> 00:20:35,679
alfa or beta

425
00:20:35,679 --> 00:20:38,000
è

426
00:20:38,000 --> 00:20:39,679
un'espressione

427
00:20:39,679 --> 00:20:42,679
regolare.

428
00:20:44,159 --> 00:20:47,480
Alfa or beta è una stringa. E che cavolo

429
00:20:47,480 --> 00:20:48,880
su?

430
00:20:48,880 --> 00:20:53,000
alfa o beta or beta è una stringa una è

431
00:20:53,000 --> 00:20:55,840
quelle stringhe fatte o dal pezzo alfa o

432
00:20:55,840 --> 00:21:00,640
dal pezzo beta, quindi che ne so 0 1 0

433
00:21:00,640 --> 00:21:04,880
or 1 per dire. Questa è un'espressione

434
00:21:04,880 --> 00:21:07,320
regolare che ci dice che le stringhe che

435
00:21:07,320 --> 00:21:09,360
fanno parte di questo linguaggio

436
00:21:09,360 --> 00:21:16,400
regolare sono o 0 oppure 1 1.

437
00:21:16,400 --> 00:21:19,360
Ok?

438
00:21:20,080 --> 00:21:23,840
Se alfa è un'espressione

439
00:21:23,840 --> 00:21:26,360
regolare,

440
00:21:26,360 --> 00:21:28,440
allora

441
00:21:28,440 --> 00:21:32,880
alfa star è un'espressione

442
00:21:32,880 --> 00:21:34,840
regolare.

443
00:21:34,840 --> 00:21:37,440
Cos'è alfa star? Alfa Star è una

444
00:21:37,440 --> 00:21:39,360
concatenazione,

445
00:21:39,360 --> 00:21:43,919
ok, di 0 più volte alfa. Quindi se noi

446
00:21:43,919 --> 00:21:49,320
abbiamo che ne so 1 0 star, questo qua è

447
00:21:49,320 --> 00:21:50,960
il modo compatto di dire che tutte le

448
00:21:50,960 --> 00:21:52,840
stringhe che appartengono a questa

449
00:21:52,840 --> 00:21:54,480
espressione regolare o linguaggio

450
00:21:54,480 --> 00:21:57,200
regolare è

451
00:21:57,200 --> 00:22:06,400
1 10 oppure 1 10 1 10 e così via. Ok?

452
00:22:06,400 --> 00:22:09,120
Al posto di star possiamo avere un altro

453
00:22:09,120 --> 00:22:11,039
simbolo, l'introduco perché poi quando

454
00:22:11,039 --> 00:22:12,600
vedremo macchine toring sta cosa ci

455
00:22:12,600 --> 00:22:14,679
serve. Al posto di Star possiamo avere

456
00:22:14,679 --> 00:22:17,360
un altro simbolo che è il simbolo più

457
00:22:17,360 --> 00:22:19,320
dove ci dice che quel pezzo di

458
00:22:19,320 --> 00:22:21,279
espressione, cioè di quel pezzo di

459
00:22:21,279 --> 00:22:23,520
parola si deve ripetere almeno una

460
00:22:23,520 --> 00:22:26,159
volta. Ok?

461
00:22:26,159 --> 00:22:30,279
Risultato interessante è che

462
00:22:30,279 --> 00:22:32,520
gli automi a stati finiti,

463
00:22:32,520 --> 00:22:35,279
deterministici o non deterministici

464
00:22:35,279 --> 00:22:38,080
sanno riconoscere, sanno decidere tutte

465
00:22:38,080 --> 00:22:40,520
e solo le espressioni regolari, cioè le

466
00:22:40,520 --> 00:22:42,919
espressioni regolari è il potere di

467
00:22:42,919 --> 00:22:44,880
computazione degli automi a stati

468
00:22:44,880 --> 00:22:47,400
finiti. Loro non sanno fare più di

469
00:22:47,400 --> 00:22:52,039
quello. Ok? Cosa interessante è che

470
00:22:52,039 --> 00:22:54,679
questo linguaggio qui, che è il

471
00:22:54,679 --> 00:22:59,000
linguaggio della parentesizzazione,

472
00:22:59,000 --> 00:23:01,799
non è esprimibile tramite un'espressione

473
00:23:01,799 --> 00:23:04,679
regolare. Ok?

474
00:23:04,679 --> 00:23:08,400
Però, come abbiamo detto, noi abbiamo

475
00:23:08,400 --> 00:23:10,960
l'intuizione che questa cosa si può

476
00:23:10,960 --> 00:23:14,120
risolvere e allora dobbiamo introdurre

477
00:23:14,120 --> 00:23:17,760
un altro modello di calcolo. Sì, prego.

478
00:23:17,760 --> 00:23:20,760
Scusi, però perché allora se alfa star è

479
00:23:20,760 --> 00:23:22,799
combinazione di alfa è anch'essa

480
00:23:22,799 --> 00:23:26,159
regolare e la concatenazione alfa beta

481
00:23:26,159 --> 00:23:31,159
abbiamo detto regolare perché eh a^ b^ n

482
00:23:31,159 --> 00:23:33,720
nonostamente
perché lì si sta imponendo

483
00:23:33,720 --> 00:23:35,960
un vincolo sulla lunghezza. Io posso

484
00:23:35,960 --> 00:23:39,360
scrivere a star b star o a + b+, ma

485
00:23:39,360 --> 00:23:42,799
quindi posso avere 5a e 8b.

486
00:23:42,799 --> 00:23:46,400
Ok? Quando diciamo am BM è devono essere

487
00:23:46,400 --> 00:23:48,360
proprio lo stesso numero, ok? E il

488
00:23:48,360 --> 00:23:50,000
problema della degli automi a stati

489
00:23:50,000 --> 00:23:52,880
finiti è che non sanno contare, cioè non

490
00:23:52,880 --> 00:23:54,279
hanno, sostanzialmente non hanno la

491
00:23:54,279 --> 00:23:58,120
memoria, questo è il problema. Ok?

492
00:23:58,120 --> 00:24:00,440
Non sanno contare all'infinito, sapreo

493
00:24:00,440 --> 00:24:02,720
contare se abbiamo un dominio finito.

494
00:24:02,720 --> 00:24:05,200
Ok?

495
00:24:05,200 --> 00:24:07,240
Ah ok. Allora, noi dobbiamo quindi

496
00:24:07,240 --> 00:24:09,240
inventarci un modello di calcolo che sia

497
00:24:09,240 --> 00:24:11,240
un po' più sofisticato. Per quelli che

498
00:24:11,240 --> 00:24:13,559
hanno fatto linguaggi sanno che in

499
00:24:13,559 --> 00:24:15,279
realtà non serve una macchina di

500
00:24:15,279 --> 00:24:17,640
tingonoscere

501
00:24:17,640 --> 00:24:19,240
AMBM.

502
00:24:19,240 --> 00:24:21,640
Esiste un altro automa con una memoria

503
00:24:21,640 --> 00:24:24,600
molto semplice che è la l'automa appila,

504
00:24:24,600 --> 00:24:27,440
però ovviamente non ci buttiamo su

505
00:24:27,440 --> 00:24:31,320
questo. Noi sfruttiamo AMBM per

506
00:24:31,320 --> 00:24:34,960
introdurre le macchine di touring. Ok?

507
00:24:34,960 --> 00:24:36,679
Allora, che cos'è una macchina di

508
00:24:36,679 --> 00:24:40,799
touring? Una macchina di touring

509
00:24:40,799 --> 00:24:44,240
non è la macchina che si vede nel film,

510
00:24:44,240 --> 00:24:47,520
quella è un'altra cosa.

511
00:24:47,520 --> 00:24:50,320
La macchina che si vede nel film

512
00:24:50,320 --> 00:24:52,440
The Bomb che viene utilizzata per

513
00:24:52,440 --> 00:24:54,880
decifrare Enigma. Se andate a Milton

514
00:24:54,880 --> 00:24:57,320
Kins, quella macchina è là, la potete

515
00:24:57,320 --> 00:24:59,880
visitare al museo lì. Quindi la macchina

516
00:24:59,880 --> 00:25:01,799
di Turing non è quella. La macchina di

517
00:25:01,799 --> 00:25:03,200
Turing. Che cos'è la macchina di

518
00:25:03,200 --> 00:25:06,520
Touring? è una macchina astratta

519
00:25:06,520 --> 00:25:10,640
per modellare il calcolo. Ok? è un'idea

520
00:25:10,640 --> 00:25:13,080
che gli era venuta a Turing

521
00:25:13,080 --> 00:25:15,720
negli anni 20-30 perché in quel a quel

522
00:25:15,720 --> 00:25:17,960
tempo i matematici si chiedevano quali

523
00:25:17,960 --> 00:25:20,320
funzioni fossero calcolabili in maniera

524
00:25:20,320 --> 00:25:22,919
automatica e quale funzioni non fossero

525
00:25:22,919 --> 00:25:25,159
calcolabili, quali teoremi potevano

526
00:25:25,159 --> 00:25:27,080
essere dimostrati automaticamente e

527
00:25:27,080 --> 00:25:29,559
quali teoremi non si potessero di

528
00:25:29,559 --> 00:25:31,279
teoricamente.

529
00:25:31,279 --> 00:25:33,679
L'idea di computazione a quel tempo

530
00:25:33,679 --> 00:25:37,159
c'era già c'era

531
00:25:37,159 --> 00:25:39,960
il modello di Charch di Alonso Charch

532
00:25:39,960 --> 00:25:42,960
che era il lambda calcolo eccetera, però

533
00:25:42,960 --> 00:25:45,640
Turing affrontò quei problemi in un

534
00:25:45,640 --> 00:25:48,480
altro modo e si inventò questo modello

535
00:25:48,480 --> 00:25:51,120
astratto di calcolo che noi ora

536
00:25:51,120 --> 00:25:52,799
chiamiamo macchina di Touring. Lui non

537
00:25:52,799 --> 00:25:54,880
aveva chiamato macchina mia, noi la

538
00:25:54,880 --> 00:25:56,919
chiamiamo macchina di Touring. Qual è la

539
00:25:56,919 --> 00:26:00,520
differenza tra una macchina di ting

540
00:26:00,520 --> 00:26:03,320
stati finiti che abbiamo visto finora?

541
00:26:03,320 --> 00:26:05,200
Esattamente come gli automi a stati

542
00:26:05,200 --> 00:26:08,679
finiti, una macchina di tingo

543
00:26:08,679 --> 00:26:11,080
stato interno, quindi ha al proprio

544
00:26:11,080 --> 00:26:14,520
interno la codifica di un programma

545
00:26:14,520 --> 00:26:17,039
tramite stati, essenzialmente come gli

546
00:26:17,039 --> 00:26:20,320
automi stati finiti. Ok?

547
00:26:20,320 --> 00:26:23,240
La differenza sta in quello che la

548
00:26:23,240 --> 00:26:24,799
macchina di Turing può fare con il

549
00:26:24,799 --> 00:26:27,279
nastro. Ok? Noi abbiamo che gli automi a

550
00:26:27,279 --> 00:26:30,679
stati finiti possono fare una sola cosa,

551
00:26:30,679 --> 00:26:34,480
leggere il simbolo,

552
00:26:34,480 --> 00:26:38,640
andare avanti e perso. Ok? Una macchina

553
00:26:38,640 --> 00:26:41,399
di touring ha la possibilità sul nastro

554
00:26:41,399 --> 00:26:44,039
di fare una serie di cose. La macchina

555
00:26:44,039 --> 00:26:46,159
di Touring

556
00:26:46,159 --> 00:26:50,480
ha un nastro infinito in entrambe le

557
00:26:50,480 --> 00:26:53,480
direzioni

558
00:26:57,360 --> 00:27:01,640
e questo qua.

559
00:27:02,279 --> 00:27:04,720
Questo nastro è diviso in celle,

560
00:27:04,720 --> 00:27:06,919
esattamente come per gli automi a stati

561
00:27:06,919 --> 00:27:10,520
finiti. Ok?

562
00:27:13,559 --> 00:27:17,120
In queste celle ci stanno i simboli

563
00:27:17,120 --> 00:27:20,120
della parola che vogliamo riconoscere,

564
00:27:20,120 --> 00:27:22,279
ad esempio

565
00:27:22,279 --> 00:27:28,120
A a A B. Ok?

566
00:27:28,640 --> 00:27:31,480
Poiché la parola sta su questo nastro

567
00:27:31,480 --> 00:27:34,440
infinito, noi dobbiamo delimitare dove

568
00:27:34,440 --> 00:27:37,520
questa parola sia. Quindi abbiamo dei

569
00:27:37,520 --> 00:27:39,520
simboli speciali sul nastro che ci

570
00:27:39,520 --> 00:27:41,320
dicono che in quella cella non ci sta

571
00:27:41,320 --> 00:27:44,679
niente, è il simbolo blanc. Ok? Quindi

572
00:27:44,679 --> 00:27:47,000
la macchina di touring, esattamente come

573
00:27:47,000 --> 00:27:49,039
gli automi a stati finiti, processa

574
00:27:49,039 --> 00:27:52,080
tramite stati, ok? Quindi non ha cose

575
00:27:52,080 --> 00:27:54,840
pensi eccetera. processa tramite stati,

576
00:27:54,840 --> 00:27:56,360
esattamente come gli automi a stati

577
00:27:56,360 --> 00:27:58,519
finiti. Le peculiarità di questa

578
00:27:58,519 --> 00:28:01,720
macchina sono: il nastro su cui opera è

579
00:28:01,720 --> 00:28:04,720
infinito,

580
00:28:06,159 --> 00:28:09,840
la testina che la macchina

581
00:28:09,840 --> 00:28:14,480
usa per leggere

582
00:28:14,720 --> 00:28:17,240
non solo è in grado di leggere un

583
00:28:17,240 --> 00:28:19,320
simbolo, ma è anche in grado di

584
00:28:19,320 --> 00:28:20,840
scrivere.

585
00:28:20,840 --> 00:28:24,679
Ok? Quindi abbiamo una testina che legge

586
00:28:24,679 --> 00:28:27,559
simboli, la stessa testina è in grado di

587
00:28:27,559 --> 00:28:30,360
sovrascrivere, ok? Quindi schiaffiamo

588
00:28:30,360 --> 00:28:34,600
sopra simboli, ok?

589
00:28:34,919 --> 00:28:37,760
Dopodiché la cosa importante è che in

590
00:28:37,760 --> 00:28:39,799
una macchina di touring questa testina

591
00:28:39,799 --> 00:28:45,080
può andare a destra e a sinistra. Ok?

592
00:28:46,320 --> 00:28:49,360
Adesso vedremo un esempio. Quindi recap

593
00:28:49,360 --> 00:28:50,960
una macchina di Touring è

594
00:28:50,960 --> 00:28:53,840
sostanzialmente un automa con un numero

595
00:28:53,840 --> 00:28:57,159
finito di stati. Il potere delle

596
00:28:57,159 --> 00:29:00,320
macchine di touring sta nel fatto che la

597
00:29:00,320 --> 00:29:04,120
macchina su un nastro può leggere e

598
00:29:04,120 --> 00:29:07,399
scrivere e può spostare la testina

599
00:29:07,399 --> 00:29:09,559
avanti e indietro.

600
00:29:09,559 --> 00:29:12,360
Ok? Questa è la peculiarità di una

601
00:29:12,360 --> 00:29:14,640
macchina di touring.

602
00:29:14,640 --> 00:29:17,519
Quando definiamo un programma per la

603
00:29:17,519 --> 00:29:21,120
macchina di Touring,

604
00:29:23,159 --> 00:29:28,000
noi abbiamo, ok lo stato di controllo

605
00:29:28,000 --> 00:29:31,960
funzione delta che controlla il

606
00:29:31,960 --> 00:29:36,080
la testina. Ok.

607
00:29:44,000 --> 00:29:48,200
La macchina di Touring ogni volta che

608
00:29:48,200 --> 00:29:50,120
Allora l'automa stati finiti cosa aveva?

609
00:29:50,120 --> 00:29:52,159
Io sono in un certo stato, leggo un

610
00:29:52,159 --> 00:29:55,399
certo simbolo, transisco in un altro

611
00:29:55,399 --> 00:29:58,200
stato, salto il simbolo. La macchina di

612
00:29:58,200 --> 00:30:00,880
Touring fa un po' più di cose. Sono in

613
00:30:00,880 --> 00:30:04,960
un certo stato, leggo un certo simbolo,

614
00:30:04,960 --> 00:30:06,559
cosa faccio?

615
00:30:06,559 --> 00:30:10,799
transisco in un altro stato e fino a mo

616
00:30:10,799 --> 00:30:13,039
sono come le macchine, come gli automi a

617
00:30:13,039 --> 00:30:16,480
stati finiti standard, però

618
00:30:16,480 --> 00:30:19,640
scrivo anche una cosa sul nastro e

619
00:30:19,640 --> 00:30:21,960
decido se spostare la testino a destra o

620
00:30:21,960 --> 00:30:25,320
a sinistra. Ok? Quindi per ogni

621
00:30:25,320 --> 00:30:28,360
transizione che la macchina fa,

622
00:30:28,360 --> 00:30:31,080
indipendenza di quale stato mi trovo e

623
00:30:31,080 --> 00:30:33,039
quale simbolo sto leggendo, allora

624
00:30:33,039 --> 00:30:35,600
decido in quale altro stato spostarmi,

625
00:30:35,600 --> 00:30:38,200
cosa scrivere sul nastro e dove spostare

626
00:30:38,200 --> 00:30:42,519
la testina. Ok? Chiaro per tutti?

627
00:30:42,519 --> 00:30:45,360
Adesso, prima di introdurle formalmente,

628
00:30:45,360 --> 00:30:49,679
noi vogliamo definire una macchina di

629
00:30:49,679 --> 00:30:52,919
touring che sia in grado di riconoscere

630
00:30:52,919 --> 00:30:57,279
questo linguaggio qui. Ok?

631
00:30:57,600 --> 00:31:00,600
Alright.

632
00:31:08,279 --> 00:31:10,200
Ok. Supponiamo di avere questo sul

633
00:31:10,200 --> 00:31:13,720
nastro. In input c'è A a Aa BB. Noi

634
00:31:13,720 --> 00:31:15,960
vogliamo inventarci una macchina che sia

635
00:31:15,960 --> 00:31:21,080
in grado di fare questo lavoro. Ok?

636
00:31:21,080 --> 00:31:23,519
Ci sono ovviamente tante soluzioni

637
00:31:23,519 --> 00:31:25,200
possibili.

638
00:31:25,200 --> 00:31:29,279
La soluzione che vi propongo io è

639
00:31:29,279 --> 00:31:31,200
questa.

640
00:31:31,200 --> 00:31:34,200
Sì,

641
00:31:34,919 --> 00:31:37,639
B sbarrato sta per blank, cioè c'è la

642
00:31:37,639 --> 00:31:39,799
vuota. Cioè che sul nastro c'è un

643
00:31:39,799 --> 00:31:42,000
bianco,

644
00:31:42,000 --> 00:31:43,760
visto che il nastro è quindi noi abbiamo

645
00:31:43,760 --> 00:31:48,360
scritto a e poi

646
00:31:48,360 --> 00:31:51,399
infinito.
Sì, infinito. Sì.
E questo,

647
00:31:51,399 --> 00:31:52,760
per esempio, è già una cosa molto più

648
00:31:52,760 --> 00:31:55,080
potente dei computer reali perché i

649
00:31:55,080 --> 00:31:56,600
computer reali non hanno una memoria

650
00:31:56,600 --> 00:31:59,639
infinita. Ok?

651
00:31:59,639 --> 00:32:02,559
Alright. Allora, ci sono mille mila modi

652
00:32:02,559 --> 00:32:04,440
per riuscire a riconoscere questo

653
00:32:04,440 --> 00:32:06,039
linguaggio.

654
00:32:06,039 --> 00:32:09,480
Io ve ne propongo uno e vi suggerisco di

655
00:32:09,480 --> 00:32:11,600
pensare così, che immagino che la

656
00:32:11,600 --> 00:32:15,200
stragrande maggioranza di voi abbia,

657
00:32:15,200 --> 00:32:18,039
visto gli studi che fate, un approccio

658
00:32:18,039 --> 00:32:22,120
visivo alla soluzione del problema. Ok?

659
00:32:22,120 --> 00:32:24,679
Se non lo processate visivamente non ci

660
00:32:24,679 --> 00:32:27,080
riuscirete. Eh, ho potuto sperimentare

661
00:32:27,080 --> 00:32:29,159
questo con gli studenti negli anni.

662
00:32:29,159 --> 00:32:30,840
Quelli che non costruiscono immagini

663
00:32:30,840 --> 00:32:32,679
nella propria testa non riescono a

664
00:32:32,679 --> 00:32:34,440
risolvere questo tipo di problema.

665
00:32:34,440 --> 00:32:35,919
Allora, che dovete fare nella vostra

666
00:32:35,919 --> 00:32:37,639
testa?

667
00:32:37,639 --> 00:32:39,880
Io faccio questo. Immagino che gran

668
00:32:39,880 --> 00:32:44,320
parte di voi faccia così. Io guardo nel

669
00:32:44,320 --> 00:32:47,080
nella mia testa, io mi faccio un filmato

670
00:32:47,080 --> 00:32:50,760
di cosa deve succedere alla testina di

671
00:32:50,760 --> 00:32:52,600
questa macchina di Touring. Io la vedo

672
00:32:52,600 --> 00:32:55,120
andare avanti indietro

673
00:32:55,120 --> 00:32:58,519
per fare il suo compito, ok? Dopodiché

674
00:32:58,519 --> 00:33:02,039
si tratta di tradurre in un grafo di

675
00:33:02,039 --> 00:33:04,799
transizione, in un programma delta,

676
00:33:04,799 --> 00:33:06,639
questo andare avanti e indietro è la

677
00:33:06,639 --> 00:33:10,240
testina. Però il passaggio veramente

678
00:33:10,240 --> 00:33:12,240
importante qua è che voi questa cosa la

679
00:33:12,240 --> 00:33:14,960
dovete vedere. Se non la vedete nella

680
00:33:14,960 --> 00:33:18,799
testa, disegnatevela, ok? Cioè è l'unico

681
00:33:18,799 --> 00:33:20,919
modo per riuscire a risolvere questa

682
00:33:20,919 --> 00:33:23,519
cosa. Perché vi dico questo? Perché

683
00:33:23,519 --> 00:33:25,600
negli anni, insomma, mi è capitato di

684
00:33:25,600 --> 00:33:28,320
interagire con vari studenti. Ci sono

685
00:33:28,320 --> 00:33:31,240
quelli che cercano di risolvere questa

686
00:33:31,240 --> 00:33:35,639
cosa parlandosi dentro. Ok? si fanno

687
00:33:35,639 --> 00:33:38,120
delle domande, ma non vedono niente.

688
00:33:38,120 --> 00:33:41,200
Cioè, è difficile così.

689
00:33:41,200 --> 00:33:43,080
Quindi io vi dico esplicitamente, voi vi

690
00:33:43,080 --> 00:33:44,880
dovete costruire questa immagine. Che

691
00:33:44,880 --> 00:33:48,279
cosa vedo io? Io vedo sto bello nastro

692
00:33:48,279 --> 00:33:50,799
con la testina di sopra, ma può essere

693
00:33:50,799 --> 00:33:52,600
qualsiasi cosa, una nuvoletta, un

694
00:33:52,600 --> 00:33:54,760
quadratino come abbiamo fatto là, o una

695
00:33:54,760 --> 00:33:57,240
freccetta, una cosa luminosa. Però

696
00:33:57,240 --> 00:33:59,559
quello che dovete vedere è questa

697
00:33:59,559 --> 00:34:02,120
testina che si sposta avanti e indietro

698
00:34:02,120 --> 00:34:05,679
perché guardando questo filmato che

699
00:34:05,679 --> 00:34:08,560
riuscirete a tirare fuori la funzione di

700
00:34:08,560 --> 00:34:11,399
transizione. Ok?

701
00:34:11,399 --> 00:34:15,879
Allora, soluzione per questo problema è

702
00:34:15,879 --> 00:34:18,679
una soluzione, eh, non la soluzione. Una

703
00:34:18,679 --> 00:34:21,040
soluzione per questo problema è questo

704
00:34:21,040 --> 00:34:22,560
qua.

705
00:34:22,560 --> 00:34:26,280
L'idea sostanzialmente è

706
00:34:26,280 --> 00:34:28,520
la macchina di Touring all'avvio sarà

707
00:34:28,520 --> 00:34:30,839
nello stato iniziale bla bla e la

708
00:34:30,839 --> 00:34:32,879
testina sarà sul carattere sul simbolo

709
00:34:32,879 --> 00:34:35,320
più a sinistra sul primo. Allora, l'idea

710
00:34:35,320 --> 00:34:40,040
è io vedo questo, vedo che è una A, la

711
00:34:40,040 --> 00:34:43,040
cancello, vado alla ricerca dell'ultima

712
00:34:43,040 --> 00:34:45,560
B, la trovo, la cancello, torno

713
00:34:45,560 --> 00:34:48,079
indietro. A questo punto questa A non ci

714
00:34:48,079 --> 00:34:51,720
sarà più. andrò a prendere questa, la

715
00:34:51,720 --> 00:34:54,079
meccio con quest'altra e vado avanti,

716
00:34:54,079 --> 00:34:55,520
indietro, avanti, indietro, avanti,

717
00:34:55,520 --> 00:34:57,800
indietro, fino a quando ho cancellato

718
00:34:57,800 --> 00:35:02,280
tutto. Se il numero di A e di B era lo

719
00:35:02,280 --> 00:35:04,599
stesso, arriverò che c'ho un nastro

720
00:35:04,599 --> 00:35:08,359
vuoto e non c'ho residui strani. Ok? È

721
00:35:08,359 --> 00:35:09,720
chiaro?

722
00:35:09,720 --> 00:35:11,200
Questa cosa la dovete vedere nella

723
00:35:11,200 --> 00:35:14,000
vostra testa funzionare. Dovete vedere

724
00:35:14,000 --> 00:35:17,240
la testina che legge là. Là viene

725
00:35:17,240 --> 00:35:19,800
cancellata, la testina viene spostata in

726
00:35:19,800 --> 00:35:22,920
fondo. Andiamo sull'ultima B,

727
00:35:22,920 --> 00:35:26,400
cancelliamo la B, andiamo sulla prima A,

728
00:35:26,400 --> 00:35:28,920
cancelliamo la A, ultima B, prima A,

729
00:35:28,920 --> 00:35:30,640
ultima B, prima A, ultima B. A un certo

730
00:35:30,640 --> 00:35:33,760
punto il nastro si svuota e diciamo sì,

731
00:35:33,760 --> 00:35:36,200
il numero di A e di B era lo stesso e

732
00:35:36,200 --> 00:35:38,760
noi accettiamo. Prego.
Però dobbiamo

733
00:35:38,760 --> 00:35:41,960
assumere che l'utente non possa inserire

734
00:35:41,960 --> 00:35:45,960
delle stringhe che contengono il blank.

735
00:35:45,960 --> 00:35:48,440
Quello no, quello poi formalizziamo. Ok.

736
00:35:48,440 --> 00:35:51,319
No, l'utente non dà blank strani,
quindi

737
00:35:51,319 --> 00:35:57,000
sono due alfabetti distinto.
Sì. Ok.

738
00:35:57,000 --> 00:36:01,720
Sì. rischiamo di accettare anche un po'

739
00:36:01,720 --> 00:36:03,960
a

740
00:36:03,960 --> 00:36:06,040
dipende come progettiamo la macchina.

741
00:36:06,040 --> 00:36:08,319
Adesso la progettiamo assieme e vediamo

742
00:36:08,319 --> 00:36:11,800
che questo rischio può essere evitato.

743
00:36:11,800 --> 00:36:16,839
Ok? Allora, occhio occhio a alla stringa

744
00:36:16,839 --> 00:36:19,800
di esempi. Ok? Vi ricordo che abbiamo in

745
00:36:19,800 --> 00:36:22,160
testa una strategia visiva. Dobbiamo

746
00:36:22,160 --> 00:36:23,839
vedere sta cosa che va avanti e

747
00:36:23,839 --> 00:36:26,000
indietro. Ok?

748
00:36:26,000 --> 00:36:29,400
Q0 primo stato. Questo è lo stato in cui

749
00:36:29,400 --> 00:36:32,800
la macchina parte. Ok, diamo la

750
00:36:32,800 --> 00:36:36,640
corrente, la macchina si accende in Q0,

751
00:36:36,640 --> 00:36:39,960
testina sul primo simbolo. Ok?

752
00:36:39,960 --> 00:36:44,119
Allora, noi siamo qui, stiamo leggendo

753
00:36:44,119 --> 00:36:46,319
il primo simbolo.

754
00:36:46,319 --> 00:36:49,319
Ok.

755
00:36:53,839 --> 00:36:55,599
Ok.

756
00:36:55,599 --> 00:36:57,760
Stiamo leggendo il primo simbolo.

757
00:36:57,760 --> 00:36:59,960
Allora, guardate questa transizione. La

758
00:36:59,960 --> 00:37:01,720
prima ve la scrivo io, le altre le

759
00:37:01,720 --> 00:37:06,200
facciamo assieme. Se sono in Q0

760
00:37:06,200 --> 00:37:08,920
leggo A,

761
00:37:08,920 --> 00:37:12,880
scrivo blank, quindi lo cancello,

762
00:37:12,880 --> 00:37:16,720
e sposto la testina a destra. Ok, quindi

763
00:37:16,720 --> 00:37:20,480
eravamo qui, lo stiamo cancellando,

764
00:37:20,480 --> 00:37:24,240
spostiamo la testina qui. Ok, chiaro per

765
00:37:24,240 --> 00:37:26,079
tutti il significato di questa etichetta

766
00:37:26,079 --> 00:37:29,599
che abbiamo dato all'arco? Sull'arco

767
00:37:29,599 --> 00:37:33,040
abbiamo qui lo stato iniziale, qui lo

768
00:37:33,040 --> 00:37:37,040
stato finale e sull'etichetta dell'arco

769
00:37:37,040 --> 00:37:39,760
stiamo dicendo cosa leggiamo, cosa

770
00:37:39,760 --> 00:37:42,359
scriviamo, dove spostiamo la testina.

771
00:37:42,359 --> 00:37:44,280
Con questo programmiamo le macchine di

772
00:37:44,280 --> 00:37:47,760
turn. Sì.
E quindi con0 stava indicando

773
00:37:47,760 --> 00:37:50,160
il la

774
00:37:50,160 --> 00:37:52,079
la posizione della tessina che è sulla

775
00:37:52,079 --> 00:37:55,760
prima.
Sì, è lo stato in cui parto
e

776
00:37:55,760 --> 00:37:58,119
quindi dovrei devo definirlo la stessa

777
00:37:58,119 --> 00:38:00,960
cosa,
no? Abbiamo uno stato nella

778
00:38:00,960 --> 00:38:03,160
macchina che si chiama Q0. Potevamo

779
00:38:03,160 --> 00:38:05,359
chiamarlo topolino, è la stessa cosa.

780
00:38:05,359 --> 00:38:08,560
Ok. che che questo Q0 deve avere per

781
00:38:08,560 --> 00:38:11,880
forza una interna.
Sì, perché all'inizio

782
00:38:11,880 --> 00:38:15,160
noi quasi lo vediamo dopo. All'inizio

783
00:38:15,160 --> 00:38:18,240
noi ci aspettiamo un A, andiamo in Q1.

784
00:38:18,240 --> 00:38:21,680
Dopodiché cosa fa, ragazzi? Adesso

785
00:38:21,680 --> 00:38:23,599
facciamo questo esempio. Guardate il

786
00:38:23,599 --> 00:38:26,160
nastro nella vostra mente. Ok? La

787
00:38:26,160 --> 00:38:28,119
testina era lì, ha cancellato una A.

788
00:38:28,119 --> 00:38:32,240
Dove dobbiamo spostare la testina?

789
00:38:33,480 --> 00:38:35,800
Dove dobbiamo spostare la testina? sulla

790
00:38:35,800 --> 00:38:39,280
destra.
Sulla destra. Ok. Mentre la

791
00:38:39,280 --> 00:38:41,920
spostiamo a destra, guardate il nastro.

792
00:38:41,920 --> 00:38:44,839
Ok? Dovete vedere il nastro nella vostra

793
00:38:44,839 --> 00:38:47,240
testa. C'è un primo pezzo di A. Magari

794
00:38:47,240 --> 00:38:49,440
se non vedete le A, coloratele verdi e

795
00:38:49,440 --> 00:38:51,720
il resto coloratelo rosso. Ok? Qualsiasi

796
00:38:51,720 --> 00:38:53,640
cosa che vi permetta di distinguere le

797
00:38:53,640 --> 00:38:56,960
cose, ok? Dobbiamo quindi portare la

798
00:38:56,960 --> 00:38:59,599
testina a sin a destra. Questa è la

799
00:38:59,599 --> 00:39:03,359
vostra destra. Quindi dobbiamo saltare

800
00:39:03,359 --> 00:39:06,920
che cosa prima? Tutte le al

801
00:39:06,920 --> 00:39:12,319
Tutte le A. E allora che facciamo? Eh,

802
00:39:12,319 --> 00:39:15,720
dov'è lui?

803
00:39:15,720 --> 00:39:18,040
Leggo A,

804
00:39:18,040 --> 00:39:21,680
scrivo A, significa la lascio lì dov'è e

805
00:39:21,680 --> 00:39:24,800
vado a destra. Ok?

806
00:39:24,800 --> 00:39:27,040
Quindi, mentre siamo in Q1, la macchina

807
00:39:27,040 --> 00:39:30,280
cosa fa? C'è una pam pam, salta. A un

808
00:39:30,280 --> 00:39:34,640
certo punto la testina cosa incontra?

809
00:39:34,640 --> 00:39:38,000
Guardate l'immagine la vostra testa.

810
00:39:38,000 --> 00:39:41,160
B. Ok. Una volta che arriva alle B, la

811
00:39:41,160 --> 00:39:43,359
macchina per come è definita ora le

812
00:39:43,359 --> 00:39:46,240
supera o no?

813
00:39:46,240 --> 00:39:49,359
Per comeè definita ora?
No,
no, perché

814
00:39:49,359 --> 00:39:51,359
non c'è un arco che gli permetta di

815
00:39:51,359 --> 00:39:53,599
saltare le B. Quindi che facciamo?

816
00:39:53,599 --> 00:39:55,920
Aggiungiamo un'etichetta.

817
00:39:55,920 --> 00:39:59,760
Leggo B, scrivo B, vado avanti.

818
00:39:59,760 --> 00:40:02,400
Ok? Quindi in uno che stiamo facendo?

819
00:40:02,400 --> 00:40:05,040
Stiamo prendendo la testina e la stiamo

820
00:40:05,040 --> 00:40:10,160
spostando a destra. Ok,

821
00:40:10,160 --> 00:40:13,000
ci siete? Guardate il filmato nella

822
00:40:13,000 --> 00:40:15,200
vostra testa.

823
00:40:15,200 --> 00:40:16,839
La vedete la testina che va verso

824
00:40:16,839 --> 00:40:18,560
destra?

825
00:40:18,560 --> 00:40:20,640
Dovete proprio costruire l'immagine.

826
00:40:20,640 --> 00:40:22,520
Come facciamo a sapere che la testina è

827
00:40:22,520 --> 00:40:25,960
arrivata in fondo?

828
00:40:26,000 --> 00:40:29,640
Come fate a saperlo?

829
00:40:29,680 --> 00:40:32,359
Perché lo vedi nella testa. Ok. Questa è

830
00:40:32,359 --> 00:40:34,800
la cosa, se guardate l'immagine vostra

831
00:40:34,800 --> 00:40:36,240
testa, a un certo punto ci sarà un

832
00:40:36,240 --> 00:40:37,920
blank. Come faccio a sapere di essere in

833
00:40:37,920 --> 00:40:40,079
fondo? Perché la testina è arrivata là.

834
00:40:40,079 --> 00:40:42,599
Quindi che faccio?

835
00:40:42,599 --> 00:40:45,880
Leggo blank, lascio blank e vado

836
00:40:45,880 --> 00:40:50,880
indietro e vado in Q2. Ok.

837
00:40:51,079 --> 00:40:55,240
Dove si trova ora la testina?

838
00:40:56,319 --> 00:40:59,319
Attenzione,

839
00:40:59,480 --> 00:41:02,400
secondo. Quelli dietro state seguendo?

840
00:41:02,400 --> 00:41:04,560
Dove si trova la testina dopo tutto sto

841
00:41:04,560 --> 00:41:07,800
gran casino?

842
00:41:08,800 --> 00:41:11,560
Dove?
All'ultima B. Ok, siamo

843
00:41:11,560 --> 00:41:13,480
sull'ultima B. Che ci dobbiamo fare con

844
00:41:13,480 --> 00:41:16,760
questa B?

845
00:41:16,880 --> 00:41:19,200
Dobbiamo chi ha detto toglierla?

846
00:41:19,200 --> 00:41:24,599
Dobbiamo cancellarla. Ok. Come si fa?

847
00:41:24,880 --> 00:41:28,119
Leggo B, scrivo blank e andiamo avanti o

848
00:41:28,119 --> 00:41:30,079
indietro?

849
00:41:30,079 --> 00:41:32,000
Indietro.

850
00:41:32,000 --> 00:41:35,400
E andiamo in Q3. Ok.

851
00:41:35,400 --> 00:41:38,960
A fianco dipl che direzione?
Ah, sì,

852
00:41:38,960 --> 00:41:44,319
quello è scritta coi piedi, scusami.

853
00:41:45,560 --> 00:41:51,760
Ok, da così. Ok, chiaro?

854
00:41:51,760 --> 00:41:54,480
Ok, quindi adesso cosa abbiamo? La

855
00:41:54,480 --> 00:41:57,680
testina a destra. Ok. Dobbiamo andare

856
00:41:57,680 --> 00:42:00,680
dove?

857
00:42:01,680 --> 00:42:05,119
prima wait. So che lo sai un attimo.

858
00:42:05,119 --> 00:42:06,640
Qualcun altro che dobbiamo fare?

859
00:42:06,640 --> 00:42:08,720
Guardate il filmato nella vostra testa.

860
00:42:08,720 --> 00:42:12,200
Chi deve fare la testina?

861
00:42:14,200 --> 00:42:17,040
Dobbiamo andare a sinistra. Quindi,

862
00:42:17,040 --> 00:42:18,880
quali sono i primi caratteri che

863
00:42:18,880 --> 00:42:22,599
incontriamo andando a sinistra?

864
00:42:22,599 --> 00:42:25,520
C'è B. Scrivo B e vado dietro. Dopodiché

865
00:42:25,520 --> 00:42:30,119
che troviamo? Eh, c'è, scrivo a e vado

866
00:42:30,119 --> 00:42:33,640
dietro. Ok? A un certo punto arriveremo

867
00:42:33,640 --> 00:42:36,800
al bordo sinistro. Ok, questa la tiriamo

868
00:42:36,800 --> 00:42:39,559
indietro. La testina arriverà a un certo

869
00:42:39,559 --> 00:42:44,559
punto. Ok, come ci accorgiamo di essere

870
00:42:44,559 --> 00:42:47,280
in fondo a sinistra?

871
00:42:47,280 --> 00:42:50,240
Abbiamo una
Come?
Abbiamo un a

872
00:42:50,240 --> 00:42:53,599
cancellata?
Eh, no, perché la A

873
00:42:53,599 --> 00:42:57,079
cancellata non ci sta più. Cosa c'è là?

874
00:42:57,079 --> 00:42:59,480
C'è un blank. Ok. A quale blank ci

875
00:42:59,480 --> 00:43:01,920
dobbiamo fermare?

876
00:43:01,920 --> 00:43:05,040
Al primo che incontriamo. Ok? Una volta

877
00:43:05,040 --> 00:43:07,480
che incontriamo il primo il primo blank,

878
00:43:07,480 --> 00:43:09,599
cioè quello più a sinistra, in quale

879
00:43:09,599 --> 00:43:11,200
stato di funzionamento della macchina

880
00:43:11,200 --> 00:43:13,520
dobbiamo andare?

881
00:43:13,520 --> 00:43:15,960
Ripartiamo tutto da cavo perché dobbiamo

882
00:43:15,960 --> 00:43:19,160
mappare una A su una B

883
00:43:19,160 --> 00:43:23,760
e quindi semplicemente facciamo questo.

884
00:43:24,160 --> 00:43:28,559
Leggo blank, scrivo blank e vado avanti.

885
00:43:28,559 --> 00:43:32,079
Ok? Quindi questo pezzo di macchina cosa

886
00:43:32,079 --> 00:43:38,079
fa? Cancella A e B uno a un. Ok?

887
00:43:38,079 --> 00:43:41,000
Fino a un certo punto. Ok. E quand'è che

888
00:43:41,000 --> 00:43:44,920
questa macchina si inceppa?

889
00:43:46,720 --> 00:43:51,119
Quando in uscita da Q3 spostando che

890
00:43:51,119 --> 00:43:53,040
abbiamo trovato un blank, lo spostiamo

891
00:43:53,040 --> 00:43:56,720
avanti e la macchina trova nuovamente

892
00:43:56,720 --> 00:43:58,760
blank. Vedetelo con gli occhi, vedetelo

893
00:43:58,760 --> 00:44:01,640
con gli occhi. Il nastro si è svuotato.

894
00:44:01,640 --> 00:44:03,760
C'è un blank, va avanti, c'è un altro

895
00:44:03,760 --> 00:44:05,920
blank perché la parte verde e la parte

896
00:44:05,920 --> 00:44:07,800
rossa si sono ridotte e non ci sta più

897
00:44:07,800 --> 00:44:09,880
niente. Ok?

898
00:44:09,880 --> 00:44:14,000
Quella per noi che cos'è? È il segnale

899
00:44:14,000 --> 00:44:17,079
che c'erano tante A quanto B. In quel

900
00:44:17,079 --> 00:44:19,240
momento noi accettiamo.

901
00:44:19,240 --> 00:44:22,119
Eh.

902
00:44:22,119 --> 00:44:25,119
Ah,

903
00:44:26,359 --> 00:44:29,200
quindi andiamo in Q4

904
00:44:29,200 --> 00:44:31,880
che è lo stato accettante. Leggo Blank,

905
00:44:31,880 --> 00:44:34,920
scrivo blank e vado avanti.

906
00:44:34,920 --> 00:44:37,839
Ok.

907
00:44:37,839 --> 00:44:39,599
Per rispondere alla domanda del nostro

908
00:44:39,599 --> 00:44:42,440
collega, questa macchina può accettare

909
00:44:42,440 --> 00:44:47,280
stringhe strane tipo AB a AB?

910
00:44:47,280 --> 00:44:50,640
No, perché

911
00:44:54,720 --> 00:44:58,160
actually. Yes.

912
00:44:59,839 --> 00:45:03,800
Sì, c'è un errore qua.

913
00:45:07,960 --> 00:45:10,960
Sì.

914
00:45:16,680 --> 00:45:21,480
Perché non le può fare così? M m m

915
00:45:21,480 --> 00:45:24,319
Oplà. B interessante. Non ci avevo mai

916
00:45:24,319 --> 00:45:27,319
pensato.

917
00:45:32,079 --> 00:45:36,400
Blank blank dietro. Ok, questo è uno

918
00:45:36,400 --> 00:45:39,640
stato aggiuntivo.

919
00:45:44,680 --> 00:45:48,000
Come on, man.

920
00:45:51,760 --> 00:45:53,040
Ok, interessante. Non ci avevo mai

921
00:45:53,040 --> 00:45:54,599
pensato quella macchina, così come era

922
00:45:54,599 --> 00:45:57,680
definita, poteva accettare cose strane

923
00:45:57,680 --> 00:46:01,000
AB a AB.

924
00:46:05,480 --> 00:46:09,440
Sì, perché siccome mettevamo

925
00:46:09,440 --> 00:46:13,319
tutto eh come me lo segno qua tutto qui

926
00:46:13,319 --> 00:46:16,319
m

927
00:46:16,839 --> 00:46:20,119
doppia label lì, noi potevamo passare

928
00:46:20,119 --> 00:46:22,280
una A e una B, quindi devono essere in

929
00:46:22,280 --> 00:46:24,559
sequenza. Prima mi leggo le A, poi mi

930
00:46:24,559 --> 00:46:27,160
leggo le B. Ok? Se mettiamo due

931
00:46:27,160 --> 00:46:29,920
etichette là, è chiaro? Qua qua sto un

932
00:46:29,920 --> 00:46:31,960
po' saltando veloce. È chiaro perché

933
00:46:31,960 --> 00:46:34,000
prima era sbagliato?

934
00:46:34,000 --> 00:46:36,280
Perché se mettiamo quell'atto con due

935
00:46:36,280 --> 00:46:40,599
etichette A B, la macchina può vedere

936
00:46:40,599 --> 00:46:44,000
una qualsiasi sequenza di A e B e

937
00:46:44,000 --> 00:46:45,920
saltarle fino alla ricerca del primo

938
00:46:45,920 --> 00:46:47,839
plan. Un attimo. Se io voglio che ci

939
00:46:47,839 --> 00:46:49,920
siano prima tutte le A e poi tutte le B,

940
00:46:49,920 --> 00:46:51,839
allora mi aspetto prima le A e poi le B.

941
00:46:51,839 --> 00:46:55,680
Sì,
ma cancellando gli estremi poi avrei

942
00:46:55,680 --> 00:46:59,079
avuto una B in testa pro
Beh, quello sì,

943
00:46:59,079 --> 00:47:01,079
quello sì. Ok, è anche vero. Sì, sì, sì,

944
00:47:01,079 --> 00:47:04,480
sì. Ahah.

945
00:47:05,319 --> 00:47:07,960
Ma basta che lo fai una volta.
Sì, sì,

946
00:47:07,960 --> 00:47:10,000
sì. Cioè, se io mi inceppo all'andata,

947
00:47:10,000 --> 00:47:13,040
mi incepperò al ritorno, quindi mi fermo

948
00:47:13,040 --> 00:47:18,520
dove in uno dei dei due versi. Ok.

949
00:47:18,520 --> 00:47:21,160
Ah, c'è altro? C'è altro? No, è chiaro

950
00:47:21,160 --> 00:47:24,960
per tutti come funziona questa macchina.

951
00:47:24,960 --> 00:47:26,559
Quindi la differenza rispetto agli

952
00:47:26,559 --> 00:47:29,079
automi a stati finiti è che questa

953
00:47:29,079 --> 00:47:31,800
macchina, a parte transire in un altro

954
00:47:31,800 --> 00:47:34,559
stato, questa macchina scrive sul nastro

955
00:47:34,559 --> 00:47:36,800
e sposta la testina in due direzioni.

956
00:47:36,800 --> 00:47:38,599
Ok? Questa è la differenza sostanziale

957
00:47:38,599 --> 00:47:40,400
di una macchina diuring rispetto ad

958
00:47:40,400 --> 00:47:43,280
automati finiti.

959
00:47:43,280 --> 00:47:46,160
Chiaro? Ok, adesso facciamo una pausa,

960
00:47:46,160 --> 00:47:48,400
10 minuti, poi formalizziamo le macchine

961
00:47:48,400 --> 00:47:49,640
di touring e la condizione di

962
00:47:49,640 --> 00:47:51,760
accettazione.

963
00:47:51,760 --> 00:47:55,440
Allora, cavolo.

964
00:47:58,800 --> 00:48:03,000
Alright, guys, si riparte.

965
00:48:07,839 --> 00:48:09,599
Ok, ritorno velocemente sulle due

966
00:48:09,599 --> 00:48:11,000
macchine diing che abbiamo visto

967
00:48:11,000 --> 00:48:13,839
all'inizio. Ok.

968
00:48:13,839 --> 00:48:16,839
P

969
00:48:17,000 --> 00:48:18,880
la modifica che ho fatto è solo per

970
00:48:18,880 --> 00:48:21,760
avere la certezza che funzioni. Potrebbe

971
00:48:21,760 --> 00:48:23,839
funzionare anche quella di prima, però

972
00:48:23,839 --> 00:48:25,319
cioè mi ci devo mettere un attimo a

973
00:48:25,319 --> 00:48:27,800
capire se i casi strambi li accetto, li

974
00:48:27,800 --> 00:48:30,640
rifiuto, la variante sono più sicuro che

975
00:48:30,640 --> 00:48:33,960
funzioni. Tutto qua. Alrght allora

976
00:48:33,960 --> 00:48:36,839
questo è un modo più o meno, no,

977
00:48:36,839 --> 00:48:38,760
intuitivo di come funzionano le macchine

978
00:48:38,760 --> 00:48:41,760
di Touring. Quindi abbiamo visto che una

979
00:48:41,760 --> 00:48:44,280
macchina di Turing ha nel suo programma

980
00:48:44,280 --> 00:48:46,920
questa codifica. Dato lo stato corrente

981
00:48:46,920 --> 00:48:49,960
è il simbolo che sto leggendo,

982
00:48:49,960 --> 00:48:52,040
transisco in un altro stato, scrivo

983
00:48:52,040 --> 00:48:56,640
qualcosa sul nastro e eh sposta la

984
00:48:56,640 --> 00:48:59,799
testina a destra o a sinistra. Giusto

985
00:48:59,799 --> 00:49:03,040
una nota.

986
00:49:03,599 --> 00:49:07,000
Questo qui,

987
00:49:07,000 --> 00:49:10,400
questo simbolino qua, non è B1, è una

988
00:49:10,400 --> 00:49:16,400
virgola. Ok? Quindi è B/

989
00:49:16,400 --> 00:49:18,079
Bola

990
00:49:18,079 --> 00:49:21,640
freccetta. Ok?

991
00:49:21,640 --> 00:49:24,040
Leggo B, scrivo B e mi muovo a destra.

992
00:49:24,040 --> 00:49:27,839
Ok? Quindi quello non è B1 B' e virgola.

993
00:49:27,839 --> 00:49:30,319
Ok? la mia virgola un po' strana. Alri,

994
00:49:30,319 --> 00:49:32,040
quindi quello che noi dobbiamo fare ora

995
00:49:32,040 --> 00:49:34,200
è formalizzare

996
00:49:34,200 --> 00:49:36,280
la computazione di una macchina di

997
00:49:36,280 --> 00:49:38,400
Touring

998
00:49:38,400 --> 00:49:41,359
e dare le condizioni di accettazione.

999
00:49:41,359 --> 00:49:43,720
Vi faccio notare che questa macchina, a

1000
00:49:43,720 --> 00:49:45,559
differenza degli esempi che vedrete per

1001
00:49:45,559 --> 00:49:47,680
esempio sulle lecture notes disponibili

1002
00:49:47,680 --> 00:49:51,359
online, questa macchina non ha uno stato

1003
00:49:51,359 --> 00:49:54,599
di rifiuto. Questa macchina rifiuta per

1004
00:49:54,599 --> 00:49:57,720
incco. Questa macchina si blocca in uno

1005
00:49:57,720 --> 00:50:01,480
stato non accettante e dice no. Ok? Ci

1006
00:50:01,480 --> 00:50:03,920
sono altri modelli in cui abbiamo degli

1007
00:50:03,920 --> 00:50:07,520
stati esplicitamente per il rifiuto.

1008
00:50:07,520 --> 00:50:09,720
Alcuni le definiscono così. È totalmente

1009
00:50:09,720 --> 00:50:11,799
equivalente. Le nostre macchine non

1010
00:50:11,799 --> 00:50:14,720
hanno stati espliciti di rifiuto. Una

1011
00:50:14,720 --> 00:50:18,000
macchina rifiuta se si inceppa, se si

1012
00:50:18,000 --> 00:50:22,040
ferma in uno stato che non eh che non è

1013
00:50:22,040 --> 00:50:24,359
accettante. Ok? La macchina si ferma in

1014
00:50:24,359 --> 00:50:26,160
un certo stato quando la funzione di

1015
00:50:26,160 --> 00:50:29,079
transizione non è definita per quella

1016
00:50:29,079 --> 00:50:31,520
particolare combinazione stato simbolo.

1017
00:50:31,520 --> 00:50:33,520
Sono in uno stato, leggo in un simbolo,

1018
00:50:33,520 --> 00:50:35,440
vado nella mia tabella, la mia tabella

1019
00:50:35,440 --> 00:50:38,720
non mi dice assolutamente nulla su cosa

1020
00:50:38,720 --> 00:50:40,440
debba fare per quello stato e quel

1021
00:50:40,440 --> 00:50:43,359
simbolo. Faccio mi fermo, la macchina si

1022
00:50:43,359 --> 00:50:46,640
inceppa e siccome si blocca in uno stato

1023
00:50:46,640 --> 00:50:48,200
non accettante, allora per noi la

1024
00:50:48,200 --> 00:50:52,280
risposta è no. Ok?

1025
00:50:52,280 --> 00:50:54,880
Allora, noi dobbiamo adesso formalizzare

1026
00:50:54,880 --> 00:50:58,960
la computazione di macchina di Touring,

1027
00:50:58,960 --> 00:51:01,799
che sarà semplicemente un'estensione di

1028
00:51:01,799 --> 00:51:04,400
cose che abbiamo visto la volta scorsa

1029
00:51:04,400 --> 00:51:06,319
per gli auteti finite, ok? Dobbiamo

1030
00:51:06,319 --> 00:51:08,359
semplicemente farle un pelino più

1031
00:51:08,359 --> 00:51:10,319
sofisticate, però cosa andremo a fare?

1032
00:51:10,319 --> 00:51:12,720
andremo un po' ad arricchire quello che

1033
00:51:12,720 --> 00:51:15,280
abbiamo già visto. Ok, partiamo

1034
00:51:15,280 --> 00:51:17,480
innanzitutto con la definizione di

1035
00:51:17,480 --> 00:51:20,359
macchina di Touring.

1036
00:51:20,359 --> 00:51:22,799
Una macchina di Touring, esattamente

1037
00:51:22,799 --> 00:51:25,319
come gli automi, è definita da alfabeti,

1038
00:51:25,319 --> 00:51:28,079
ste cose qui. Ok, quindi vediamo un po'

1039
00:51:28,079 --> 00:51:31,359
che cosa ci sta dentro.

1040
00:51:31,359 --> 00:51:34,200
Una macchina di Touring è caratterizzata

1041
00:51:34,200 --> 00:51:37,760
dall'alfabeto sigma

1042
00:51:37,760 --> 00:51:41,240
che chiamiamo alfabeto di input, cioè

1043
00:51:41,240 --> 00:51:45,000
sono i simboli che la stringa input può

1044
00:51:45,000 --> 00:51:48,000
avere.

1045
00:51:48,920 --> 00:51:51,559
Ci siete? Poi abbiamo un secondo

1046
00:51:51,559 --> 00:51:53,680
alfabeto

1047
00:51:53,680 --> 00:51:56,440
che chiamiamo gamma.

1048
00:51:56,440 --> 00:51:59,160
Gamma è l'alfabeto

1049
00:51:59,160 --> 00:52:01,240
di nastro.

1050
00:52:01,240 --> 00:52:05,040
Cioè sono tutti i simboli,

1051
00:52:05,040 --> 00:52:08,160
compresi i simboli dell'input, perché

1052
00:52:08,160 --> 00:52:11,760
noi abbiamo che gamma è un sovrazieme di

1053
00:52:11,760 --> 00:52:14,599
sigma. Sono tutti i simboli che possono

1054
00:52:14,599 --> 00:52:16,960
stare a un certo punto sul nastro.

1055
00:52:16,960 --> 00:52:20,599
contengono sia i simboli dell'input

1056
00:52:20,599 --> 00:52:23,559
che eventualmente altri simboli che la

1057
00:52:23,559 --> 00:52:25,880
macchina può scrivere. Perché, ad

1058
00:52:25,880 --> 00:52:29,280
esempio, nel problema AMBM, quello che

1059
00:52:29,280 --> 00:52:30,960
noi facciamo, prendiamo una A, la

1060
00:52:30,960 --> 00:52:32,680
cancelliamo, prendiamo una B, la

1061
00:52:32,680 --> 00:52:35,119
cancelliamo. Un'altra cosa che avremmo

1062
00:52:35,119 --> 00:52:37,240
potuto fare è prendiamo una A, ci

1063
00:52:37,240 --> 00:52:39,280
scriviamo una X di sopra, andiamo in

1064
00:52:39,280 --> 00:52:40,920
fondo, prendiamo una A e B, ci mettiamo

1065
00:52:40,920 --> 00:52:43,920
una Y di sopra, torniamo indietro. Ok?

1066
00:52:43,920 --> 00:52:47,079
Quindi A e B fanno parte dell'alfabeto

1067
00:52:47,079 --> 00:52:49,200
di input perché le stringhe in input

1068
00:52:49,200 --> 00:52:51,079
possono avere questi simboli, ma sul

1069
00:52:51,079 --> 00:52:53,559
nastro ci possono stare altri simboli

1070
00:52:53,559 --> 00:52:55,359
che sono quelli che la macchina è in

1071
00:52:55,359 --> 00:52:58,480
grado di scrivere, quindi X, Y, Z,

1072
00:52:58,480 --> 00:53:01,680
casetta, nuvoletta, ok? Qualsiasi cosa.

1073
00:53:01,680 --> 00:53:04,000
Prego.

1074
00:53:04,000 --> 00:53:06,880
Blank è in gamba.

1075
00:53:06,880 --> 00:53:11,160
Abbiamo quindi il simbolo blank che è il

1076
00:53:11,160 --> 00:53:13,760
simbolo di bianco che è un simbolo che

1077
00:53:13,760 --> 00:53:16,839
fa parte di gamma.

1078
00:53:16,839 --> 00:53:19,599
Ok?

1079
00:53:19,599 --> 00:53:23,040
Alright. Poi, come le gli automi a stati

1080
00:53:23,040 --> 00:53:28,200
finiti abbiamo Q l'insieme degli stati,

1081
00:53:28,200 --> 00:53:30,119
ok?

1082
00:53:30,119 --> 00:53:32,880
Quindi sono tutte le pallette del nostro

1083
00:53:32,880 --> 00:53:34,839
grafo di transizione sono gli stati di

1084
00:53:34,839 --> 00:53:37,520
funzionamento della macchina che sono

1085
00:53:37,520 --> 00:53:39,960
sostanzialmente come quelli degli aut

1086
00:53:39,960 --> 00:53:46,200
finiti. Q è sempre Dov'è? È lui. Q è un

1087
00:53:46,200 --> 00:53:49,280
insieme finito. La macchina ha un

1088
00:53:49,280 --> 00:53:52,319
insieme finito di stati, un insieme

1089
00:53:52,319 --> 00:53:54,839
finito di simboli input, un insieme

1090
00:53:54,839 --> 00:53:57,119
finito di simboli di nastro. Ok? sono

1091
00:53:57,119 --> 00:54:00,960
tutti insiemi finiti.

1092
00:54:01,799 --> 00:54:03,359
Dopodiché

1093
00:54:03,359 --> 00:54:05,880
c'è Q0.

1094
00:54:05,880 --> 00:54:09,960
Q0 è uno degli stati di Q che è

1095
00:54:09,960 --> 00:54:12,880
designato essere lo stato iniziale, cioè

1096
00:54:12,880 --> 00:54:15,240
lo stato in cui la computazione della

1097
00:54:15,240 --> 00:54:18,559
macchina parte.

1098
00:54:18,559 --> 00:54:22,079
Poi abbiamo F.

1099
00:54:22,079 --> 00:54:23,960
Fottinsieme

1100
00:54:23,960 --> 00:54:25,520
di Q.

1101
00:54:25,520 --> 00:54:30,079
sono l'insieme degli stati accettanti,

1102
00:54:30,079 --> 00:54:31,880
ok?

1103
00:54:31,880 --> 00:54:35,079
Possono essere più di uno. Ci sono

1104
00:54:35,079 --> 00:54:36,839
formalismi che dicono che lo stato

1105
00:54:36,839 --> 00:54:38,839
accettante è uno solo, che c'è uno stato

1106
00:54:38,839 --> 00:54:41,160
che rifiuta che è uno solo, è tutta roba

1107
00:54:41,160 --> 00:54:43,760
equivalente, ce la possiamo gestire come

1108
00:54:43,760 --> 00:54:47,839
vogliamo perché sono inter traslabili

1109
00:54:47,839 --> 00:54:51,359
ste cose. Si traslate, si traducono

1110
00:54:51,359 --> 00:54:54,440
dall'uno all'altro. Ok?

1111
00:54:54,440 --> 00:54:57,480
Quindi F è l'insieme degli stati

1112
00:54:57,480 --> 00:55:00,799
accettanti e poi abbiamo delta che è la

1113
00:55:00,799 --> 00:55:03,079
funzione di transizione, cioè che è il

1114
00:55:03,079 --> 00:55:06,559
programma della macchina. Ok?

1115
00:55:06,559 --> 00:55:10,200
Che cos'è delta?

1116
00:55:10,200 --> 00:55:14,880
Delta è una funzione parziale, cioè che

1117
00:55:14,880 --> 00:55:18,040
per alcune input potrebbe non essere

1118
00:55:18,040 --> 00:55:19,760
definita

1119
00:55:19,760 --> 00:55:24,400
che va da Q gamma

1120
00:55:24,400 --> 00:55:26,359
verso Q

1121
00:55:26,359 --> 00:55:31,079
gamma times sinistra destra.

1122
00:55:31,079 --> 00:55:34,599
Quindi delta

1123
00:55:34,799 --> 00:55:39,160
è una funzione che dati uno stato

1124
00:55:39,160 --> 00:55:44,200
corrente e il simbolo che sto leggendo

1125
00:55:44,200 --> 00:55:48,480
determina qual è lo stato successivo,

1126
00:55:48,480 --> 00:55:52,440
qual è il simbolo che scrivo sul nastro,

1127
00:55:52,440 --> 00:55:56,200
ok? E la direzione della testina, cioè

1128
00:55:56,200 --> 00:56:01,559
se se ne va o a destra o a sinistra.

1129
00:56:04,400 --> 00:56:06,920
È chiaro?

1130
00:56:06,920 --> 00:56:09,880
Adesso dobbiamo definire formalmente la

1131
00:56:09,880 --> 00:56:12,160
semantica delle macchine, cioè cos'è per

1132
00:56:12,160 --> 00:56:16,200
noi una computazione, cos'è per noi una

1133
00:56:16,200 --> 00:56:19,359
computazione accettante. Semplicemente

1134
00:56:19,359 --> 00:56:21,200
estenderemo

1135
00:56:21,200 --> 00:56:23,280
quello che abbiamo visto già per gli

1136
00:56:23,280 --> 00:56:26,359
automi a Stati finiti durante la scorsa

1137
00:56:26,359 --> 00:56:30,200
lezione. Ok.

1138
00:56:32,200 --> 00:56:35,039
Questo qua

1139
00:56:35,039 --> 00:56:38,960
per definire una computazione

1140
00:56:38,960 --> 00:56:40,920
di

1141
00:56:40,920 --> 00:56:42,640
una macchina di Touring dobbiamo

1142
00:56:42,640 --> 00:56:47,359
definire cos'è una configurazione

1143
00:56:48,319 --> 00:56:51,559
per M. Ok? Vi ricordate che per gli

1144
00:56:51,559 --> 00:56:53,240
atomi a stati finiti avevamo introdotto

1145
00:56:53,240 --> 00:56:54,520
questo concetto che era la

1146
00:56:54,520 --> 00:56:57,440
configurazione dell'automa.

1147
00:56:57,440 --> 00:56:59,599
Generalmente non si fa, l'abbiamo fatto

1148
00:56:59,599 --> 00:57:01,359
perché ci viene comodo ora perché

1149
00:57:01,359 --> 00:57:02,799
semplicemente dobbiamo estendere il

1150
00:57:02,799 --> 00:57:04,160
concetto. Ok? Che cos'è una

1151
00:57:04,160 --> 00:57:05,880
configurazione per una macchina di

1152
00:57:05,880 --> 00:57:07,839
Touring? Vi ricordate intuitivamente che

1153
00:57:07,839 --> 00:57:09,720
cos'era una configurazione per un automa

1154
00:57:09,720 --> 00:57:12,240
stati finiti?

1155
00:57:12,240 --> 00:57:15,480
Una stringa che aveva lo stato.
A cosa

1156
00:57:15,480 --> 00:57:18,440
serviva?

1157
00:57:19,280 --> 00:57:22,079
atale
la configurazione per un automa

1158
00:57:22,079 --> 00:57:25,119
stati definiti era

1159
00:57:25,119 --> 00:57:28,000
una stringa, ok? Che ci serviva a

1160
00:57:28,000 --> 00:57:30,240
descrivere lo stato corrente di

1161
00:57:30,240 --> 00:57:32,039
esecuzione della macchina, ok? Cioè,

1162
00:57:32,039 --> 00:57:34,720
volevamo capire mentre sta macchina sta

1163
00:57:34,720 --> 00:57:38,280
processando che sta facendo. Ok? E

1164
00:57:38,280 --> 00:57:42,119
quindi che cosa avevamo? Avevamo uno una

1165
00:57:42,119 --> 00:57:45,240
stringa che era formata da uno stato che

1166
00:57:45,240 --> 00:57:47,559
era lo stato corrente della macchina e

1167
00:57:47,559 --> 00:57:50,760
poi una serie di simboli che era la

1168
00:57:50,760 --> 00:57:53,680
parte residua dell'input che la macchina

1169
00:57:53,680 --> 00:57:57,559
stava processando. Ok?

1170
00:57:57,559 --> 00:57:59,920
Intuitivamente per le Turing machine una

1171
00:57:59,920 --> 00:58:03,319
configurazione è sostanzialmente la

1172
00:58:03,319 --> 00:58:07,079
stessa cosa, cioè è una fotografia

1173
00:58:07,079 --> 00:58:09,440
dello stato di avanzamento

1174
00:58:09,440 --> 00:58:12,280
dell'esecuzione di una Turing machine su

1175
00:58:12,280 --> 00:58:16,000
una certa strisca. Ok?

1176
00:58:16,000 --> 00:58:19,960
Adesso, se noi ci pensiamo

1177
00:58:20,240 --> 00:58:23,400
quali sono le informazioni che ci

1178
00:58:23,400 --> 00:58:26,680
servono per catturare

1179
00:58:26,680 --> 00:58:29,000
lo stato di avanzamento dei lavori di

1180
00:58:29,000 --> 00:58:32,559
una tinguring machine,

1181
00:58:33,440 --> 00:58:36,280
scusi.
Posizione,
ok? La posizione di

1182
00:58:36,280 --> 00:58:38,920
cosa?

1183
00:58:38,920 --> 00:58:42,000
Della testina. Ok. Quindi c'è una cosa

1184
00:58:42,000 --> 00:58:45,240
particolare, esattamente come gli automi

1185
00:58:45,240 --> 00:58:47,440
stati finiti, dobbiamo sapere in che

1186
00:58:47,440 --> 00:58:50,200
stato siamo, ok?

1187
00:58:50,200 --> 00:58:54,200
Dobbiamo sapere che c'è sul nastro ed è

1188
00:58:54,200 --> 00:58:55,720
simile agli automi a stati finiti.

1189
00:58:55,720 --> 00:58:58,319
Quella quella sequenza di simboli dopo

1190
00:58:58,319 --> 00:59:01,280
lo stato nella configurazione degli DFA

1191
00:59:01,280 --> 00:59:04,039
che che cos'era? era semplicemente

1192
00:59:04,039 --> 00:59:05,640
quello che rimaneva sul nastro da

1193
00:59:05,640 --> 00:59:08,240
processare. Quindi, esattamente come per

1194
00:59:08,240 --> 00:59:10,680
quelle automi, dobbiamo sapere in che

1195
00:59:10,680 --> 00:59:13,200
stato siamo,

1196
00:59:13,200 --> 00:59:17,079
che ci sta scritto sul nastro e dove sta

1197
00:59:17,079 --> 00:59:18,799
la testina.

1198
00:59:18,799 --> 00:59:20,760
Allora, quello che noi facciamo è

1199
00:59:20,760 --> 00:59:23,599
cambiare leggermente

1200
00:59:23,599 --> 00:59:26,520
la configurazione rispetto a un automa a

1201
00:59:26,520 --> 00:59:28,839
stati finiti. Negli automi a stati

1202
00:59:28,839 --> 00:59:32,000
finiti cosa facevamo? stato resto della

1203
00:59:32,000 --> 00:59:34,760
stringa. Allora, quello che noi facciamo

1204
00:59:34,760 --> 00:59:37,880
semplicemente che lo stato, adesso

1205
00:59:37,880 --> 00:59:39,960
facciamo qualche esempio, per le

1206
00:59:39,960 --> 00:59:42,280
tinguring machine noi non lo mettiamo

1207
00:59:42,280 --> 00:59:44,880
necessariamente all'inizio,

1208
00:59:44,880 --> 00:59:47,760
lo mettiamo in mezzo alla stringa per

1209
00:59:47,760 --> 00:59:51,839
dire dove sta la testina. Ok, tutto qua.

1210
00:59:51,839 --> 00:59:54,760
Cioè, le l'idea di configurazione che

1211
00:59:54,760 --> 00:59:56,440
abbiamo usato per gli automi stati

1212
00:59:56,440 --> 00:59:59,760
finiti la ampliamo leggermente in cui

1213
00:59:59,760 --> 01:00:01,440
diciamo lo stato invece di scriverlo

1214
01:00:01,440 --> 01:00:04,280
sempre all'inizio, lo scriviamo in mezzo

1215
01:00:04,280 --> 01:00:08,280
per dire cos'è che stiamo leggendo. Ok?

1216
01:00:08,280 --> 01:00:11,280
Ad esempio,

1217
01:00:11,280 --> 01:00:14,240
se riprendiamo la macchina di prima,

1218
01:00:14,240 --> 01:00:15,839
eccetera,

1219
01:00:15,839 --> 01:00:18,119
una configurazione per quella macchina

1220
01:00:18,119 --> 01:00:20,799
potrebbe essere

1221
01:00:20,799 --> 01:00:26,079
A Q1 BB.

1222
01:00:26,079 --> 01:00:30,680
Che cosa significa questo?

1223
01:00:30,680 --> 01:00:33,240
Questa configurazione qua ci sta dicendo

1224
01:00:33,240 --> 01:00:37,680
che sul nastro i simboli non blank sono

1225
01:00:37,680 --> 01:00:40,480
a B,

1226
01:00:40,480 --> 01:00:46,000
che lo stato della macchina è Q1

1227
01:00:46,000 --> 01:00:49,039
e che noi stiamo leggendo

1228
01:00:49,039 --> 01:00:51,799
questo simbolo,

1229
01:00:51,799 --> 01:00:55,480
ok? Cioè, quindi semplicemente inserendo

1230
01:00:55,480 --> 01:01:00,280
lo stato all'interno di questa stringa,

1231
01:01:00,280 --> 01:01:02,359
noi siamo in grado di dire dov'è

1232
01:01:02,359 --> 01:01:05,079
collocata la testina. Però l'idea è la

1233
01:01:05,079 --> 01:01:08,240
stessissima, eh, dobbiamo sapere in che

1234
01:01:08,240 --> 01:01:10,640
stato siamo, che cosa c'è rimasto sul

1235
01:01:10,640 --> 01:01:13,640
nastro e dove stiamo guardando. Ok,

1236
01:01:13,640 --> 01:01:15,319
questa informazione non serviva per il

1237
01:01:15,319 --> 01:01:17,960
DFA perché perché un automa stati finiti

1238
01:01:17,960 --> 01:01:20,440
leggeva sempre un solo simbolo che era

1239
01:01:20,440 --> 01:01:22,440
il primo di tutto, poi li scartava uno

1240
01:01:22,440 --> 01:01:24,280
dopo l'altro, no? Siccome qui possiamo

1241
01:01:24,280 --> 01:01:25,880
andare avanti e indietro dobbiamo

1242
01:01:25,880 --> 01:01:28,240
memorizzare un po' di cose. A parte lo

1243
01:01:28,240 --> 01:01:30,559
stato e che cosa c'è sul nastro,

1244
01:01:30,559 --> 01:01:35,240
dobbiamo memorizzare dove che siamo. Ok?

1245
01:01:35,240 --> 01:01:37,640
Questa cosa qua,

1246
01:01:37,640 --> 01:01:40,520
per esempio, è dov'è l'altro esempio?

1247
01:01:40,520 --> 01:01:44,520
Ok. E c

1248
01:01:44,520 --> 01:01:49,160
A B D

1249
01:01:49,640 --> 01:01:52,640
Q1

1250
01:01:53,160 --> 01:01:56,160
blanc.

1251
01:01:57,160 --> 01:02:01,200
Questa è un'altra configurazione

1252
01:02:01,200 --> 01:02:05,160
in cui stiamo dicendo che su un nastro

1253
01:02:05,160 --> 01:02:08,160
c'è ABB,

1254
01:02:08,160 --> 01:02:11,400
che lo stato è Q1

1255
01:02:11,400 --> 01:02:15,279
e che Q1 sta leggendo il primo blank

1256
01:02:15,279 --> 01:02:19,160
sulla sinistra. Ok? Quindi i blank nella

1257
01:02:19,160 --> 01:02:21,000
configurazione

1258
01:02:21,000 --> 01:02:23,359
li mettiamo solamente se sono

1259
01:02:23,359 --> 01:02:27,640
indispensabili. Ok?

1260
01:02:28,119 --> 01:02:32,880
Se scriviamo una cosa di questo tipo,

1261
01:02:49,279 --> 01:02:51,279
quest'altra configurazione, per esempio,

1262
01:02:51,279 --> 01:02:54,400
ci dice che la macchina si trova nello

1263
01:02:54,400 --> 01:02:59,119
stato Q1 che Sul nastro c'è DB, però noi

1264
01:02:59,119 --> 01:03:01,720
stiamo leggendo il primo blank alla

1265
01:03:01,720 --> 01:03:03,400
destra

1266
01:03:03,400 --> 01:03:06,599
di tutta la stringa. Ok? Quindi così noi

1267
01:03:06,599 --> 01:03:08,839
scriviamo le configurazioni. Nelle

1268
01:03:08,839 --> 01:03:10,400
configurazioni inseriamo il simbolo

1269
01:03:10,400 --> 01:03:13,200
blank solo se è indispensabile. Se non

1270
01:03:13,200 --> 01:03:15,520
ci serve non li inseriamo, ok? Perché si

1271
01:03:15,520 --> 01:03:17,920
assume che il resto del nastro è vuoto.

1272
01:03:17,920 --> 01:03:19,599
Ok?

1273
01:03:19,599 --> 01:03:22,599
Allora,

1274
01:03:23,760 --> 01:03:25,880
sì.

1275
01:03:25,880 --> 01:03:28,240
sta facendo riferimento sempre alla che

1276
01:03:28,240 --> 01:03:31,240
ha fatto prima.
Sì e no, è giusto per

1277
01:03:31,240 --> 01:03:33,880
dire change template.

1278
01:03:33,880 --> 01:03:36,880
Oplà.

1279
01:03:39,760 --> 01:03:42,760
Allora,

1280
01:03:43,880 --> 01:03:46,680
adesso introduciamo un po' di

1281
01:03:46,680 --> 01:03:49,119
definizioni che è tutta quella lista di

1282
01:03:49,119 --> 01:03:51,200
cose che abbiamo fatto la volta scorsa.

1283
01:03:51,200 --> 01:03:52,799
configurazione, configurazione

1284
01:03:52,799 --> 01:03:54,960
accettante, computazione, computazione

1285
01:03:54,960 --> 01:03:56,720
parziale, tutte ste cose qua, in maniera

1286
01:03:56,720 --> 01:03:59,920
tale che blocchetto dopo blocchetto

1287
01:03:59,920 --> 01:04:01,640
arriviamo a definire che cos'è una

1288
01:04:01,640 --> 01:04:03,200
computazione per una macchina di

1289
01:04:03,200 --> 01:04:06,520
Touring. Ok?

1290
01:04:06,520 --> 01:04:08,799
Date

1291
01:04:08,799 --> 01:04:11,200
due

1292
01:04:11,200 --> 01:04:14,200
configurazioni

1293
01:04:16,440 --> 01:04:19,799
C1 e C2

1294
01:04:19,799 --> 01:04:23,839
per una macchina M.

1295
01:04:23,839 --> 01:04:26,480
Diciamo

1296
01:04:26,480 --> 01:04:28,200
che

1297
01:04:28,200 --> 01:04:32,400
C2 è,

1298
01:04:33,039 --> 01:04:35,079
come si dirà in italiano il legal

1299
01:04:35,079 --> 01:04:37,599
successor. Legal

1300
01:04:37,599 --> 01:04:40,599
Successor

1301
01:04:41,559 --> 01:04:47,119
di C1 rispetto

1302
01:04:48,160 --> 01:04:50,319
a M

1303
01:04:50,319 --> 01:04:54,079
e lo scriviamo così. C1,

1304
01:04:54,079 --> 01:04:58,119
questo simbolo MC2.

1305
01:04:58,119 --> 01:05:04,760
Se C2 è la configurazione

1306
01:05:07,799 --> 01:05:09,599
che

1307
01:05:09,599 --> 01:05:13,240
M raggiunge

1308
01:05:14,520 --> 01:05:18,160
partendo da C1

1309
01:05:18,160 --> 01:05:22,160
facendo un solo passo.

1310
01:05:25,799 --> 01:05:28,520
secondo

1311
01:05:28,520 --> 01:05:31,520
la funzione delta. Ok? Quindi noi

1312
01:05:31,520 --> 01:05:34,760
diciamo che date due configurazioni C1 e

1313
01:05:34,760 --> 01:05:38,200
C2 per una macchina M. C2 è il

1314
01:05:38,200 --> 01:05:41,359
successivo di C1 secondo la funzione di

1315
01:05:41,359 --> 01:05:45,039
transizione di M. Se C2 è la

1316
01:05:45,039 --> 01:05:47,359
rappresentazione

1317
01:05:47,359 --> 01:05:50,000
di

1318
01:05:50,000 --> 01:05:53,119
eh della configurazione successiva C1

1319
01:05:53,119 --> 01:05:55,240
secondo la funzione di transizione. Ad

1320
01:05:55,240 --> 01:05:57,480
esempio, per la macchina che abbiamo

1321
01:05:57,480 --> 01:06:01,559
visto prima, noi avevamo che ne so Q0 Aa

1322
01:06:01,559 --> 01:06:06,400
BB. Se questo per noi è C1, noi avremo

1323
01:06:06,400 --> 01:06:09,039
che C2

1324
01:06:09,039 --> 01:06:11,200
è

1325
01:06:11,200 --> 01:06:14,200
Q1B,

1326
01:06:14,720 --> 01:06:18,440
perché la prima A l'abbiamo cancellata,

1327
01:06:18,440 --> 01:06:21,640
siamo transiti in 1

1328
01:06:21,640 --> 01:06:25,319
e sul nastro è rimasto AB.

1329
01:06:25,319 --> 01:06:28,160
Ok?

1330
01:06:28,160 --> 01:06:32,359
Quindi questo è C2 e noi abbiamo che C2

1331
01:06:32,359 --> 01:06:34,480
segue C1.

1332
01:06:34,480 --> 01:06:36,240
Secondo M.

1333
01:06:36,240 --> 01:06:41,680
Scusate, se C2 è lazione
successivao.

1334
01:06:43,920 --> 01:06:46,200
Ah, se C2 è la configurazione che M

1335
01:06:46,200 --> 01:06:49,880
raggiunge partendo

1336
01:06:50,319 --> 01:06:52,960
da C1,

1337
01:06:52,960 --> 01:06:56,799
da C1 facendo un solo passo secondo la

1338
01:06:56,799 --> 01:06:59,000
funzione di transizione delta. Ok?

1339
01:06:59,000 --> 01:07:00,559
Stiamo semplicemente complicando le

1340
01:07:00,559 --> 01:07:02,160
cose, però quand'è che C2 è il

1341
01:07:02,160 --> 01:07:05,559
successivo di C1 secondo la macchina M?

1342
01:07:05,559 --> 01:07:09,160
Quando C2 è una fotografia dello stato

1343
01:07:09,160 --> 01:07:13,640
di calcolo di M che descrive la

1344
01:07:13,640 --> 01:07:17,200
computazione di M un passo dopo C1. Ok?

1345
01:07:17,200 --> 01:07:19,839
Se è una cosa strana C2 non è successivo

1346
01:07:19,839 --> 01:07:23,359
di F di C1. Ok?

1347
01:07:23,359 --> 01:07:26,359
Chiaro?

1348
01:07:30,440 --> 01:07:34,680
Ok. Quindi questo è uno

1349
01:07:35,839 --> 01:07:38,839
altro

1350
01:07:39,720 --> 01:07:43,960
la configurazione iniziale. Ok,

1351
01:07:43,960 --> 01:07:45,640
definiamola prima parola e poi la la

1352
01:07:45,640 --> 01:07:48,359
scriviamo. Adesso noi dovremmo andare a

1353
01:07:48,359 --> 01:07:50,720
stabilire, a definire la semantica della

1354
01:07:50,720 --> 01:07:52,760
computazione. Quindi dovremmo dire che

1355
01:07:52,760 --> 01:07:54,680
la macchina parte nello stato

1356
01:07:54,680 --> 01:07:56,640
appropriato, che fa una sequenza di

1357
01:07:56,640 --> 01:07:59,119
passi appropriati, che arriverà in uno

1358
01:07:59,119 --> 01:08:00,880
una configurazione finale, quella

1359
01:08:00,880 --> 01:08:02,599
configurazione sarà accettante,

1360
01:08:02,599 --> 01:08:05,400
eccetera, ci dobbiamo inventare, perché

1361
01:08:05,400 --> 01:08:07,319
niente di tutto ciò è scolpito nella

1362
01:08:07,319 --> 01:08:09,720
pietra, dobbiamo inventare delle

1363
01:08:09,720 --> 01:08:11,319
definizioni che ci permettono di

1364
01:08:11,319 --> 01:08:13,760
formalizzare la definizione di

1365
01:08:13,760 --> 01:08:17,440
computazione accettante. Ok? Allora, fra

1366
01:08:17,440 --> 01:08:19,520
le varie cose che ci dobbiamo inventare,

1367
01:08:19,520 --> 01:08:21,319
siccome dobbiamo inventarci un modo per

1368
01:08:21,319 --> 01:08:23,080
descrivere una macchina che calcola,

1369
01:08:23,080 --> 01:08:26,239
partendo dall'inizio alla fine, quali

1370
01:08:26,239 --> 01:08:30,440
configurazioni dobbiamo

1371
01:08:30,440 --> 01:08:33,960
ci dobbiamo focalizzare

1372
01:08:34,719 --> 01:08:36,679
iniziale,
quella iniziale, cioè ci

1373
01:08:36,679 --> 01:08:39,000
servirà descrivere la configurazione

1374
01:08:39,000 --> 01:08:40,759
iniziale. Allora, ci inventiamo una

1375
01:08:40,759 --> 01:08:45,640
definizione di configurazione iniziale.

1376
01:08:45,640 --> 01:08:49,040
la configurazione

1377
01:08:50,440 --> 01:08:53,440
iniziale

1378
01:08:53,799 --> 01:08:57,679
di m su

1379
01:08:57,679 --> 01:09:00,679
stringa

1380
01:09:00,839 --> 01:09:04,880
w che è fatta dai simboli V1 VN. Qual è

1381
01:09:04,880 --> 01:09:08,279
secondo voi?

1382
01:09:08,719 --> 01:09:11,440
Q0
Q0

1383
01:09:11,440 --> 01:09:15,759
V1
V1 VN.

1384
01:09:16,600 --> 01:09:19,000
Ok, abbiamo dato un nome a questa

1385
01:09:19,000 --> 01:09:21,520
configurazione.
In teoria sinistro di ci

1386
01:09:21,520 --> 01:09:24,319
dovrebbe essere
siccome non lo stiamo

1387
01:09:24,319 --> 01:09:26,319
leggendo e non è indispensabile non lo

1388
01:09:26,319 --> 01:09:28,239
scriviamo,

1389
01:09:28,239 --> 01:09:30,480
ok? Cioè li scriviamo solo quando li

1390
01:09:30,480 --> 01:09:33,799
stiamo guardando.

1391
01:09:38,520 --> 01:09:41,199
Ok? Quindi dobbiamo dovremo descrivere

1392
01:09:41,199 --> 01:09:44,000
la computazione di M. Sta m a un certo

1393
01:09:44,000 --> 01:09:48,239
punto si dovrà fermare. Ok? Quindi

1394
01:09:48,239 --> 01:09:50,080
dobbiamo definire cos'è una

1395
01:09:50,080 --> 01:09:55,679
configurazione finale, ok?

1396
01:09:55,679 --> 01:10:00,040
una configurazione

1397
01:10:03,480 --> 01:10:05,480
finale

1398
01:10:05,480 --> 01:10:08,920
per Migurazione.

1399
01:10:17,440 --> 01:10:19,480
Che

1400
01:10:19,480 --> 01:10:21,199
come la modellereste? Che che

1401
01:10:21,199 --> 01:10:22,440
caratteristica deve avere una

1402
01:10:22,440 --> 01:10:25,600
configurazione finale secondo voi?
Qn e

1403
01:10:25,600 --> 01:10:30,199
poi accanto black.
Attenzione,

1404
01:10:30,199 --> 01:10:33,440
attenzione attenzione attenzione. Il

1405
01:10:33,440 --> 01:10:35,040
fatto che la macchina di prima che

1406
01:10:35,040 --> 01:10:37,920
abbiamo fatto stesse cancellando roba,

1407
01:10:37,920 --> 01:10:39,640
non è detto che lo facciano tutte, eh,

1408
01:10:39,640 --> 01:10:40,880
perché un modo per decidere quel

1409
01:10:40,880 --> 01:10:44,360
linguaggio è scrivere X Y, poi andiamo a

1410
01:10:44,360 --> 01:10:46,040
vedere che è la stessa cosa, eccetera.

1411
01:10:46,040 --> 01:10:48,000
Eh, cioè, quindi la macchina si può

1412
01:10:48,000 --> 01:10:51,199
fermare che sul nastro c'è roba.

1413
01:10:51,199 --> 01:10:53,320
Ragazzi, configurazione finale, non

1414
01:10:53,320 --> 01:10:56,159
configurazione accettante. Cioè una

1415
01:10:56,159 --> 01:10:58,440
configurazione che arriva al finale

1416
01:10:58,440 --> 01:11:00,560
della computazione. Qual è l'ultimo

1417
01:11:00,560 --> 01:11:04,520
passo che fa la macchina?

1418
01:11:06,199 --> 01:11:08,360
Una configurazione finale è una

1419
01:11:08,360 --> 01:11:12,120
configurazione che non ammette

1420
01:11:12,120 --> 01:11:17,480
un successore secondo delta. Tutto qua.

1421
01:11:17,480 --> 01:11:23,000
È una configurazione che non ammette

1422
01:11:25,159 --> 01:11:29,159
un legal successor.

1423
01:11:29,159 --> 01:11:33,320
Come cavolo scritto? Legal.

1424
01:11:36,719 --> 01:11:39,719
Successor

1425
01:11:40,360 --> 01:11:44,199
secondo M.

1426
01:11:46,080 --> 01:11:48,679
Che cos'è? Prego.
Quindi non per forza

1427
01:11:48,679 --> 01:11:52,040
raggiunge uno stampare, no? Perché la

1428
01:11:52,040 --> 01:11:54,280
macchina che abbiamo visto prima si

1429
01:11:54,280 --> 01:11:56,679
potrebbe inceppare. Non so se avete

1430
01:11:56,679 --> 01:11:59,120
visto quel film di Mazzio Capod Caponda,

1431
01:11:59,120 --> 01:12:02,679
si inceppa la macchina, si ferma e no.

1432
01:12:02,679 --> 01:12:05,719
Ok? La nostra è la nostra definizione.

1433
01:12:05,719 --> 01:12:08,480
Su tanti libri troverete che le macchine

1434
01:12:08,480 --> 01:12:10,960
di Turing hanno lo stato per dire no,

1435
01:12:10,960 --> 01:12:12,320
cioè che quando devono dire no si

1436
01:12:12,320 --> 01:12:14,199
spostano in quello stato, si fermano di

1437
01:12:14,199 --> 01:12:17,239
no. Per noi una la macchina di Touring

1438
01:12:17,239 --> 01:12:20,480
se si blocca da qualche parte spersa in

1439
01:12:20,480 --> 01:12:23,000
questa foresta e non sa che fare, quello

1440
01:12:23,000 --> 01:12:26,040
è no. Per dire sì, si deve arrestare

1441
01:12:26,040 --> 01:12:31,800
nello stato in uno stato accettante. Ok.

1442
01:12:32,840 --> 01:12:36,679
Secondo M. Sì. Ok. E delta fa parte di

1443
01:12:36,679 --> 01:12:40,120
M. Ok.

1444
01:12:41,679 --> 01:12:44,679
Alr.

1445
01:12:44,920 --> 01:12:48,199
Where is it? Where is it?

1446
01:12:48,199 --> 01:12:51,199
Delta.

1447
01:12:52,120 --> 01:12:56,440
Che sarà una configurazione accettante?

1448
01:12:56,440 --> 01:12:59,920
Configurazione finale che su accett
una

1449
01:12:59,920 --> 01:13:02,400
configurazione accettante e una

1450
01:13:02,400 --> 01:13:05,760
configurazione finale.

1451
01:13:05,760 --> 01:13:10,199
Una confettante.

1452
01:13:11,320 --> 01:13:13,040
Prima o poi imparerò a scrivere su sto

1453
01:13:13,040 --> 01:13:16,960
coso. Una con accettante

1454
01:13:16,960 --> 01:13:22,159
è una confe.

1455
01:13:24,239 --> 01:13:27,239
Quato

1456
01:13:27,239 --> 01:13:31,120
è accettante.

1457
01:13:31,800 --> 01:13:34,760
Ok, stiamo costruendo

1458
01:13:34,760 --> 01:13:40,080
microblocchi, ok? Di definizioni, poi

1459
01:13:40,080 --> 01:13:42,960
le mettiamo assieme e tiriamo fuori il

1460
01:13:42,960 --> 01:13:46,040
senso, cioè la semantica della di una

1461
01:13:46,040 --> 01:13:47,760
computazione per una macchina di

1462
01:13:47,760 --> 01:13:51,400
Touring. Ok?

1463
01:13:53,320 --> 01:13:56,440
Alright. Quindi abbiamo varie cose

1464
01:13:56,440 --> 01:13:58,120
definite, sappiamo cos'è una

1465
01:13:58,120 --> 01:14:01,520
configurazione, sappiamo cosa è il legal

1466
01:14:01,520 --> 01:14:04,320
successor di una di una configurazione

1467
01:14:04,320 --> 01:14:06,159
secondo una certa macchina, perché se la

1468
01:14:06,159 --> 01:14:08,400
funzione di la funzione di transizione è

1469
01:14:08,400 --> 01:14:10,120
differente, il successore di una certa

1470
01:14:10,120 --> 01:14:12,239
configurazione sarà un altro. Macchine

1471
01:14:12,239 --> 01:14:15,040
differenti fanno cose differenti. Ok?

1472
01:14:15,040 --> 01:14:16,880
Poi abbiamo definito cos'è una

1473
01:14:16,880 --> 01:14:18,800
configurazione

1474
01:14:18,800 --> 01:14:21,600
iniziale, cos'è una configurazione

1475
01:14:21,600 --> 01:14:24,600
finale, cos'è una configurazione

1476
01:14:24,600 --> 01:14:26,480
accettante?

1477
01:14:26,480 --> 01:14:29,159
È una configurazione

1478
01:14:29,159 --> 01:14:31,080
finale non accettante o una

1479
01:14:31,080 --> 01:14:32,600
configurazione

1480
01:14:32,600 --> 01:14:36,480
rifiutante? Che sarà

1481
01:14:36,480 --> 01:14:38,440
finale

1482
01:14:38,440 --> 01:14:40,360
una configurazione finale il cui stato

1483
01:14:40,360 --> 01:14:43,920
non è fra quelli accettanti. Ok.

1484
01:14:43,920 --> 01:14:47,280
Definizione di computazione parziale.

1485
01:14:47,280 --> 01:14:48,880
una

1486
01:14:48,880 --> 01:14:51,880
computazione

1487
01:14:53,040 --> 01:14:56,040
parziale

1488
01:14:56,800 --> 01:15:05,080
di M è semplicemente una sequenza

1489
01:15:07,040 --> 01:15:11,000
di configurazioni.

1490
01:15:13,920 --> 01:15:16,440
C1

1491
01:15:16,440 --> 01:15:18,320
CM

1492
01:15:18,320 --> 01:15:20,320
talé

1493
01:15:20,320 --> 01:15:24,760
C1 è seguito secondo M da C2 che è

1494
01:15:24,760 --> 01:15:29,360
seguito secondo M da C3 bla bla bla fino

1495
01:15:29,360 --> 01:15:32,520
a CM. Ok?

1496
01:15:32,520 --> 01:15:34,920
Quindi una computazione parziale per la

1497
01:15:34,920 --> 01:15:38,159
macchina di Touring è semplicemente una

1498
01:15:38,159 --> 01:15:42,120
sequenza di fotografie del suo stato di

1499
01:15:42,120 --> 01:15:45,719
avanzamento, ok? In cui ogni ogni

1500
01:15:45,719 --> 01:15:47,440
fotografia

1501
01:15:47,440 --> 01:15:51,960
è sensata rispetto alla precedente. Ok?

1502
01:15:51,960 --> 01:15:57,440
Scusi,
ma è parziale perché cm Sì, CM

1503
01:15:57,440 --> 01:15:59,440
non è configurazione finale
perché non

1504
01:15:59,440 --> 01:16:02,280
lo stiamo ripetendo ancora. Ok.
Ok.

1505
01:16:02,280 --> 01:16:04,159
Poi adesso definiamo che cos'è una

1506
01:16:04,159 --> 01:16:07,159
computazione.

1507
01:16:11,280 --> 01:16:15,480
Una computazione

1508
01:16:17,840 --> 01:16:20,239
totale, se volete,

1509
01:16:20,239 --> 01:16:23,320
o completa. Completa mi piace di più.

1510
01:16:23,320 --> 01:16:24,960
Come vedete me lo sto inventando, eh,

1511
01:16:24,960 --> 01:16:31,080
non è che sono cose eh t'ho detto di no.

1512
01:16:32,000 --> 01:16:35,000
completa

1513
01:16:35,760 --> 01:16:38,760
di M. A questo punto invece ci interessa

1514
01:16:38,760 --> 01:16:40,679
la stringa su cui sta processando.

1515
01:16:40,679 --> 01:16:47,960
Quindi una computazione di M su w

1516
01:16:50,639 --> 01:16:54,760
computazione parziale

1517
01:16:59,600 --> 01:17:02,800
D M

1518
01:17:02,800 --> 01:17:07,520
C1 bla bla bla bla CM.

1519
01:17:07,520 --> 01:17:10,120
tale che

1520
01:17:10,120 --> 01:17:11,800
che caratteristiche deve avere questa

1521
01:17:11,800 --> 01:17:14,280
computazione parziale per poterla

1522
01:17:14,280 --> 01:17:19,600
chiamare computazione di m su wigali.

1523
01:17:20,840 --> 01:17:24,280
Sì. Quindi C1

1524
01:17:24,280 --> 01:17:25,840
C1

1525
01:17:25,840 --> 01:17:29,679
è una configurazione

1526
01:17:29,679 --> 01:17:31,400
iniziale

1527
01:17:31,400 --> 01:17:36,280
di MU W e inoltre

1528
01:17:36,280 --> 01:17:41,400
CM
CM è una configurazione finale. cm è

1529
01:17:41,400 --> 01:17:43,199
una

1530
01:17:43,199 --> 01:17:45,880
configurazione

1531
01:17:45,880 --> 01:17:48,880
finale.

1532
01:17:50,600 --> 01:17:53,800
Ci siete?

1533
01:17:54,080 --> 01:17:56,040
Alright.

1534
01:17:56,040 --> 01:17:58,679
Quant andate avanti? Così. Vabboh,

1535
01:17:58,679 --> 01:18:02,000
niente, vuoi far crescere

1536
01:18:02,000 --> 01:18:05,360
una computazione.

1537
01:18:09,000 --> 01:18:16,520
Una computazione di M su w è accettante.

1538
01:18:16,520 --> 01:18:19,000
Se

1539
01:18:19,000 --> 01:18:22,760
se è solo se

1540
01:18:25,560 --> 01:18:28,320
CM è una configurazione accettante.
CM è

1541
01:18:28,320 --> 01:18:33,480
una configurazione accettante. CM è una

1542
01:18:33,480 --> 01:18:36,480
configurazione.

1543
01:18:44,040 --> 01:18:47,880
Ok. Noi diciamo, quindi,

1544
01:18:47,880 --> 01:18:51,719
se noi diamo in input una stringa W a

1545
01:18:51,719 --> 01:18:57,360
una macchina M, la macchina M accetta w

1546
01:18:57,360 --> 01:18:59,159
V

1547
01:18:59,159 --> 01:19:05,080
se la computazione di M su W

1548
01:19:05,080 --> 01:19:08,040
va a finire in una configurazione

1549
01:19:08,040 --> 01:19:10,639
accettata.

1550
01:19:10,639 --> 01:19:13,280
È chiaro? Quindi abbiamo messo tutti i

1551
01:19:13,280 --> 01:19:15,679
pezzettini per arrivare a dire quand'è

1552
01:19:15,679 --> 01:19:18,920
che una macchina di touring accetta.

1553
01:19:18,920 --> 01:19:21,920
Ok.

1554
01:19:22,920 --> 01:19:25,760
Sì,
abbiamo configurazione parziale con

1555
01:19:25,760 --> 01:19:27,600
sequenza di configurazioni.

1556
01:19:27,600 --> 01:19:30,199
Configurazioni legali successive.
Sì,

1557
01:19:30,199 --> 01:19:34,440
sì, qua l'ho messo. Eh, dai. Dov'è che

1558
01:19:34,440 --> 01:19:38,800
sta? In fondo.

1559
01:19:39,320 --> 01:19:42,440
Vedi? Ho messo il simbolo qua C1 seguito

1560
01:19:42,440 --> 01:19:45,440
da C2 seguito da C2. È quel simbolino là

1561
01:19:45,440 --> 01:19:49,880
che ci dice che è legale successivo. Sì.

1562
01:19:49,880 --> 01:19:52,199
Ok. Quindi abbiamo detto che una

1563
01:19:52,199 --> 01:19:55,560
macchina di Turing M accetto una stringa

1564
01:19:55,560 --> 01:19:59,719
W se dando impasto W ad m la

1565
01:19:59,719 --> 01:20:03,000
computazione di M va a parare in una

1566
01:20:03,000 --> 01:20:08,040
configurazione accettante. Ok?

1567
01:20:08,080 --> 01:20:09,840
Sì.

1568
01:20:09,840 --> 01:20:13,560
Cos'è il linguaggio

1569
01:20:13,560 --> 01:20:17,600
di una macchina di touring?

1570
01:20:17,719 --> 01:20:20,560
Il linguaggio di una macchina di Touring

1571
01:20:20,560 --> 01:20:25,159
M, che lo denotiamo LM,

1572
01:20:25,159 --> 01:20:31,239
è l'insieme di tutte le stringhe W

1573
01:20:32,159 --> 01:20:36,040
tali che Mentre processa W e lo scrive

1574
01:20:36,040 --> 01:20:41,440
in questo modo sputa fuori 1 y s. Ok?

1575
01:20:41,440 --> 01:20:44,040
Quindi cos'è il linguaggio di una

1576
01:20:44,040 --> 01:20:46,120
macchina di touring? Il linguaggio di

1577
01:20:46,120 --> 01:20:48,480
una macchina di Touring è l'insieme di

1578
01:20:48,480 --> 01:20:50,639
tutte le stringhe

1579
01:20:50,639 --> 01:20:52,760
sulla quale la macchina di Touring dice

1580
01:20:52,760 --> 01:20:55,840
di sì. Ok? Vi ricordo che la macchina di

1581
01:20:55,840 --> 01:20:58,560
Touring per dire sì su quelle stringhe

1582
01:20:58,560 --> 01:21:02,320
si deve fermare e fermare in uno stato

1583
01:21:02,320 --> 01:21:04,800
accettante, ok?

1584
01:21:04,800 --> 01:21:07,199
E se la macchina di Touring su una certa

1585
01:21:07,199 --> 01:21:09,199
stringa si arresta su uno stato non

1586
01:21:09,199 --> 01:21:11,760
accettante? La macchina sta dicendo sì o

1587
01:21:11,760 --> 01:21:13,800
sta dicendo no?

1588
01:21:13,800 --> 01:21:15,639
Sta dicendo no.

1589
01:21:15,639 --> 01:21:17,840
E se la macchina di Touring processando

1590
01:21:17,840 --> 01:21:20,920
una certa stringa non si ferma mai, che

1591
01:21:20,920 --> 01:21:23,560
cos'è? Sì o no?

1592
01:21:23,560 --> 01:21:25,520
Non appartiene al linguaggio.
Non

1593
01:21:25,520 --> 01:21:27,520
appartiene al linguaggio perché
perché

1594
01:21:27,520 --> 01:21:29,199
non risponde.
Perché la macchina non

1595
01:21:29,199 --> 01:21:31,920
risponde. Cioè la macchina se non si

1596
01:21:31,920 --> 01:21:35,800
ferma per noi è no. Ok. Però è un no un

1597
01:21:35,800 --> 01:21:37,600
po' strano, vedremo poi nelle prossime

1598
01:21:37,600 --> 01:21:39,280
lezioni, perché non è che si ferma per

1599
01:21:39,280 --> 01:21:41,400
dirci di no, non si ferma mai, quindi

1600
01:21:41,400 --> 01:21:44,120
non lo sapremo mai. È un è un po' un

1601
01:21:44,120 --> 01:21:46,400
problema. Ok?

1602
01:21:46,400 --> 01:21:49,800
Noi diciamo e queste sono le ultime

1603
01:21:49,800 --> 01:21:52,400
definizioni, sia

1604
01:21:52,400 --> 01:21:56,360
L un linguaggio,

1605
01:21:57,560 --> 01:22:02,360
una macchina di Touring M

1606
01:22:02,440 --> 01:22:04,040
decide,

1607
01:22:04,040 --> 01:22:08,679
quindi vai che ve lo scrivo proprio.

1608
01:22:08,920 --> 01:22:12,480
M decide,

1609
01:22:12,480 --> 01:22:17,840
guardate la parola, il linguaggio

1610
01:22:21,000 --> 01:22:24,000
L.

1611
01:22:24,040 --> 01:22:30,880
Se e solo se per ogni stringa w

1612
01:22:33,360 --> 01:22:39,040
se W appartiene ad L, allora M

1613
01:22:39,040 --> 01:22:43,159
processando W si arresta e risponde 1. E

1614
01:22:43,159 --> 01:22:47,040
v appartiene a L, allora M processando W

1615
01:22:47,040 --> 01:22:50,560
si arresta e risponde zero. Quindi una

1616
01:22:50,560 --> 01:22:54,120
macchina decide un linguaggio.

1617
01:22:54,120 --> 01:22:57,679
Se su tutte le stringhe che appartengono

1618
01:22:57,679 --> 01:23:01,000
al linguaggio la macchina si ferma e

1619
01:23:01,000 --> 01:23:04,800
dice di sì. Su tutte le stringhe che non

1620
01:23:04,800 --> 01:23:07,480
appartengono al linguaggio la macchina

1621
01:23:07,480 --> 01:23:12,400
si ferma e dice di no.

1622
01:23:12,920 --> 01:23:20,040
Una macchina accetta un linguaggio L.

1623
01:23:20,600 --> 01:23:22,760
Se per tutte le stringhe che

1624
01:23:22,760 --> 01:23:25,560
appartengono al linguaggio la macchina

1625
01:23:25,560 --> 01:23:29,760
si ferma e dice di sì, sulle altre non

1626
01:23:29,760 --> 01:23:34,000
abbiamo garanzia. Ok, recup. Una

1627
01:23:34,000 --> 01:23:37,800
macchina di touring accetta un certo

1628
01:23:37,800 --> 01:23:41,760
linguaggio L.

1629
01:23:41,760 --> 01:23:44,600
Se quindi

1630
01:23:44,600 --> 01:23:48,480
M accetta

1631
01:23:49,159 --> 01:23:52,679
il linguaggio

1632
01:23:53,480 --> 01:23:59,600
L, se per ogni stringa

1633
01:24:00,080 --> 01:24:03,080
dei

1634
01:24:03,880 --> 01:24:06,840
se per ogni stringa proveniente da sigma

1635
01:24:06,840 --> 01:24:09,560
star accade che se V appartiene al

1636
01:24:09,560 --> 01:24:12,239
linguaggio L, allora la macchina si

1637
01:24:12,239 --> 01:24:14,920
arresta e dice di sì.

1638
01:24:14,920 --> 01:24:17,719
Se la macchina se la stringa non

1639
01:24:17,719 --> 01:24:21,679
appartiene ad L, allora la macchina non

1640
01:24:21,679 --> 01:24:24,320
dice di sì. Cioè la macchina potrebbe

1641
01:24:24,320 --> 01:24:26,280
dire di no, la macchina potrebbe non

1642
01:24:26,280 --> 01:24:29,000
fermarsi. Ok? Quindi il fatto che una

1643
01:24:29,000 --> 01:24:32,440
macchina decida un linguaggio ha una

1644
01:24:32,440 --> 01:24:34,480
proprietà più forte per noi, perché si

1645
01:24:34,480 --> 01:24:36,440
accetta ogni volta che deve dire si

1646
01:24:36,440 --> 01:24:38,560
accetta il linguaggio L, significa che

1647
01:24:38,560 --> 01:24:40,280
ogni volta che deve dire di sì, la

1648
01:24:40,280 --> 01:24:43,199
macchina si ferma e dice sì.

1649
01:24:43,199 --> 01:24:45,880
Se deve dire di no, la macchina potrebbe

1650
01:24:45,880 --> 01:24:48,040
fermarsi e dire di no, potrebbe non

1651
01:24:48,040 --> 01:24:50,800
fermarsi mai, eccetera. Se invece

1652
01:24:50,800 --> 01:24:53,920
diciamo che una macchina decide un certo

1653
01:24:53,920 --> 01:24:56,600
linguaggio L, allora questa per noi è

1654
01:24:56,600 --> 01:24:58,239
una garanzia un po' più forte perché

1655
01:24:58,239 --> 01:25:00,880
ogni volta che deve dire di sì si ferma

1656
01:25:00,880 --> 01:25:03,119
e dice di sì.

1657
01:25:03,119 --> 01:25:04,880
Ogni volta che deve dire di no, la

1658
01:25:04,880 --> 01:25:07,920
macchina si ferma e dice di no. È

1659
01:25:07,920 --> 01:25:11,080
chiaro? Quindi

1660
01:25:11,080 --> 01:25:13,760
il fatto che una macchina decida e non

1661
01:25:13,760 --> 01:25:16,480
semplicemente accetti un linguaggio per

1662
01:25:16,480 --> 01:25:19,239
noi è fonte di una certa garanzia,

1663
01:25:19,239 --> 01:25:21,719
perché ogni volta che noi diamo in input

1664
01:25:21,719 --> 01:25:23,600
una stringa alla macchina, la macchina

1665
01:25:23,600 --> 01:25:27,040
si fermerà per darci la risposta. Ok? Se

1666
01:25:27,040 --> 01:25:30,520
invece la macchina semplicemente accetta

1667
01:25:30,520 --> 01:25:33,400
un linguaggio L, non è che lo decide, ma

1668
01:25:33,400 --> 01:25:36,480
lo accetta, significa che ogni volta che

1669
01:25:36,480 --> 01:25:38,440
deve accettare, ecco perché usiamo

1670
01:25:38,440 --> 01:25:40,119
questa parola, quindi ogni volta che

1671
01:25:40,119 --> 01:25:43,679
deve dire di sì, la macchina si ferma e

1672
01:25:43,679 --> 01:25:47,400
dice sì. Quando la macchina deve dire di

1673
01:25:47,400 --> 01:25:50,040
no, non dà garanzia di risposta.

1674
01:25:50,040 --> 01:25:53,400
Potrebbe fermarsi e dire di no, potrebbe

1675
01:25:53,400 --> 01:25:55,880
non fermarsi.

1676
01:25:55,880 --> 01:25:58,880
Prego.

1677
01:25:58,960 --> 01:26:03,679
Se per una stringa

1678
01:26:03,760 --> 01:26:05,840
che risponde di sì che non appartiene a

1679
01:26:05,840 --> 01:26:10,239
L.
Eh, quella è un'altra cosa.

1680
01:26:10,239 --> 01:26:12,639
Noi definiamo così, dato un linguaggio,

1681
01:26:12,639 --> 01:26:15,080
se esiste una macchina che ogni volta

1682
01:26:15,080 --> 01:26:16,320
che su tutte le stringhe che

1683
01:26:16,320 --> 01:26:18,400
appartengono a L si ferma e dice di sì e

1684
01:26:18,400 --> 01:26:20,239
tutte le stringhe che non appartengono a

1685
01:26:20,239 --> 01:26:22,679
L si ferma e dice di no. Allora, la

1686
01:26:22,679 --> 01:26:24,840
macchina diciamo che sta decidendo il

1687
01:26:24,840 --> 01:26:27,520
linguaggio. Se invece per un linguaggio

1688
01:26:27,520 --> 01:26:29,480
Lina

1689
01:26:29,480 --> 01:26:31,119
per le stringhe che appartengono al

1690
01:26:31,119 --> 01:26:33,719
linguaggio si ferma e dice di sì, ma per

1691
01:26:33,719 --> 01:26:35,760
le stringhe che non appartengono al

1692
01:26:35,760 --> 01:26:39,080
linguaggio la macchina non dà garanzia

1693
01:26:39,080 --> 01:26:41,000
di risposta. Sicuramente non sbaglia,

1694
01:26:41,000 --> 01:26:43,119
non si ferma e dice di sì. O non si

1695
01:26:43,119 --> 01:26:45,600
ferma proprio o si ferma e dice di no.

1696
01:26:45,600 --> 01:26:47,520
In quel caso diciamo che la macchina sta

1697
01:26:47,520 --> 01:26:50,280
accettando il linguaggio. Ok? Usiamo

1698
01:26:50,280 --> 01:26:52,440
questi due termini distinti per far

1699
01:26:52,440 --> 01:26:54,840
riferimento a queste due casistiche

1700
01:26:54,840 --> 01:26:57,960
perché ci saranno linguaggi che saranno

1701
01:26:57,960 --> 01:27:00,639
decidibili, cioè ci saranno ci sono

1702
01:27:00,639 --> 01:27:03,280
linguaggi per i quali avremo macchine

1703
01:27:03,280 --> 01:27:05,080
che ogni volta si fermano e ti dicono

1704
01:27:05,080 --> 01:27:07,880
sì, no. Ci sono linguaggi che mostreremo

1705
01:27:07,880 --> 01:27:11,119
essere accettabili ma non decidibili,

1706
01:27:11,119 --> 01:27:13,199
cioè linguaggi per i quali abbiamo un

1707
01:27:13,199 --> 01:27:15,920
algoritmo che se dobbiamo dire di sì lo

1708
01:27:15,920 --> 01:27:17,840
sappiamo fare in tempo finito, se

1709
01:27:17,840 --> 01:27:20,040
dobbiamo dire di no l'algoritmo potrebbe

1710
01:27:20,040 --> 01:27:22,199
non terminare mai e quelli ovviamente

1711
01:27:22,199 --> 01:27:25,840
sono problemi più tosti. Ok, prego. Si

1712
01:27:25,840 --> 01:27:29,480
può affermare che quindi con

1713
01:27:29,480 --> 01:27:31,800
noi stiamo a intendere che eh la

1714
01:27:31,800 --> 01:27:34,040
macchina di touring va a valutare la

1715
01:27:34,040 --> 01:27:36,440
classe di problemi, mentre con accetta

1716
01:27:36,440 --> 01:27:38,520
va a valutare un singolo problema. No,

1717
01:27:38,520 --> 01:27:41,440
no, no, no, no. Decidere un linguaggio e

1718
01:27:41,440 --> 01:27:43,400
accettare un linguaggio fa sempre

1719
01:27:43,400 --> 01:27:46,040
riferimento all'area semantica del

1720
01:27:46,040 --> 01:27:47,960
stabilire se una stringa appartiene o

1721
01:27:47,960 --> 01:27:51,000
meno a quel linguaggio. Quindi decidere

1722
01:27:51,000 --> 01:27:55,080
L, cioè una macchina decide L significa

1723
01:27:55,080 --> 01:27:57,239
che ogni volta che gli diamo una stringa

1724
01:27:57,239 --> 01:27:59,920
input alla macchina e la macchina deve

1725
01:27:59,920 --> 01:28:02,719
stabilire se la stringa sta dentro L o

1726
01:28:02,719 --> 01:28:06,760
meno. Se la macchina M decide L su

1727
01:28:06,760 --> 01:28:10,040
quella stringa W si fermerà sempre per

1728
01:28:10,040 --> 01:28:13,760
dire o sì o no. Se la macchina ML lo

1729
01:28:13,760 --> 01:28:18,199
accetta solamente, riceve in input W, la

1730
01:28:18,199 --> 01:28:20,320
macchina se deve rispondere di sì lo

1731
01:28:20,320 --> 01:28:22,960
farà in tempo finito. Se la macchina

1732
01:28:22,960 --> 01:28:25,440
deve rispondere di no, potrebbe non

1733
01:28:25,440 --> 01:28:27,679
rispondere mai.

1734
01:28:27,679 --> 01:28:32,440
Quindi noi entrambe, diciamo, eh vengono

1735
01:28:32,440 --> 01:28:34,920
accettate in input stringhe, soltanto

1736
01:28:34,920 --> 01:28:36,639
che il decidibile racchiude

1737
01:28:36,639 --> 01:28:39,199
l'accettazione e quindi essendo

1738
01:28:39,199 --> 01:28:41,320
indecidibile significa che la macchina

1739
01:28:41,320 --> 01:28:43,560
si ferma.

1740
01:28:43,560 --> 01:28:45,239
Se una macchina decide un certo

1741
01:28:45,239 --> 01:28:48,760
linguaggio L ti dà garanzia di risposta.

1742
01:28:48,760 --> 01:28:50,280
Ma è più potente come termine, tra

1743
01:28:50,280 --> 01:28:53,520
virgolette, la decisione o la citazione?

1744
01:28:53,520 --> 01:28:55,880
Dipende cosa definisci per potente. Tu

1745
01:28:55,880 --> 01:28:58,760
hai che i linguaggi accettabili sono un

1746
01:28:58,760 --> 01:29:01,440
sovrazieme dei linguaggi decidibili.

1747
01:29:01,440 --> 01:29:04,000
Adesso cosa definisci potente? E dipende

1748
01:29:04,000 --> 01:29:05,520
dalla tua definizione. Quello che ti sto

1749
01:29:05,520 --> 01:29:08,280
dicendo è che ci sono linguaggi per i

1750
01:29:08,280 --> 01:29:10,760
quali abbiamo macchine di touring che

1751
01:29:10,760 --> 01:29:14,159
sanno sanno fare il loro lavoro, cioè

1752
01:29:14,159 --> 01:29:16,679
per ogni stringa si fermano sempre e ti

1753
01:29:16,679 --> 01:29:18,960
dicono "Guarda, sì, guarda, no". Ci sono

1754
01:29:18,960 --> 01:29:21,440
linguaggi che sono talmente difficili da

1755
01:29:21,440 --> 01:29:24,080
da poter essere

1756
01:29:24,080 --> 01:29:26,880
risolti, ok? Mi serviva un'altra parola,

1757
01:29:26,880 --> 01:29:28,920
tale per cui là quello che al più una

1758
01:29:28,920 --> 01:29:30,800
macchina di Touring è in grado di fare è

1759
01:29:30,800 --> 01:29:33,400
che per le stringhe sulle quali deve

1760
01:29:33,400 --> 01:29:37,040
rispondere sì, si ferma e si dice sì,

1761
01:29:37,040 --> 01:29:40,600
questa stringa fa parte di L, però ci

1762
01:29:40,600 --> 01:29:42,440
potrebbero essere delle stringhe per le

1763
01:29:42,440 --> 01:29:44,360
quali la macchina di Turing le riceve in

1764
01:29:44,360 --> 01:29:46,520
input, dovrebbe dire di no. Adesso la

1765
01:29:46,520 --> 01:29:48,719
macchina di Turing non sbaglia. Cioè,

1766
01:29:48,719 --> 01:29:52,040
non è che ti dice sì per no, però non ti

1767
01:29:52,040 --> 01:29:55,119
risponde sì, nel senso che o si ferma e

1768
01:29:55,119 --> 01:29:58,440
dice no o non si ferma proprio. Ma qual

1769
01:29:58,440 --> 01:30:00,080
è il problema di queste macchine? Poi lo

1770
01:30:00,080 --> 01:30:03,159
vedremo nella prossima lezione.

1771
01:30:03,159 --> 01:30:05,040
Se noi abbiamo che un certo linguaggio è

1772
01:30:05,040 --> 01:30:07,520
solamente accettato da una macchina e

1773
01:30:07,520 --> 01:30:09,239
quello per noi è un po' un problema

1774
01:30:09,239 --> 01:30:11,920
perché ok, facciamo partire l'algoritmo,

1775
01:30:11,920 --> 01:30:13,960
sta girando da 2 anni, ancora non

1776
01:30:13,960 --> 01:30:16,320
abbiamo risposta e che facciamo?

1777
01:30:16,320 --> 01:30:18,040
aspettiamo. Cioè, quello tra un po' si

1778
01:30:18,040 --> 01:30:20,159
ferma e dice sì o non si fermerà mai.

1779
01:30:20,159 --> 01:30:22,719
Boh. Invece quando abbiamo la garanzia

1780
01:30:22,719 --> 01:30:24,360
che il linguaggio è deciso dalla

1781
01:30:24,360 --> 01:30:26,040
macchina,

1782
01:30:26,040 --> 01:30:28,920
la macchina sta computando e sono 2 anni

1783
01:30:28,920 --> 01:30:30,639
e lì noi sappiamo che prima o poi si

1784
01:30:30,639 --> 01:30:33,239
arresta.

1785
01:30:33,239 --> 01:30:34,760
Capite qual è la differenza? Quindi, in

1786
01:30:34,760 --> 01:30:36,960
conclusione, problemi decidibili sono un

1787
01:30:36,960 --> 01:30:39,280
sottoinsieme di problemi accettabili,
sì

1788
01:30:39,280 --> 01:30:40,800
che quelli poi li chiameremo

1789
01:30:40,800 --> 01:30:43,360
semidecidibile, però son cose che

1790
01:30:43,360 --> 01:30:46,119
vedremo nelle lezioni successive. Ok?

1791
01:30:46,119 --> 01:30:47,760
Dopo l'introduzione delle macchine di

1792
01:30:47,760 --> 01:30:49,760
touring, prossima lezione faremo un po'

1793
01:30:49,760 --> 01:30:53,600
di esercizi su macchine di touring. Ok?

1794
01:30:53,600 --> 01:30:57,080
Buona serata.