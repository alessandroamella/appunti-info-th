1
00:00:00,000 --> 00:00:03,000
Ok,

2
00:00:09,519 --> 00:00:12,880
iniziamo. Ok,

3
00:00:34,040 --> 00:00:39,520
ok, ok. Ultime due lezioni

4
00:00:39,520 --> 00:00:41,600
espressamente su NP. Poi ovviamente

5
00:00:41,600 --> 00:00:44,120
avremo altre cose, però ultime due

6
00:00:44,120 --> 00:00:46,399
lezioni che faremo sulla espressamente

7
00:00:46,399 --> 00:00:48,280
sulla classe NP, poi iniziamo a vedere

8
00:00:48,280 --> 00:00:51,640
classi strane diverse. Oggi per la

9
00:00:51,640 --> 00:00:54,480
vostra gioia riduzioni, vediamo altri

10
00:00:54,480 --> 00:00:59,879
problemi NP completi e prossima volta

11
00:00:59,879 --> 00:01:02,440
teorema di Cook. Tutto tutto quello che

12
00:01:02,440 --> 00:01:03,760
abbiamo fatto finora partiva

13
00:01:03,760 --> 00:01:07,280
dall'assunzione che SAT era NP completo.

14
00:01:07,280 --> 00:01:08,920
Ancora non l'abbiamo dimostrato,

15
00:01:08,920 --> 00:01:11,759
l'abbiamo assunto, lo dimostreremo la

16
00:01:11,759 --> 00:01:15,119
prossima volta. Ok? è un teorema molto

17
00:01:15,119 --> 00:01:17,640
lungo, cioè la dimostrazione è molto

18
00:01:17,640 --> 00:01:20,400
lunga, non è particolarmente intricata,

19
00:01:20,400 --> 00:01:23,400
però è lunga e richiederà una lezione

20
00:01:23,400 --> 00:01:26,920
intera riuscire a a vederla assieme.

21
00:01:26,920 --> 00:01:29,840
Dopodiché inizieremo a vedere classi

22
00:01:29,840 --> 00:01:32,600
oltre NP, cose che non sono in NP, cose

23
00:01:32,600 --> 00:01:35,640
che stanno dentro P. Poi vedremo nelle

24
00:01:35,640 --> 00:01:37,799
lezioni successive introdurremo

25
00:01:37,799 --> 00:01:39,759
complessità spaziale perché ancora non

26
00:01:39,759 --> 00:01:42,640
l'abbiamo vista. Ci siamo semplicemente

27
00:01:42,640 --> 00:01:44,960
occupate di quanto tempo ci mette la

28
00:01:44,960 --> 00:01:47,479
macchina, però non ci siamo mai chiesti

29
00:01:47,479 --> 00:01:49,439
quanta memoria usa la macchina, ok?

30
00:01:49,439 --> 00:01:52,360
Quella è una cosa che vedremo poi nelle

31
00:01:52,360 --> 00:01:55,119
nelle prossime lezioni, ok? complessità

32
00:01:55,119 --> 00:01:59,000
spaziale. Poi dovremmo farcela

33
00:01:59,000 --> 00:02:01,680
a vedere in tempo

34
00:02:01,680 --> 00:02:04,439
oracoli,

35
00:02:04,439 --> 00:02:08,200
classi di funzioni, ma velocemente, che

36
00:02:08,200 --> 00:02:10,679
finora ci siamo sempre occupati di

37
00:02:10,679 --> 00:02:13,200
decidere se bla. Ok, ma se invece noi

38
00:02:13,200 --> 00:02:14,480
vogliamo proprio calcolarli il

39
00:02:14,480 --> 00:02:16,400
risultato, qual è la classe di

40
00:02:16,400 --> 00:02:19,040
complessità? Quindi una lezione sarà

41
00:02:19,040 --> 00:02:21,480
dedicata a quello, ma molto veloce. E

42
00:02:21,480 --> 00:02:26,239
poi credo che ultima lezione, ultima

43
00:02:26,239 --> 00:02:29,280
lezione facciamo un mok exam, vediamo

44
00:02:29,280 --> 00:02:32,400
una traccia assieme e la la svolgiamo

45
00:02:32,400 --> 00:02:35,040
assieme, ok? Così vediamo un po' come

46
00:02:35,040 --> 00:02:38,319
come si fa.

47
00:02:39,000 --> 00:02:42,599
Come tutto nelle prossime? Perché per

48
00:02:42,599 --> 00:02:45,760
programma dobbiamo fare 56 ore, quindi

49
00:02:45,760 --> 00:02:48,959
28 lezioni. Otto lezioni compresa

50
00:02:48,959 --> 00:02:51,959
questa. Quindi se guardate l'orario,

51
00:02:51,959 --> 00:02:54,480
le prossime otto lezioni sono tutte

52
00:02:54,480 --> 00:02:56,360
quelle che abbiamo, non ne posso saltare

53
00:02:56,360 --> 00:02:58,760
nessuna, quindi ci sarà la lezione prima

54
00:02:58,760 --> 00:03:01,040
del primo maggio. Sì, cioè ci dobbiamo

55
00:03:01,040 --> 00:03:02,560
vedere anche settimana prossima perché

56
00:03:02,560 --> 00:03:04,720
purtroppo non mi hanno dato margine,

57
00:03:04,720 --> 00:03:07,159
sono stato male e quelle due lezioni

58
00:03:07,159 --> 00:03:08,640
sono andate. Sennò queste qua ve le

59
00:03:08,640 --> 00:03:10,640
abbonavo, eh. ce ne andavamo tutti

60
00:03:10,640 --> 00:03:12,319
quanti allegramente in vacanza,

61
00:03:12,319 --> 00:03:16,360
purtroppo non abbiamo potuto. Ok? Ehm,

62
00:03:16,360 --> 00:03:18,120
alright. Quindi questo è il programma.

63
00:03:18,120 --> 00:03:20,519
Quindi no, quante lezioni sono? Sono

64
00:03:20,519 --> 00:03:22,519
otto lezioni. Le faremo tutte. Tutte

65
00:03:22,519 --> 00:03:24,280
quelle che vedete in orario. Purtroppo

66
00:03:24,280 --> 00:03:26,480
ce le dobbiamo fare tutte fino alla fine

67
00:03:26,480 --> 00:03:31,560
perché non ne possiamo saltare. Alrght.

68
00:03:31,560 --> 00:03:34,480
Ok. Quindi vedremo oggi due problemi. Un

69
00:03:34,480 --> 00:03:36,959
problema, due problemi NP completi. Un

70
00:03:36,959 --> 00:03:40,239
problema prima della pausa, un problema

71
00:03:40,239 --> 00:03:42,480
dopo la pausa.

72
00:03:42,480 --> 00:03:45,640
Vedremo le loro riduzioni. Uno di loro

73
00:03:45,640 --> 00:03:47,439
credo che il problema che vediamo dopo

74
00:03:47,439 --> 00:03:50,560
la pausa lo conosciate già. L'avete

75
00:03:50,560 --> 00:03:53,959
visto in altre salse. Oggi vedremo che è

76
00:03:53,959 --> 00:03:58,720
un problema NP completo. Ok.

77
00:03:58,720 --> 00:04:00,519
Il problema del Napac, probabilmente

78
00:04:00,519 --> 00:04:02,439
l'avete visto in ottimizzazione o

79
00:04:02,439 --> 00:04:06,360
ricerca operativa, la la programmazione

80
00:04:06,360 --> 00:04:08,360
lineare intera è un problema NP

81
00:04:08,360 --> 00:04:10,720
completo. Oggi vedremo vedremo come si

82
00:04:10,720 --> 00:04:12,439
fa. Si fa una riduzione si fa una

83
00:04:12,439 --> 00:04:15,239
riduzione da un problema NP completo e

84
00:04:15,239 --> 00:04:18,440
mostreremo che Napsak e quindi tutta la

85
00:04:18,440 --> 00:04:20,720
programmazione lineare intera, perché

86
00:04:20,720 --> 00:04:22,800
Napsak è un caso di programmazione

87
00:04:22,800 --> 00:04:26,199
lineare intera, è NP completa. Ok?

88
00:04:26,199 --> 00:04:28,960
Alright. Allora, il primo problema che

89
00:04:28,960 --> 00:04:34,199
vediamo è exact.

90
00:04:40,520 --> 00:04:43,080
Il nostro intento è, come al solito,

91
00:04:43,080 --> 00:04:46,560
mostrare che sia NP completo.

92
00:04:46,560 --> 00:04:48,639
Vi ricordate la definizione? Quand'è che

93
00:04:48,639 --> 00:04:51,400
un problema è NP completo?

94
00:04:51,400 --> 00:04:54,360
Quando appartiene NP ed è NP.
Quando

95
00:04:54,360 --> 00:04:56,759
appartiene NP ed è NP hard. Quindi

96
00:04:56,759 --> 00:04:59,880
quando è appartiene ad NP NP hard

97
00:04:59,880 --> 00:05:01,919
significa che almeno tosto quanto tutti

98
00:05:01,919 --> 00:05:04,520
i problemi di NP. Non so se non mi

99
00:05:04,520 --> 00:05:06,280
ricordo se questa domanda ve l'avevo già

100
00:05:06,280 --> 00:05:07,840
fatta. È vero o no che il linguaggio

101
00:05:07,840 --> 00:05:10,680
universale è NP argo?

102
00:05:10,680 --> 00:05:12,720
Sì, il programma il linguaggio

103
00:05:12,720 --> 00:05:15,680
universale è NP arduo perché esiste una

104
00:05:15,680 --> 00:05:18,000
riduzione da tutti i linguaggi di NP

105
00:05:18,000 --> 00:05:22,639
verso Lu. Ok? Quindi NP arduo non è

106
00:05:22,639 --> 00:05:25,280
problema tosto di NP. No, NP ardo

107
00:05:25,280 --> 00:05:27,440
significa al meno tosto quanto tutti i

108
00:05:27,440 --> 00:05:30,880
problemi di NP. Per stare dentro NP è

109
00:05:30,880 --> 00:05:32,720
una condizione aggiuntiva cheediamo.

110
00:05:32,720 --> 00:05:35,479
Quindi se un problema è NP ardo e sta

111
00:05:35,479 --> 00:05:37,639
dentro NP, allora è un problema tosto di

112
00:05:37,639 --> 00:05:41,000
NP e chiamiamo NP completo. Ok? Vi

113
00:05:41,000 --> 00:05:43,600
ricordo nuovamente che tutti questi

114
00:05:43,600 --> 00:05:46,240
problemi, la classe P, la classe NP, i

115
00:05:46,240 --> 00:05:48,800
problemi NP ardui, i problemi NP

116
00:05:48,800 --> 00:05:50,639
completi, cioè tutto quello che abbiamo

117
00:05:50,639 --> 00:05:54,360
visto fino ora, Lu, alt, alt per ogni

118
00:05:54,360 --> 00:05:57,759
alt, tutte queste cose qua sono problemi

119
00:05:57,759 --> 00:06:02,360
di decisione. Quindi è vero, no, che la

120
00:06:02,360 --> 00:06:04,960
somma sommare due numeri sta in P? No,

121
00:06:04,960 --> 00:06:06,639
non è vero, perché sebbene possiamo

122
00:06:06,639 --> 00:06:09,240
farlo in tempo polinomiale, non è non è

123
00:06:09,240 --> 00:06:12,240
un problema di decisione.

124
00:06:12,240 --> 00:06:14,319
Il problema di dato una tripla di

125
00:06:14,319 --> 00:06:16,919
numeri, è vero che il terzo numero

126
00:06:16,919 --> 00:06:19,440
eguaglia la somma dei primi due, quello

127
00:06:19,440 --> 00:06:21,800
sta in Pch? Perché è un problema di

128
00:06:21,800 --> 00:06:24,160
decisione che può stare che si può

129
00:06:24,160 --> 00:06:27,880
risolvere in tempo polinomiale. Ok?

130
00:06:27,880 --> 00:06:30,520
Allora, definiamo questo problema exacto

131
00:06:30,520 --> 00:06:33,919
cover da cui poi faremo la riduzione

132
00:06:33,919 --> 00:06:36,759
verso Napsa. Quindi Napsac sarà mostrato

133
00:06:36,759 --> 00:06:39,319
NP hardware tramite una riduzione da

134
00:06:39,319 --> 00:06:44,360
exact. Ok? Allora, che cos'è exact?

135
00:06:44,360 --> 00:06:49,039
L'input per exact è un insieme U di

136
00:06:49,039 --> 00:06:52,280
oggetti che chiamiamo universo.

137
00:06:52,280 --> 00:06:55,160
È l'oggetto U1

138
00:06:55,160 --> 00:06:58,160
Un.

139
00:06:58,240 --> 00:07:04,039
E poi c'è una famiglia F di sottoinsiemi

140
00:07:04,039 --> 00:07:05,720
S1

141
00:07:05,720 --> 00:07:07,280
SM

142
00:07:07,280 --> 00:07:10,280
dove gli S con I sono sottiniemi di U.

143
00:07:10,280 --> 00:07:14,080
Ok? Quindi l'input di questo problema

144
00:07:14,080 --> 00:07:17,800
sono due insiemi. Un insieme U di

145
00:07:17,800 --> 00:07:21,120
oggetti che chiamiamo universo, una

146
00:07:21,120 --> 00:07:25,440
famiglia f di sottoinsiemi di U. Ok?

147
00:07:25,440 --> 00:07:29,680
Scusa, due su due entrambi M. Se m o N

148
00:07:29,680 --> 00:07:33,080
No, quello è eh Sì, po un casino.

149
00:07:33,080 --> 00:07:38,479
Allora, questo è N è N di Napoli e

150
00:07:38,479 --> 00:07:42,840
questo è M di Messina.

151
00:07:43,360 --> 00:07:44,960
Ok?

152
00:07:44,960 --> 00:07:48,319
E noi abbiamo che tutti gli S con I sono

153
00:07:48,319 --> 00:07:52,360
sottoinsiemi di di U. Ok? Questo è

154
00:07:52,360 --> 00:07:53,960
l'input,

155
00:07:53,960 --> 00:07:55,639
l'output. Se essendo un problema

156
00:07:55,639 --> 00:07:58,840
diisione è un problema si no. Quand'è

157
00:07:58,840 --> 00:08:01,440
che rispondiamo sì? Rispondiamo sì.

158
00:08:01,440 --> 00:08:07,680
Quindi unistanza sì fatta di exact UF

159
00:08:07,680 --> 00:08:16,520
è un'istanza sì di exat cover se esiste

160
00:08:16,840 --> 00:08:18,599
tra

161
00:08:18,599 --> 00:08:25,000
gli insiemi di f una partizione di U.

162
00:08:25,000 --> 00:08:26,720
Ripeto,

163
00:08:26,720 --> 00:08:30,840
un'istanza Sì di exact cover

164
00:08:30,840 --> 00:08:35,320
è una coppia UF

165
00:08:35,360 --> 00:08:38,959
tale per cui tra i sottoinsiemi di U che

166
00:08:38,959 --> 00:08:42,839
compaiono in F, alcuni di loro possono

167
00:08:42,839 --> 00:08:45,440
essere selezionati

168
00:08:45,440 --> 00:08:49,360
per costituire una partizione di U. Per

169
00:08:49,360 --> 00:08:51,040
partizione

170
00:08:51,040 --> 00:08:54,880
intendiamo che questa selezione

171
00:08:54,880 --> 00:09:00,519
dei degli insiemi S con i

172
00:09:00,519 --> 00:09:03,519
sono insiemi disgiunti,

173
00:09:03,519 --> 00:09:06,600
quindi non hanno niente in comune e la

174
00:09:06,600 --> 00:09:11,000
loro unione somma a u. Ok?

175
00:09:11,000 --> 00:09:13,000
Quindi

176
00:09:13,000 --> 00:09:16,000
un'istanza

177
00:09:17,040 --> 00:09:19,279
sì

178
00:09:19,279 --> 00:09:23,640
è un'istanza

179
00:09:24,920 --> 00:09:27,360
in cui

180
00:09:27,360 --> 00:09:32,279
si può selezionare

181
00:09:35,160 --> 00:09:38,279
da f

182
00:09:38,279 --> 00:09:40,880
un insieme.

183
00:09:41,720 --> 00:09:48,000
di S con I tali che

184
00:09:48,079 --> 00:09:51,079
siano

185
00:09:52,880 --> 00:09:56,680
una partizione

186
00:09:57,800 --> 00:10:00,160
di U.

187
00:10:00,160 --> 00:10:02,000
Ok? Chiaro per tutti il concetto di

188
00:10:02,000 --> 00:10:04,240
partizione? Cioè noi prendiamo questi s

189
00:10:04,240 --> 00:10:06,800
con i, questi s con i non devono avere

190
00:10:06,800 --> 00:10:09,399
un'intersezione non vuota. E se noi li

191
00:10:09,399 --> 00:10:12,720
uniamo dobbiamo ricostruire. Ok? Allora,

192
00:10:12,720 --> 00:10:15,120
noi vogliamo mostrare che questo

193
00:10:15,120 --> 00:10:18,760
problema è un problema NP completo, ok?

194
00:10:18,760 --> 00:10:20,640
Quindi è uno dei problemi tosti, non

195
00:10:20,640 --> 00:10:22,720
conosciamo nessun algoritmo polinomiale

196
00:10:22,720 --> 00:10:25,160
che lo risolve, eccetera.

197
00:10:25,160 --> 00:10:29,000
Quindi dobbiamo mostrare membership

198
00:10:29,000 --> 00:10:30,800
membership

199
00:10:30,800 --> 00:10:34,480
e hardness. Ok. Per la membership come

200
00:10:34,480 --> 00:10:36,639
facciamo a dimostrare che questo

201
00:10:36,639 --> 00:10:39,920
problema è infisi
nella definizione

202
00:10:39,920 --> 00:10:44,079
dizione
gli elementi di S devono essere

203
00:10:44,079 --> 00:10:47,560
Sì, cioè io da F devo prendere S4, S5

204
00:10:47,560 --> 00:10:52,240
S9, S12, tale per cui se faccio

205
00:10:52,240 --> 00:10:55,440
l'intersezione a coppie non c'è niente

206
00:10:55,440 --> 00:10:58,440
in comune e se li sommo tutti, se faccio

207
00:10:58,440 --> 00:11:00,519
l'unione di tutti questi qua, io ottengo

208
00:11:00,519 --> 00:11:03,200
U. Ok? Questo è il concetto di

209
00:11:03,200 --> 00:11:06,120
partizione. Ok? Quindi sembra un

210
00:11:06,120 --> 00:11:08,760
problema abbastanza semplice, ma in

211
00:11:08,760 --> 00:11:10,519
realtà è un problema NP completo, è un

212
00:11:10,519 --> 00:11:12,760
problema inerentemente combinatorico,

213
00:11:12,760 --> 00:11:15,959
cioè significa non abbiamo strategie

214
00:11:15,959 --> 00:11:18,160
migliore che provare di provare fare

215
00:11:18,160 --> 00:11:19,839
tutti i tentativi. Questo è quando un

216
00:11:19,839 --> 00:11:21,920
problema n è più completo significa che

217
00:11:21,920 --> 00:11:24,360
noi ci possiamo inventare le uristiche

218
00:11:24,360 --> 00:11:27,200
che vogliamo, ma non avremo mai un

219
00:11:27,200 --> 00:11:31,320
taglio sostanziale del tempo peggiore di

220
00:11:31,320 --> 00:11:34,120
esecuzione. cioè male che va noi

221
00:11:34,120 --> 00:11:36,240
ranniamo in tempo esponenziale perché

222
00:11:36,240 --> 00:11:38,079
non possiamo far altro che provare tutte

223
00:11:38,079 --> 00:11:40,320
le combinazioni. Quello è problemi NP

224
00:11:40,320 --> 00:11:42,440
completi. Sono problemi inerentemente

225
00:11:42,440 --> 00:11:44,959
combinatorici, ok?

226
00:11:44,959 --> 00:11:46,639
Problemi per i quali non abbiamo

227
00:11:46,639 --> 00:11:48,600
soluzioni polinomiali e non ci

228
00:11:48,600 --> 00:11:50,839
aspettiamo che ne esistano, sebbene

229
00:11:50,839 --> 00:11:53,000
nessuno abbia mai mostrato che non sia

230
00:11:53,000 --> 00:11:57,560
possibile farlo. Eh, ok. Come facciamo a

231
00:11:57,560 --> 00:12:01,120
dimostrare che exact cover è in NP? Sì,

232
00:12:01,120 --> 00:12:02,880
indoviniamo quali insieme possono

233
00:12:02,880 --> 00:12:05,760
formare
Sì, indoviniamo la soluzione.

234
00:12:05,760 --> 00:12:08,680
Cioè questo un problema sta in NP quando

235
00:12:08,680 --> 00:12:10,200
sostanzialmente

236
00:12:10,200 --> 00:12:12,519
possiamo individuare

237
00:12:12,519 --> 00:12:15,120
possiamo indovinare la soluzione. Questo

238
00:12:15,120 --> 00:12:17,279
nella stragrande maggioranza dei casi.

239
00:12:17,279 --> 00:12:19,680
Eh

240
00:12:19,680 --> 00:12:22,279
ah

241
00:12:22,279 --> 00:12:24,040
mi pare che lo facciamo la prossima, no,

242
00:12:24,040 --> 00:12:27,760
fra due lezioni, ok? primes. Il problema

243
00:12:27,760 --> 00:12:30,760
della primalità, per esempio, è un

244
00:12:30,760 --> 00:12:34,240
problema che sta in NP.

245
00:12:34,240 --> 00:12:35,800
In realtà, come vi ho detto, poi fu

246
00:12:35,800 --> 00:12:38,279
dimostrato che prime si sta actual in

247
00:12:38,279 --> 00:12:40,519
polinomial time, cioè un algoritmo

248
00:12:40,519 --> 00:12:42,720
tostissimo per riuscire a rispondere il

249
00:12:42,720 --> 00:12:45,760
problema al problema. Però quel problema

250
00:12:45,760 --> 00:12:49,279
sta in NP, però come si fa a dimostrare

251
00:12:49,279 --> 00:12:53,000
che un un numero è primo?

252
00:12:53,000 --> 00:12:55,320
Eh, il guess da fare è molto più

253
00:12:55,320 --> 00:12:58,040
sofisticato. Lì entra in gioco il

254
00:12:58,040 --> 00:13:00,959
concetto di certificato polinomialmente

255
00:13:00,959 --> 00:13:02,839
eh

256
00:13:02,839 --> 00:13:04,519
di certificato conciso, cioè abbiamo un

257
00:13:04,519 --> 00:13:07,120
certificato che in realtà è più grande

258
00:13:07,120 --> 00:13:10,519
dell'input. Uno può gessare una serie di

259
00:13:10,519 --> 00:13:13,920
cose. È il teorema di Prat degli anni 70

260
00:13:13,920 --> 00:13:17,160
mi pare, 75 se non mi ricordo male, in

261
00:13:17,160 --> 00:13:20,160
cui si mostra che Primes è in P e lui si

262
00:13:20,160 --> 00:13:21,920
era inventato sto certificato

263
00:13:21,920 --> 00:13:25,240
strambissimo per le istanze CD primes.

264
00:13:25,240 --> 00:13:27,399
Era una cosa bella lunga, però aveva

265
00:13:27,399 --> 00:13:30,600
mostrato che era comunque bounded da un

266
00:13:30,600 --> 00:13:32,600
polinomio e ce l'avevano solo i primi.

267
00:13:32,600 --> 00:13:35,959
Ok? Quindi negli esempi che vediamo noi,

268
00:13:35,959 --> 00:13:39,079
noi in genere gessiamo le soluzioni, ma

269
00:13:39,079 --> 00:13:42,320
non tutti i problemi di NP sono così

270
00:13:42,320 --> 00:13:44,000
semplici, tra virgolette, che si gessa

271
00:13:44,000 --> 00:13:46,000
la soluzione, appunto. Alle volte uno si

272
00:13:46,000 --> 00:13:47,839
deve ghessare qualcosa di più grosso. In

273
00:13:47,839 --> 00:13:50,880
questo caso noi gessiamo una soluzione,

274
00:13:50,880 --> 00:13:53,839
verifichiamo che la soluzione che stiamo

275
00:13:53,839 --> 00:13:56,399
ghessando è in effetti una partizione di

276
00:13:56,399 --> 00:13:58,920
U e rispondiamo sì. Ok? Quindi

277
00:13:58,920 --> 00:14:03,000
membership è facile.

278
00:14:03,079 --> 00:14:04,480
Quello che dobbiamo vedere ora è

279
00:14:04,480 --> 00:14:08,079
l'hardness. L'hardness è un po' più

280
00:14:08,079 --> 00:14:09,680
sofisticata.

281
00:14:09,680 --> 00:14:12,600
Ok,

282
00:14:12,600 --> 00:14:17,279
abbiamo spazio. Abbiamo spazio.

283
00:14:17,880 --> 00:14:20,880
Riduzione.

284
00:14:21,040 --> 00:14:25,199
Riduzione da 3 SAT.

285
00:14:26,160 --> 00:14:28,600
Come vedete SAT lo stiamo usando

286
00:14:28,600 --> 00:14:29,660
moltissimo.

287
00:14:29,660 --> 00:14:32,760
[Musica]

288
00:14:36,759 --> 00:14:38,600
Ok.

289
00:14:38,600 --> 00:14:40,880
Che cos'è un'istanza di SAT?
Una

290
00:14:40,880 --> 00:14:43,880
formula.

291
00:14:43,920 --> 00:14:45,480
Esattamente.

292
00:14:45,480 --> 00:14:47,120
Ok.

293
00:14:47,120 --> 00:14:51,000
Cos'è un'istanza di exact?

294
00:14:51,000 --> 00:14:54,160
Una coppia. U.
Una coppia UF.

295
00:14:54,160 --> 00:14:58,279
Esattamente. Ok. Quindi noi ci dobbiamo

296
00:14:58,279 --> 00:15:01,480
inventare una trasformazione

297
00:15:01,480 --> 00:15:06,199
F che input questa F prende una formula

298
00:15:06,199 --> 00:15:07,920
fula

299
00:15:07,920 --> 00:15:11,639
in 3 CNF, la prendiamo semplice e sputa

300
00:15:11,639 --> 00:15:15,480
fuori un insieme U di oggetti e una

301
00:15:15,480 --> 00:15:18,720
famiglia f di sottinsiemi di U. E questa

302
00:15:18,720 --> 00:15:22,240
cosa deve avvenire in maniera tale che

303
00:15:22,240 --> 00:15:25,480
la formula fai sia soddisfacbile se è

304
00:15:25,480 --> 00:15:27,360
solo se

305
00:15:27,360 --> 00:15:31,399
nella f nel nella coppia UF ottenuta

306
00:15:31,399 --> 00:15:35,600
dalla trasformazione in f appaia

307
00:15:35,600 --> 00:15:38,120
una partizione di U se è solo se fai e

308
00:15:38,120 --> 00:15:40,639
soddisfacile. Ok? Quindi sta funzione si

309
00:15:40,639 --> 00:15:44,160
deve inventare questa cosa qua. Ok?

310
00:15:44,160 --> 00:15:50,040
La funzione non può testare se fai sia

311
00:15:50,040 --> 00:15:53,360
soddisfa perché altrimenti non ci

312
00:15:53,360 --> 00:15:54,959
impiegherebbe tempo polinomiale perché

313
00:15:54,959 --> 00:15:57,440
la funzione f deve essere eseguita in

314
00:15:57,440 --> 00:15:59,680
tempo polinomiale, ok? Perché a questo

315
00:15:59,680 --> 00:16:02,199
punto sarebbe facile, no? La funzione

316
00:16:02,199 --> 00:16:06,040
guarda f decide se sia soddisfacile. Se

317
00:16:06,040 --> 00:16:08,519
è soddisfacbile sputa fuori un'istanza

318
00:16:08,519 --> 00:16:10,720
sì di Exat Cover. Se fai non è

319
00:16:10,720 --> 00:16:12,720
soddisfacebile, sputa fuori un'istanza

320
00:16:12,720 --> 00:16:15,440
no di exat cover, ma questo non si può

321
00:16:15,440 --> 00:16:18,120
fare in tempo polinomiale. Quindi f deve

322
00:16:18,120 --> 00:16:20,399
essere una funzione che trasformi f

323
00:16:20,399 --> 00:16:23,959
guardandone solamente alla struttura e

324
00:16:23,959 --> 00:16:26,279
preservandone la proprietà di istanza

325
00:16:26,279 --> 00:16:28,360
sì, istanza sì, istanza no, istanza no.

326
00:16:28,360 --> 00:16:33,839
Ok? Domande? M no. Ok.

327
00:16:33,839 --> 00:16:36,199
Allora,

328
00:16:36,199 --> 00:16:38,160
noi abbiamo

329
00:16:38,160 --> 00:16:41,000
che la formula fai

330
00:16:41,000 --> 00:16:45,240
ha questa forma, è una congiunzione

331
00:16:45,240 --> 00:16:49,079
di un certo numero di clausole C con1,

332
00:16:49,079 --> 00:16:54,680
C2, CON L, eccetera. Ok?

333
00:16:54,680 --> 00:16:58,440
E la clausola C con i

334
00:16:58,440 --> 00:17:05,079
è fatta dai letterari lambda i di 1

335
00:17:05,079 --> 00:17:11,799
or lambda i di 2 or lambda i 3. Ok?

336
00:17:11,799 --> 00:17:15,000
hanno tutti questa forma qua.

337
00:17:15,000 --> 00:17:20,199
Allora, noi prendiamo e trasformiamo

338
00:17:20,600 --> 00:17:26,959
le cose in questo modo. Ok? Allora,

339
00:17:26,959 --> 00:17:29,679
l'universo

340
00:17:29,679 --> 00:17:33,360
U della trasformazione, chiamiamolo in

341
00:17:33,360 --> 00:17:38,039
questo modo, così è più evidente, dov'è

342
00:17:38,039 --> 00:17:41,240
la gomma? È più evidente che proviene

343
00:17:41,240 --> 00:17:47,520
dalla Quindi abbiamo Uf e F per dire che

344
00:17:47,520 --> 00:17:50,559
eh sono strutture, sono insieme che

345
00:17:50,559 --> 00:17:52,760
provengono da fai, ok? Cioè, non sono

346
00:17:52,760 --> 00:17:54,960
cose a caso, sono cose sputate fuori da

347
00:17:54,960 --> 00:18:00,080
f guardando fai. Allora, U di f è fatto

348
00:18:00,080 --> 00:18:02,159
in questo modo.

349
00:18:02,159 --> 00:18:06,039
Abbiamo un oggetto

350
00:18:06,039 --> 00:18:09,760
x con i

351
00:18:10,080 --> 00:18:15,559
con i che va da 1 a n, cioè abbiamo un

352
00:18:15,559 --> 00:18:18,520
oggetto x con i per ognuna delle

353
00:18:18,520 --> 00:18:22,280
variabili buleani buleanee che appare

354
00:18:22,280 --> 00:18:26,039
dentro fai. Quindi dentro fai che ci sta

355
00:18:26,039 --> 00:18:29,480
x 1, x con 2, x con 3, x con 4. Ok?

356
00:18:29,480 --> 00:18:37,280
Dentro U ci sta X 1, X 2, X3 e X4.

357
00:18:38,200 --> 00:18:40,640
Poi

358
00:18:40,640 --> 00:18:42,799
la questione è che noi con questo

359
00:18:42,799 --> 00:18:44,840
problema di partizionamento dobbiamo

360
00:18:44,840 --> 00:18:46,600
andare a replicare se la formula sia

361
00:18:46,600 --> 00:18:48,039
soddisfacibile o meno. Quindi ci

362
00:18:48,039 --> 00:18:50,799
dobbiamo inventare oggetti

363
00:18:50,799 --> 00:18:53,919
e sottoinsiemi di U in f tale per cui

364
00:18:53,919 --> 00:18:56,280
poi i conti ci tornano in cui possiamo

365
00:18:56,280 --> 00:18:58,799
simulare l'assegnamento di verità.

366
00:18:58,799 --> 00:19:01,919
variabili, eccetera.

367
00:19:01,919 --> 00:19:04,760
Poi che cosa ci servirà? ci servirà a

368
00:19:04,760 --> 00:19:08,159
stabilire, siccome noi vogliamo simulare

369
00:19:08,159 --> 00:19:10,320
se la formula sia soddisfacbile o meno

370
00:19:10,320 --> 00:19:12,640
tramite un partizionamento, ci

371
00:19:12,640 --> 00:19:16,120
serviranno oggetti dentro u che ci

372
00:19:16,120 --> 00:19:18,559
simulano se una certa clausola è stata

373
00:19:18,559 --> 00:19:20,799
soddisfatta o meno e quindi avremo un

374
00:19:20,799 --> 00:19:23,919
oggetto C i

375
00:19:23,919 --> 00:19:26,159
per ogni I

376
00:19:26,159 --> 00:19:30,400
o C jamiolo qua è J, ok? per ogni J che

377
00:19:30,400 --> 00:19:35,440
va tra 1 e L. Ok? Quindi avremo un

378
00:19:35,440 --> 00:19:38,679
oggetto per ogni variabile bureana che

379
00:19:38,679 --> 00:19:41,840
compare nella formula un oggetto C con

380
00:19:41,840 --> 00:19:45,360
I. Per ogni clausola che compare nella

381
00:19:45,360 --> 00:19:48,360
formula

382
00:19:50,360 --> 00:19:52,400
unito

383
00:19:52,400 --> 00:19:58,640
avremo oggetti che simulano le

384
00:19:58,840 --> 00:20:01,000
PJ

385
00:20:01,000 --> 00:20:06,880
K che simulano le letterale per ogni i

386
00:20:06,880 --> 00:20:12,720
lambda i per ogni lambda g.

387
00:20:12,720 --> 00:20:18,480
Oplà. J K. Ok.

388
00:20:18,880 --> 00:20:22,679
Quindi l'universo in questa riduzione,

389
00:20:22,679 --> 00:20:27,320
l'universo UDF ha oggetti di tre tipi.

390
00:20:27,320 --> 00:20:30,400
Un oggetto per ogni variabile, un

391
00:20:30,400 --> 00:20:33,880
oggetto per ogni clausola, un oggetto

392
00:20:33,880 --> 00:20:36,440
per ogni letterale che compare nella

393
00:20:36,440 --> 00:20:39,280
formula. Ok? G diamo questi nomi x con i

394
00:20:39,280 --> 00:20:42,640
con j lambda di JK. Ok? E questo è

395
00:20:42,640 --> 00:20:45,559
solamente udify.

396
00:20:45,559 --> 00:20:49,480
Dobbiamo ancora definire f dif.

397
00:20:49,480 --> 00:20:54,080
Allora, f dif è

398
00:20:54,080 --> 00:20:58,960
ottenuta in questo modo.

399
00:21:01,200 --> 00:21:05,240
Che cosa ci sta?

400
00:21:07,080 --> 00:21:09,000
Allora, lo descriviamo un po' più a

401
00:21:09,000 --> 00:21:10,840
parole.

402
00:21:10,840 --> 00:21:13,159
F di F

403
00:21:13,159 --> 00:21:15,159
contiene,

404
00:21:15,159 --> 00:21:20,080
senò usiamo troppi simboli, contiene

405
00:21:20,679 --> 00:21:25,400
un insieme PJK,

406
00:21:26,000 --> 00:21:29,039
quindi un insieme singleton che contiene

407
00:21:29,039 --> 00:21:30,600
PJK

408
00:21:30,600 --> 00:21:33,840
per ogni

409
00:21:33,880 --> 00:21:35,120
oggetto

410
00:21:35,120 --> 00:21:37,200
[Applauso]

411
00:21:37,200 --> 00:21:40,760
PJK. Ok? Quindi in F abbiamo questi

412
00:21:40,760 --> 00:21:43,480
singleton,

413
00:21:43,480 --> 00:21:48,360
poi abbiamo un insieme di

414
00:21:49,960 --> 00:21:52,000
altri insiemi che ci servono a fare il

415
00:21:52,000 --> 00:21:53,840
mimiing, la simulazione degli

416
00:21:53,840 --> 00:21:55,880
assegnamenti di verità.

417
00:21:55,880 --> 00:22:01,400
E allora abbiamo così per ogni

418
00:22:02,760 --> 00:22:05,760
variabile

419
00:22:06,960 --> 00:22:09,960
buleana

420
00:22:12,159 --> 00:22:16,720
x con i abbiamo due insiemi.

421
00:22:16,720 --> 00:22:18,360
Lo vedete? Sì.

422
00:22:18,360 --> 00:22:20,120
[Applauso]

423
00:22:20,120 --> 00:22:22,840
T di I

424
00:22:22,840 --> 00:22:25,600
true

425
00:22:25,600 --> 00:22:30,480
e T con i false.

426
00:22:30,480 --> 00:22:34,080
Come sono fatti?

427
00:22:34,080 --> 00:22:36,279
T.

428
00:22:36,279 --> 00:22:38,720
Sì, per ognuna delle variabili buleane

429
00:22:38,720 --> 00:22:40,919
che abbiamo nella formula x con i,

430
00:22:40,919 --> 00:22:44,039
adesso noi andiamo a costruire

431
00:22:44,039 --> 00:22:48,320
degli insiemi che stanno dentro falmente

432
00:22:48,320 --> 00:22:51,640
ci vanno un po' a stabilire, ma se diamo

433
00:22:51,640 --> 00:22:54,120
true a questa variabile, che cosa stiamo

434
00:22:54,120 --> 00:22:56,080
andando a soddisfare? Perché quello che

435
00:22:56,080 --> 00:22:57,760
dobbiamo fare è sostanzialmente

436
00:22:57,760 --> 00:23:00,880
rimappare la soddisfacilità della

437
00:23:00,880 --> 00:23:02,320
formula su un problema di

438
00:23:02,320 --> 00:23:04,559
partizionamento. Ok? Quindi ci dobbiamo

439
00:23:04,559 --> 00:23:07,120
inventare questi insiemi tale per cui

440
00:23:07,120 --> 00:23:09,919
noi partizioniamo u se abbiamo un modo

441
00:23:09,919 --> 00:23:11,919
di risolvere di di soddisfare la

442
00:23:11,919 --> 00:23:15,200
formula. Ok? Allora, per ogni varabile

443
00:23:15,200 --> 00:23:19,720
buleana x con i di f noi abbiamo due

444
00:23:19,720 --> 00:23:26,440
insiemi, t con i true e t con i false.

445
00:23:26,440 --> 00:23:30,320
In t con i true abbiamo

446
00:23:30,320 --> 00:23:33,520
l'oggetto x con i

447
00:23:33,520 --> 00:23:35,039
unito

448
00:23:35,039 --> 00:23:37,440
a che cosa?

449
00:23:37,440 --> 00:23:39,679
agli oggetti

450
00:23:39,679 --> 00:23:42,360
PJK

451
00:23:42,360 --> 00:23:48,279
tali che lambda di JK è uguale a not X

452
00:23:48,279 --> 00:23:50,720
con E.

453
00:23:50,720 --> 00:23:53,520
Allora, qui abbiamo un'inversione. Qual

454
00:23:53,520 --> 00:23:57,440
è il significato? In T con i true

455
00:23:57,440 --> 00:24:00,400
mettiamo l'oggetto

456
00:24:00,400 --> 00:24:05,799
X con i più tutti gli oggetti associati

457
00:24:05,799 --> 00:24:07,919
a quei letterali

458
00:24:07,919 --> 00:24:12,080
tali per cui quando assegniamo vero a x

459
00:24:12,080 --> 00:24:16,480
con i quelli vengono falsificati.

460
00:24:16,480 --> 00:24:19,600
Ok? Quindi t con i true. Facciamo questa

461
00:24:19,600 --> 00:24:25,240
inversione, mettiamo x con i più tutti

462
00:24:25,240 --> 00:24:27,880
gli oggetti letterali associati a quei

463
00:24:27,880 --> 00:24:31,320
letterali che quando diamo vero a x con

464
00:24:31,320 --> 00:24:34,559
i loro vengono falsificati. Ok? Facciamo

465
00:24:34,559 --> 00:24:38,679
il contrario. Va bene?

466
00:24:39,159 --> 00:24:40,799
Questo

467
00:24:40,799 --> 00:24:43,600
perché? Perché noi il nostro obiettivo

468
00:24:43,600 --> 00:24:47,600
sarà poi far sì che noi possiamo

469
00:24:47,600 --> 00:24:51,840
scegliere e

470
00:24:51,840 --> 00:24:54,640
Ok, c'è un altro pezzo, poi ve lo

471
00:24:54,640 --> 00:24:57,480
mostro. Ok, allora

472
00:24:57,480 --> 00:25:00,440
ci saranno degli oggetti per dire questa

473
00:25:00,440 --> 00:25:02,799
clausola viene soddisfatto da questo

474
00:25:02,799 --> 00:25:04,640
letterale. Ok?

475
00:25:04,640 --> 00:25:06,880
Quindi, mantenendo

476
00:25:06,880 --> 00:25:09,720
la stessa

477
00:25:09,720 --> 00:25:14,080
idea, abbiamo T con i false, è fatto da

478
00:25:14,080 --> 00:25:18,080
X con i unito

479
00:25:18,080 --> 00:25:20,840
T con JK

480
00:25:20,840 --> 00:25:26,559
tale che lambda di JK è uguale a X con

481
00:25:26,559 --> 00:25:28,559
i.

482
00:25:28,559 --> 00:25:31,399
Ok? Quindi anche in questo caso la

483
00:25:31,399 --> 00:25:36,360
semantica è quando scelgo questo insieme

484
00:25:36,360 --> 00:25:40,559
io prendo l'oggetto x con i più tutti

485
00:25:40,559 --> 00:25:43,760
gli oggetti letterali tali per cui

486
00:25:43,760 --> 00:25:47,960
quando do false a x con i il letterale è

487
00:25:47,960 --> 00:25:50,080
falsificato. Ok? Quindi stiamo facendo

488
00:25:50,080 --> 00:25:52,799
l'opposto.

489
00:25:52,799 --> 00:25:54,960
Qua il foglio è finito, serve un'altra

490
00:25:54,960 --> 00:25:58,600
pagina. Ok.

491
00:25:58,960 --> 00:26:01,720
Alri,

492
00:26:01,720 --> 00:26:06,480
quindi abbiamo che in F di F ci stanno

493
00:26:06,480 --> 00:26:07,919
[Musica]

494
00:26:07,919 --> 00:26:10,679
questi singleton, ok?

495
00:26:10,679 --> 00:26:13,279
Poi per ognuna delle variabili x con i

496
00:26:13,279 --> 00:26:15,640
di f abbiamo questo insieme e

497
00:26:15,640 --> 00:26:18,840
quest'altro insieme. Dopodiché ce n'è un

498
00:26:18,840 --> 00:26:25,919
altro che è per ogni clausola per ogni

499
00:26:25,919 --> 00:26:28,840
clausola

500
00:26:28,840 --> 00:26:33,600
CJ di F

501
00:26:34,840 --> 00:26:37,840
abbiamo

502
00:26:38,399 --> 00:26:41,640
le coppie

503
00:26:43,000 --> 00:26:45,679
C con J

504
00:26:45,679 --> 00:26:48,960
P dij J

505
00:26:48,960 --> 00:26:53,360
con J PJ2

506
00:26:53,360 --> 00:26:57,399
C con J PJ3.

507
00:26:57,399 --> 00:27:00,399
Ok?

508
00:27:00,480 --> 00:27:06,039
Intuitivamente noi avremo che

509
00:27:06,440 --> 00:27:08,520
questi insiemi della partizione possono

510
00:27:08,520 --> 00:27:11,399
essere selezionati quando la variabile

511
00:27:11,399 --> 00:27:13,640
quando la clausola C con J viene

512
00:27:13,640 --> 00:27:16,039
verificata da quel letterale o da questo

513
00:27:16,039 --> 00:27:18,320
o da questo qua. Ok? Questo sarà un po'

514
00:27:18,320 --> 00:27:21,520
il significato.

515
00:27:21,520 --> 00:27:25,559
Benissimo, facciamo un esempio.

516
00:27:25,559 --> 00:27:30,640
PJ
eh PJ PJ. Sì, la mia scrittura fa un

517
00:27:30,640 --> 00:27:33,799
po' pietà.

518
00:27:35,799 --> 00:27:38,799
TJ

519
00:27:38,840 --> 00:27:41,840
pigiama.

520
00:27:42,279 --> 00:27:44,559
Ok. Allora, facciamo un esempio, un

521
00:27:44,559 --> 00:27:48,120
esempio di trasformazione.

522
00:27:54,720 --> 00:27:58,760
Supponiamo che f sia

523
00:27:58,760 --> 00:28:01,480
Ah, qua l'avevo preso vario, vabboh.

524
00:28:01,480 --> 00:28:07,919
X con 1 or not X con 2 or X con 3

525
00:28:07,919 --> 00:28:09,640
and

526
00:28:09,640 --> 00:28:16,519
not X con 1 or X con 2

527
00:28:16,519 --> 00:28:21,159
or X con 4. Ok?

528
00:28:21,159 --> 00:28:25,399
Questo è x 1. Eh,

529
00:28:25,399 --> 00:28:31,120
allora udify in questo caso sarebbe x 1,

530
00:28:31,120 --> 00:28:37,440
x 2, x 3, x con 4.

531
00:28:37,440 --> 00:28:40,159
Poi no, mettiamoli assieme. Poi ci

532
00:28:40,159 --> 00:28:44,080
sarebbe C 1 e C 2 perché abbiamo due

533
00:28:44,080 --> 00:28:49,600
clausole e poi avremmo P di 1

534
00:28:49,600 --> 00:28:55,799
P1 2 1 3 P2

535
00:28:55,799 --> 00:29:00,600
P2 2 e P di 23.

536
00:29:00,600 --> 00:29:03,120
Ok? Questi sarebbero gli oggetti che

537
00:29:03,120 --> 00:29:07,440
andrebbero a finire in UDF.

538
00:29:08,399 --> 00:29:11,960
In F dif cosa avremmo? avremmo i

539
00:29:11,960 --> 00:29:18,000
singleton, abbiamo detto, quindi P di 1

540
00:29:18,000 --> 00:29:21,159
P di 1 2,

541
00:29:21,159 --> 00:29:24,799
P di 1 3,

542
00:29:25,080 --> 00:29:28,399
di 2 1,

543
00:29:28,399 --> 00:29:29,850
di 2

544
00:29:29,850 --> 00:29:33,150
[Musica]

545
00:29:33,480 --> 00:29:37,440
P di 2 3

546
00:29:38,320 --> 00:29:42,600
P di 2 3.

547
00:29:43,519 --> 00:29:48,840
Ok? Poi avremmo gli assegnamenti,

548
00:29:50,679 --> 00:29:57,840
quindi avremmo T1 true che è dato da X1

549
00:29:57,840 --> 00:30:01,000
più tutti gli oggetti letterali che

550
00:30:01,000 --> 00:30:05,080
vengono resi falsi quando assegniamo

551
00:30:05,080 --> 00:30:10,519
true a X con 1 e in questo caso è

552
00:30:10,519 --> 00:30:15,720
solamente lui, quindi è T

553
00:30:15,760 --> 00:30:17,399
2

554
00:30:17,399 --> 00:30:19,399
1.

555
00:30:19,399 --> 00:30:28,799
Poi c'è T false che è X con 1 P1 1.

556
00:30:29,760 --> 00:30:35,720
Ok? Poi avremmo T2 true, T2 false,

557
00:30:35,720 --> 00:30:39,600
quindi avremmo X2.

558
00:30:44,360 --> 00:30:47,519
Quando assegno true a X2,

559
00:30:47,519 --> 00:30:53,320
P1 2 diventa falso e lì è a posto.

560
00:30:53,320 --> 00:31:00,600
Poi T2 false ci sta X2 e P2.

561
00:31:01,159 --> 00:31:07,310
Poi c'è T di3 true che è X di 3

562
00:31:07,310 --> 00:31:10,240
[Musica]

563
00:31:10,240 --> 00:31:13,120
e basta.

564
00:31:13,120 --> 00:31:16,200
T di 3 false

565
00:31:16,200 --> 00:31:20,639
che è X3 P 13.

566
00:31:20,639 --> 00:31:26,639
Poi c'è T4 true che è X4

567
00:31:27,000 --> 00:31:30,240
e basta perché mantenendo true non viene

568
00:31:30,240 --> 00:31:32,919
mai messo a falso, nessun letterare. T4

569
00:31:32,919 --> 00:31:37,960
false e X4 P23.

570
00:31:37,960 --> 00:31:42,240
Ok? E poi ci stanno tutte le coppie.

571
00:31:42,240 --> 00:31:46,279
C1 P1

572
00:31:47,320 --> 00:31:51,679
C1 P12

573
00:31:53,519 --> 00:31:57,919
C1 P13

574
00:31:58,120 --> 00:32:01,360
C2 P21

575
00:32:01,360 --> 00:32:05,280
Scusate le zampe di gallina C2 P22

576
00:32:05,280 --> 00:32:07,240
[Applauso]

577
00:32:07,240 --> 00:32:14,279
C2 P23 Ok. E questo chiude F.

578
00:32:19,799 --> 00:32:22,919
Dove? Dove?
Terza riga dal basso.
Terza

579
00:32:22,919 --> 00:32:28,760
riga dal basso. Quella è una F. È una F.

580
00:32:31,720 --> 00:32:33,440
Dovrebbero farli un po' meno sensibili

581
00:32:33,440 --> 00:32:36,559
sti aggeggi. Ok. Ok. Quindi questa, per

582
00:32:36,559 --> 00:32:39,440
esempio, è la trasformazione

583
00:32:39,440 --> 00:32:44,559
di quella istanza, no? In quello là. Ok?

584
00:32:44,559 --> 00:32:47,200
F chiuso

585
00:32:47,200 --> 00:32:52,960
se la pr
eh dove, scusa?
L'ff dif.
F dif

586
00:32:52,960 --> 00:32:56,240
è questa qua.
Sì, una cosa par

587
00:32:56,240 --> 00:32:59,120
è questa. Questa qua chiude questa.

588
00:32:59,120 --> 00:33:02,639
Chiude questa.
Sì, sì, sì, sì, sì, sì.

589
00:33:02,639 --> 00:33:04,760
Ok. Perché è un insieme che contiene

590
00:33:04,760 --> 00:33:06,960
altri insieme. È un insieme di insieme.

591
00:33:06,960 --> 00:33:10,440
Ok? Alri. Quello che noi dobbiamo ora

592
00:33:10,440 --> 00:33:14,159
dimostrare è che una

593
00:33:14,159 --> 00:33:17,200
Sì, sì, sì, sorry. Ok, che metto un po'

594
00:33:17,200 --> 00:33:19,880
così. Ok,

595
00:33:19,880 --> 00:33:21,960
ho semplicemente dato un esempio,

596
00:33:21,960 --> 00:33:23,760
un'istanza particolare di file

597
00:33:23,760 --> 00:33:26,240
trasformata secondo questa regola. Ok?

598
00:33:26,240 --> 00:33:28,279
Quindi la nostra funzione f quando

599
00:33:28,279 --> 00:33:31,720
riceve una fa in questo modo sputa fuori

600
00:33:31,720 --> 00:33:34,360
una u con tutti quegli oggetti e una f

601
00:33:34,360 --> 00:33:37,880
con tutti quei sottiemi. Ok?

602
00:33:37,880 --> 00:33:39,000
Adesso noi quello che vogliamo

603
00:33:39,000 --> 00:33:43,200
dimostrare è che

604
00:33:43,519 --> 00:33:47,159
la formula fai è soddisfacile se è solo

605
00:33:47,159 --> 00:33:50,039
se ok?

606
00:33:50,039 --> 00:33:52,880
se e solo se

607
00:33:52,880 --> 00:33:56,480
la eh

608
00:33:57,039 --> 00:34:00,200
dentro f ci sta un partizionamento un

609
00:34:00,200 --> 00:34:04,519
partizionamento di u. Ok.

610
00:34:05,039 --> 00:34:08,039
Ok,

611
00:34:09,720 --> 00:34:11,280
posso

612
00:34:11,280 --> 00:34:15,240
vado. Ok.

613
00:34:19,159 --> 00:34:24,560
Dimostriamo questo verso, cioè se fai è

614
00:34:24,560 --> 00:34:26,679
soddisfacbile,

615
00:34:26,679 --> 00:34:28,240
allora

616
00:34:28,240 --> 00:34:32,280
in fzione

617
00:34:37,639 --> 00:34:39,159
di

618
00:34:39,159 --> 00:34:42,159
Udify. Ok?

619
00:34:42,159 --> 00:34:44,440
Supponiamo

620
00:34:44,440 --> 00:34:49,040
quindi che fai sia soddisfacile.

621
00:34:49,040 --> 00:34:51,079
Ok?

622
00:34:51,079 --> 00:34:55,839
Se fai è soddisfacbile esiste una un

623
00:34:55,839 --> 00:34:58,480
assegnamento di verità sigma per le

624
00:34:58,480 --> 00:35:02,400
variabili di file tali che f soddisfi,

625
00:35:02,400 --> 00:35:06,640
che sigma soddisfi ok?

626
00:35:06,640 --> 00:35:09,320
Per mostrare che

627
00:35:09,320 --> 00:35:14,160
in F dify c'è una partizione di UDF, la

628
00:35:14,160 --> 00:35:15,560
dobbiamo mostrare, la dobbiamo

629
00:35:15,560 --> 00:35:18,160
costruire. Come la costruiamo? La

630
00:35:18,160 --> 00:35:22,160
costruiamo partendo da sigma. Ok?

631
00:35:22,160 --> 00:35:24,880
Noi sappiamo che sigma è un assegnamento

632
00:35:24,880 --> 00:35:27,200
di verità per le variabili x con i tale

633
00:35:27,200 --> 00:35:31,960
che fai sia soddisfatta. Allora, noi per

634
00:35:31,960 --> 00:35:35,119
la partizione

635
00:35:35,119 --> 00:35:38,640
di eh

636
00:35:40,119 --> 00:35:43,400
per la partizione di

637
00:35:43,400 --> 00:35:48,320
eh di ufy, prendiamo questo

638
00:35:48,320 --> 00:35:53,200
se sigma di x con i

639
00:35:53,200 --> 00:35:55,440
è vero,

640
00:35:55,440 --> 00:35:57,839
prendiamo

641
00:35:59,920 --> 00:36:03,319
T con i true.

642
00:36:03,319 --> 00:36:10,520
Se sigma di x con i è falso,

643
00:36:10,520 --> 00:36:13,520
prendiamo

644
00:36:15,400 --> 00:36:19,800
t con i false.

645
00:36:22,079 --> 00:36:24,680
Ok.

646
00:36:24,680 --> 00:36:27,680
Inoltre

647
00:36:30,400 --> 00:36:33,400
prendiamo

648
00:36:36,200 --> 00:36:40,480
le C con JPJK

649
00:36:41,599 --> 00:36:44,680
tali che

650
00:36:44,680 --> 00:36:47,920
il letterale

651
00:36:48,920 --> 00:36:51,359
lambda JK

652
00:36:51,359 --> 00:36:54,400
è resovero.

653
00:36:54,400 --> 00:36:58,560
Eh, reso, no, reso vero

654
00:36:58,560 --> 00:37:01,760
in sigma.

655
00:37:02,319 --> 00:37:04,079
Qua mi serve spazio. Come faccio?

656
00:37:04,079 --> 00:37:10,079
Andiamo a salire e non appare

657
00:37:11,440 --> 00:37:18,160
nei ticoni true o ticoni false.

658
00:37:18,160 --> 00:37:20,480
Ok, qua sono un po' salito, non avevo

659
00:37:20,480 --> 00:37:22,000
spazio.

660
00:37:22,000 --> 00:37:25,040
Ok, allora come facciamo? Stiamo

661
00:37:25,040 --> 00:37:28,079
partendo da una foddisfacile.

662
00:37:28,079 --> 00:37:33,319
Siccome f è soddisfacbile, noi abbiamo

663
00:37:33,319 --> 00:37:35,200
noi abbiamo che cosa abbiamo che c'è

664
00:37:35,200 --> 00:37:37,359
sigma che la soddisfa. Noi partiamo da

665
00:37:37,359 --> 00:37:40,760
sigma per costruire una parrare che

666
00:37:40,760 --> 00:37:44,800
dentro f di f c'è una partizione di U di

667
00:37:44,800 --> 00:37:47,560
fi. Come facciamo? La dobbiamo mostrare.

668
00:37:47,560 --> 00:37:50,520
E adesso la mostriamo. La costruiamo in

669
00:37:50,520 --> 00:37:53,800
questo modo. Partiamo da sigma. Se sigma

670
00:37:53,800 --> 00:37:57,920
segna vero ad x con i, tipo x2, allora

671
00:37:57,920 --> 00:38:02,160
prendo t2 tr. Se sigma segna false a x

672
00:38:02,160 --> 00:38:05,680
con i, allora prendo t con i false.

673
00:38:05,680 --> 00:38:08,280
Ok? Sì.

674
00:38:08,280 --> 00:38:11,520
Scritto.
Quale?

675
00:38:11,520 --> 00:38:14,240
Questo. Questa questo scarabocchio che

676
00:38:14,240 --> 00:38:17,720
ho scritto qua. Ok. Qua c'è scritto il

677
00:38:17,720 --> 00:38:24,440
letterale lambda jk è reso vero in sigma

678
00:38:24,440 --> 00:38:28,680
e non appare nelle t con i true o t con

679
00:38:28,680 --> 00:38:31,800
i false.

680
00:38:34,040 --> 00:38:40,520
Ok? I con o
o t con i false. Ok.

681
00:38:40,520 --> 00:38:43,000
Manca un pezzo e mi serve per forza

682
00:38:43,000 --> 00:38:46,359
l'altra pagina. Ah! Ah!

683
00:38:46,359 --> 00:38:47,920
Ok, a sto punto poteva andare

684
00:38:47,920 --> 00:38:49,800
direttamente.

685
00:38:49,800 --> 00:38:53,119
Poi prendiamo

686
00:38:54,839 --> 00:38:59,920
i PJK rimasti fuori,

687
00:39:01,200 --> 00:39:04,359
ok? che sono sti PJK rimasti fuori

688
00:39:04,359 --> 00:39:08,880
perché tramite le Ticoni true, allora

689
00:39:08,880 --> 00:39:12,520
tramite queste qua,

690
00:39:12,520 --> 00:39:16,800
tramite o questo o noi andiamo a coprire

691
00:39:16,800 --> 00:39:21,280
gli oggetti X con i più parte dei P con

692
00:39:21,280 --> 00:39:23,560
JK K, quali? quelli resi falsi

693
00:39:23,560 --> 00:39:25,359
dall'assegnamento.

694
00:39:25,359 --> 00:39:28,319
Tramite questi mi vado a coprire gli

695
00:39:28,319 --> 00:39:32,640
oggetti C con Jc

696
00:39:33,359 --> 00:39:36,839
oggetti PJK che non erano finite qua

697
00:39:36,839 --> 00:39:39,040
dentro. Quello che può accadere è che

698
00:39:39,040 --> 00:39:41,960
altri oggetti PJK sono rimasti fuori

699
00:39:41,960 --> 00:39:46,319
dalla copertura. Abbiamo i singleton

700
00:39:46,319 --> 00:39:49,119
e in quel caso ce li andiamo a prendere

701
00:39:49,119 --> 00:39:50,839
uno per uno. Tutto ciò che è rimasto

702
00:39:50,839 --> 00:39:54,440
fuori lo andiamo a raccogliere così, no?

703
00:39:54,440 --> 00:39:55,880
Le briciole le ce le andiamo a

704
00:39:55,880 --> 00:39:57,920
raccogliere in quel modo. Sì.
Ma è

705
00:39:57,920 --> 00:40:02,960
possibile che non venga preso nessuna

706
00:40:02,960 --> 00:40:06,200
coppia CJPJK?

707
00:40:06,200 --> 00:40:08,680
No, no, le prendiamo noi le coppie CJ

708
00:40:08,680 --> 00:40:12,440
PJK. Sì, però c'è come c'è scritto che

709
00:40:12,440 --> 00:40:15,560
la il PJK non deve apparire nelle
Ok,

710
00:40:15,560 --> 00:40:18,040
adesso lo dimostriamo. Adesso qual è la

711
00:40:18,040 --> 00:40:19,640
questione? Come giustamente la nostra

712
00:40:19,640 --> 00:40:22,000
collega ci stava dicendo, no? Dice, "Ma

713
00:40:22,000 --> 00:40:25,160
siamo sicuri che una partizione del

714
00:40:25,160 --> 00:40:28,920
genere ci sta proprio in UDF?" Cioè, non

715
00:40:28,920 --> 00:40:31,480
è che stiamo andalasciamo

716
00:40:31,480 --> 00:40:33,920
qualcosa o non è che stiamo andando a

717
00:40:33,920 --> 00:40:39,240
sovrapporre insiemi. Allora,

718
00:40:39,760 --> 00:40:41,520
questi insiemi che noi stiamo andando a

719
00:40:41,520 --> 00:40:44,400
prendere partendo da sigma non si

720
00:40:44,400 --> 00:40:46,520
sovrappongono

721
00:40:46,520 --> 00:40:48,599
perché

722
00:40:48,599 --> 00:40:51,599
innan questione sta nel fatto che noi

723
00:40:51,599 --> 00:40:53,760
stiamo partendo da un sigma che è un

724
00:40:53,760 --> 00:40:56,359
assegnamento di verità coerente, quindi

725
00:40:56,359 --> 00:40:59,000
non è che prendiamo t con i true e t con

726
00:40:59,000 --> 00:41:01,800
i false assieme perché in sigma x con i

727
00:41:01,800 --> 00:41:04,400
o sarà vero o sarà falso. Quindi per

728
00:41:04,400 --> 00:41:07,480
ognuno di loro ne prendiamo uno solo.

729
00:41:07,480 --> 00:41:11,520
Quindi non avremo insiemi che contengono

730
00:41:11,520 --> 00:41:13,800
entrambi x con i perché ne viene preso

731
00:41:13,800 --> 00:41:17,280
uno soltanto. Poi nel negli insiemi che

732
00:41:17,280 --> 00:41:19,599
abbiamo chiamato t con i true e t con i

733
00:41:19,599 --> 00:41:24,119
false li compaiono che cosa? gli oggetti

734
00:41:24,119 --> 00:41:26,720
P con JK

735
00:41:26,720 --> 00:41:31,800
associati a letterali falsificati

736
00:41:31,800 --> 00:41:33,760
da quell'assegnamento.

737
00:41:33,760 --> 00:41:35,920
Ok?

738
00:41:35,920 --> 00:41:39,400
Con C. Quando invece prendiamo queste

739
00:41:39,400 --> 00:41:43,440
coppie qua, noi prendiamo la clausola,

740
00:41:43,440 --> 00:41:46,760
l'oggetto clausola CJ e ne prendiamo una

741
00:41:46,760 --> 00:41:50,319
sola coppia per ogni oggetto CJ e

742
00:41:50,319 --> 00:41:54,440
prendiamo la coppia CJ + PJK tale per

743
00:41:54,440 --> 00:41:57,520
cui quello è un letterale reso vero da

744
00:41:57,520 --> 00:42:02,240
sigma. Tale letterale deve per forza

745
00:42:02,240 --> 00:42:05,960
esistere perché sigma

746
00:42:05,960 --> 00:42:08,960
soddisfa fai e quindi soddisfa tutte le

747
00:42:08,960 --> 00:42:11,880
clausole tale per cui noi possiamo

748
00:42:11,880 --> 00:42:15,319
scegliere tutte coppie così per ognuno

749
00:42:15,319 --> 00:42:18,720
degli oggetti CJ. Prendiamo un t con i

750
00:42:18,720 --> 00:42:21,240
true o un t con i false per ognuno degli

751
00:42:21,240 --> 00:42:23,880
x con i e siccome l'assegnamento è

752
00:42:23,880 --> 00:42:26,440
consistente, quelli non si andranno a

753
00:42:26,440 --> 00:42:29,760
sovrapporre, cosa può rimanere fuori?

754
00:42:29,760 --> 00:42:33,119
Possono rimanere fuori oggetti PJK che

755
00:42:33,119 --> 00:42:36,440
sono rimasti un po' sparsi, no? Ecco,

756
00:42:36,440 --> 00:42:39,680
quelli le li copriamo andando a

757
00:42:39,680 --> 00:42:41,720
raccogliere le briciole, ok? Perché

758
00:42:41,720 --> 00:42:43,440
abbiamo dei singleton e quelli ce li

759
00:42:43,440 --> 00:42:46,079
andiamo a prendere così, ok? Quindi, se

760
00:42:46,079 --> 00:42:49,520
la formula è soddisfile,

761
00:42:49,520 --> 00:42:53,720
allora f contiene in effetti una

762
00:42:53,720 --> 00:42:56,960
partizione di udify. Ok? Quindi abbiamo

763
00:42:56,960 --> 00:42:58,760
dimostrato che se partiamo da una

764
00:42:58,760 --> 00:43:01,160
istanza s di SAT arriviamo a un'istanza

765
00:43:01,160 --> 00:43:04,319
s di Exat. Chiaro?

766
00:43:04,319 --> 00:43:08,079
Dobbiamo ora dimostrare l'altro verso

767
00:43:08,079 --> 00:43:11,319
e cioè

768
00:43:11,559 --> 00:43:13,400
se

769
00:43:13,400 --> 00:43:18,359
f di f contiene

770
00:43:18,720 --> 00:43:22,720
una partizione

771
00:43:24,119 --> 00:43:27,280
di Udify.

772
00:43:27,280 --> 00:43:30,280
Allora,

773
00:43:34,400 --> 00:43:38,880
fai è soddisfacile.

774
00:43:43,400 --> 00:43:46,400
Ok.

775
00:43:49,839 --> 00:43:55,119
Allora, supponiamo che P

776
00:43:56,119 --> 00:43:59,440
sottoinsi insieme di f di f.

777
00:43:59,440 --> 00:44:02,280
Quindi in P, in questo P, noi ci andiamo

778
00:44:02,280 --> 00:44:04,280
a mettere alcuni insiemi che provengono

779
00:44:04,280 --> 00:44:08,079
da f di f. Supponiamo che P proveniente

780
00:44:08,079 --> 00:44:12,720
da F di F sia una partizione

781
00:44:15,240 --> 00:44:20,839
di eh UDIF. Ok? Quindi qua dentro ci

782
00:44:20,839 --> 00:44:23,720
saranno un po' di insiemi che provengono

783
00:44:23,720 --> 00:44:27,559
da fd tra i quali ci saranno T quelli

784
00:44:27,559 --> 00:44:29,760
che noi abbiamo chiamato T con i true o

785
00:44:29,760 --> 00:44:32,160
T con i false. Poi ci saranno un po' di

786
00:44:32,160 --> 00:44:35,960
coppie CJ PJK, un po' di oggetti

787
00:44:35,960 --> 00:44:38,960
singleton PJK, insomma c'è qualcosa di

788
00:44:38,960 --> 00:44:41,559
vario. Ok? Quello che però sappiamo è

789
00:44:41,559 --> 00:44:43,119
che

790
00:44:43,119 --> 00:44:46,240
P, questa P qua costituisce una

791
00:44:46,240 --> 00:44:49,800
partizione di UDIF. Ok?

792
00:44:49,800 --> 00:44:52,800
Allora,

793
00:44:53,520 --> 00:44:56,480
per mostrare che fai è soddisfacbile,

794
00:44:56,480 --> 00:44:59,920
noi mostreremo che è possibile costruire

795
00:44:59,920 --> 00:45:02,640
un assegnamento

796
00:45:02,640 --> 00:45:04,160
sigma

797
00:45:04,160 --> 00:45:07,640
che parte da P che soddisfa la formula

798
00:45:07,640 --> 00:45:10,200
fai. Ok?

799
00:45:10,200 --> 00:45:14,319
E noi la facciamo così.

800
00:45:14,440 --> 00:45:20,160
Sigma di px i gli assegniamo true.

801
00:45:20,160 --> 00:45:25,359
Se t con i true appartiene a p, mentre

802
00:45:25,359 --> 00:45:28,480
sigma di p

803
00:45:28,480 --> 00:45:31,160
è false

804
00:45:31,160 --> 00:45:37,240
se t con i false appartiene a p. Ok?

805
00:45:37,240 --> 00:45:39,960
Quindi noi abbiamo questo insieme che

806
00:45:39,960 --> 00:45:43,319
stiamo chiamando P di Pippo. Là dentro

807
00:45:43,319 --> 00:45:46,200
ci saranno varie

808
00:45:46,200 --> 00:45:49,599
insiemi che provengono da f dif. Ci

809
00:45:49,599 --> 00:45:52,359
saranno tra questi anche T con i true e

810
00:45:52,359 --> 00:45:55,839
t con i false. E facciamo così. Se t con

811
00:45:55,839 --> 00:45:58,839
i true appartiene all'insieme Pippo,

812
00:45:58,839 --> 00:46:02,800
sigma di Pippo assegna vero ad x con i.

813
00:46:02,800 --> 00:46:05,720
Se t con i false sta dentro l'insieme p

814
00:46:05,720 --> 00:46:09,359
di Pippo a sigma di Pippo a X con i gli

815
00:46:09,359 --> 00:46:12,119
facciamo assegnare false. Ok? Quello che

816
00:46:12,119 --> 00:46:16,079
noi dobbiamo adesso mostrare è che così

817
00:46:16,079 --> 00:46:19,839
definita questa sigma di P soddisfa la

818
00:46:19,839 --> 00:46:23,319
formula f. Ok? Allora, la prima cosa che

819
00:46:23,319 --> 00:46:27,000
ci chiediamo è sigma assegna vero o

820
00:46:27,000 --> 00:46:31,880
false a tutte le variabili x con i?

821
00:46:35,240 --> 00:46:38,599
Sì, perché

822
00:46:39,119 --> 00:46:41,319
all'interno della

823
00:46:41,319 --> 00:46:47,680
Lauder lauder
all'interno della F con

824
00:46:47,760 --> 00:46:50,280
Y

825
00:46:50,280 --> 00:46:52,720
FP.
Sì,

826
00:46:52,720 --> 00:46:56,480
tutte le XY.
Ok. Ma dentro P, dentro,

827
00:46:56,480 --> 00:46:58,359
ok, chiamiamolo Pippo questo, questo

828
00:46:58,359 --> 00:47:00,280
insieme. Va bene? P scritto in quel

829
00:47:00,280 --> 00:47:03,480
modo. Dentro l'insieme Pippo abbiamo una

830
00:47:03,480 --> 00:47:05,720
T con i true o T con i false per tutte

831
00:47:05,720 --> 00:47:09,240
le x con i.

832
00:47:11,000 --> 00:47:14,720
Può accadere che una manchi,

833
00:47:14,720 --> 00:47:17,640
no? Perché?

834
00:47:17,640 --> 00:47:19,960
è vero falso.
Attenzione, noi stiamo

835
00:47:19,960 --> 00:47:22,720
partendo da P di Pippo. Non è che P di

836
00:47:22,720 --> 00:47:24,880
Pippo la stiamo costruendo partendo da

837
00:47:24,880 --> 00:47:26,720
sigma, noi stiamo facendo l'opposto.

838
00:47:26,720 --> 00:47:29,119
Partiamo da un insieme P di Pippo.

839
00:47:29,119 --> 00:47:30,960
Attenzione, questo questo è importante e

840
00:47:30,960 --> 00:47:34,079
nella struttura di questa riduzione. Un

841
00:47:34,079 --> 00:47:37,200
attimo. Quindi qua abbiamo P di Pippo e

842
00:47:37,200 --> 00:47:40,240
dentro c'ha roba. Dalla roba che c'è

843
00:47:40,240 --> 00:47:42,960
dentro P di Pippo tiriamo fuori un sigma

844
00:47:42,960 --> 00:47:45,440
di Pippo che sta da un'altra parte.

845
00:47:45,440 --> 00:47:47,640
Allora, quello che io mi chiedo, questa

846
00:47:47,640 --> 00:47:51,480
sigma che costruisco qua, assegna o non

847
00:47:51,480 --> 00:47:54,119
assegna un valore di verità a tutte le x

848
00:47:54,119 --> 00:47:57,640
con i? Se stiamo partendo da di Pippo,

849
00:47:57,640 --> 00:48:00,440
Sì.
Assegna

850
00:48:00,440 --> 00:48:03,319
perché una partizione
perché senò P di

851
00:48:03,319 --> 00:48:06,440
pip non sarebbe una partizione perché P

852
00:48:06,440 --> 00:48:08,319
di pip è una partizione, quindi deve

853
00:48:08,319 --> 00:48:11,000
coprire tutti gli oggetti x con i.

854
00:48:11,000 --> 00:48:14,480
Adesso noi non sappiamo se x con i sarà

855
00:48:14,480 --> 00:48:16,839
coperto da t con i true o t con i false,

856
00:48:16,839 --> 00:48:19,440
ma sarà coperto. Quindi sigma di Pippo

857
00:48:19,440 --> 00:48:22,440
che sta qua ed è sganciato dall'insieme

858
00:48:22,440 --> 00:48:25,400
Pippo assegna un valore di verità a

859
00:48:25,400 --> 00:48:29,599
tutte le variabili buleane di di F. Ok?

860
00:48:29,599 --> 00:48:32,000
Prim qui prima questione tutte le

861
00:48:32,000 --> 00:48:34,000
variabili hanno un valore di verità

862
00:48:34,000 --> 00:48:37,760
dentro sigma. Seconda questione. Questo

863
00:48:37,760 --> 00:48:39,640
questo assegnamento di verità sigma di

864
00:48:39,640 --> 00:48:42,559
Pippo è consistente o no? Nel senso,

865
00:48:42,559 --> 00:48:45,440
esiste una variabile buleana dentro

866
00:48:45,440 --> 00:48:47,800
sigma di Pippo che riceve vero e falso

867
00:48:47,800 --> 00:48:51,680
allo stesso momento. No, perché
per

868
00:48:51,680 --> 00:48:53,960
abbiamo costruito sig.

869
00:48:53,960 --> 00:48:56,160
Eh, ma chi mi dice che non ci sia T con

870
00:48:56,160 --> 00:48:58,240
i true e T con i false dentro qui,

871
00:48:58,240 --> 00:49:02,680
Pippo. Sì,
perché T

872
00:49:02,680 --> 00:49:05,079
come in intersezione, quindi
esattamente

873
00:49:05,079 --> 00:49:07,359
avremo X con in intersezione, quindi non

874
00:49:07,359 --> 00:49:10,359
ci può essere. Ok? Allora, che cosa

875
00:49:10,359 --> 00:49:13,440
abbiamo? Che da P di Pippo, dall'insieme

876
00:49:13,440 --> 00:49:20,160
Pippo, la sigma di Pippo, ok? è un

877
00:49:20,160 --> 00:49:21,640
assegnamento di verità che assegna un

878
00:49:21,640 --> 00:49:24,240
valore di verità a tutte le variabili e

879
00:49:24,240 --> 00:49:27,400
è un assegnamento consistente, ok? Non è

880
00:49:27,400 --> 00:49:30,119
che può fare vero o falso.

881
00:49:30,119 --> 00:49:33,599
Alri? Adesso la questione è: ma questa

882
00:49:33,599 --> 00:49:39,200
sigma di Pippo la soddisfa fai o no?

883
00:49:39,200 --> 00:49:42,640
Lo facciamo, lo dimostriamo per assurdo.

884
00:49:42,640 --> 00:49:44,400
Supponiamo

885
00:49:44,400 --> 00:49:46,599
per assurdo

886
00:49:46,599 --> 00:49:54,200
che sigma di Pippo non soddisfi fai.

887
00:49:54,200 --> 00:49:56,240
Che significa

888
00:49:56,240 --> 00:49:58,040
che

889
00:49:58,040 --> 00:50:02,359
sigma di Pippo non soddisfa fai?

890
00:50:02,359 --> 00:50:08,599
che esiste una clausola CJ difti

891
00:50:09,480 --> 00:50:15,520
letterali sono falsi in sigma di Pippo,

892
00:50:16,880 --> 00:50:19,960
ma ciò implicherebbe

893
00:50:19,960 --> 00:50:23,640
che nell'insieme Pippo noi non stiamo

894
00:50:23,640 --> 00:50:28,839
coprendo l'oggetto CJ,

895
00:50:29,880 --> 00:50:33,079
ma ciò non può essere. Perché Pippo è

896
00:50:33,079 --> 00:50:35,319
una partizione

897
00:50:35,319 --> 00:50:39,520
di UDify, quindi sigma Pippo

898
00:50:39,520 --> 00:50:45,040
deve soddisfare per forza fai.

899
00:50:45,040 --> 00:50:49,880
Quindi se di se f dif contiene una

900
00:50:49,880 --> 00:50:51,440
partizione

901
00:50:51,440 --> 00:50:57,480
di ud era perché f era soddispacibile

902
00:50:57,480 --> 00:51:00,240
e questo ci mostra che le istanze no di

903
00:51:00,240 --> 00:51:04,599
sat vengono mappate su istanze no di

904
00:51:04,599 --> 00:51:07,319
exact cover. Quello che noi abbiamo più

905
00:51:07,319 --> 00:51:09,040
nello specifico visto è che se siamo

906
00:51:09,040 --> 00:51:12,079
arrivati a un'istanza sì di Exat cover

907
00:51:12,079 --> 00:51:16,160
non stavamo partendo da un'istanza no di

908
00:51:16,160 --> 00:51:18,880
sal. Sì.

909
00:51:18,880 --> 00:51:23,440
Ok. Allora, quello che noi ci andiamo a

910
00:51:23,440 --> 00:51:26,440
chiedere

911
00:51:28,400 --> 00:51:30,640
è che

912
00:51:30,640 --> 00:51:36,480
Ok, l'insieme P di Pippo, no?

913
00:51:36,480 --> 00:51:40,839
deve contenere una partizione di Udify e

914
00:51:40,839 --> 00:51:43,440
UDF contiene tutti gli oggetti C con1,

915
00:51:43,440 --> 00:51:46,160
CON2, CON3, C4 e così via, che sono

916
00:51:46,160 --> 00:51:50,839
oggetti associati alle clausole, ok?

917
00:51:50,839 --> 00:51:54,599
Quegli oggetti dentro fifono essere

918
00:51:54,599 --> 00:51:57,960
coperti solo da queste coppie

919
00:51:57,960 --> 00:52:01,119
che avevamo definito qua. Dove sta? da

920
00:52:01,119 --> 00:52:04,119
quest

921
00:52:04,440 --> 00:52:07,880
qua, vedi?

922
00:52:13,359 --> 00:52:19,440
Ok. Quindi, siccome dentro l'insieme P

923
00:52:19,440 --> 00:52:21,640
uno di quelli deve apparire perché mi

924
00:52:21,640 --> 00:52:24,040
deve coprire C con 1. Guardiamo C1.

925
00:52:24,040 --> 00:52:26,280
Siccome c con 1 deve essere coperto da

926
00:52:26,280 --> 00:52:28,920
qualcuno e può essere coperto solo da

927
00:52:28,920 --> 00:52:32,160
quelle coppie, io avrò una coppia o c1 +

928
00:52:32,160 --> 00:52:35,079
1 +1 c1

929
00:52:35,079 --> 00:52:41,400
o c1 2 o c1 p1. una di queste dentro P

930
00:52:41,400 --> 00:52:44,480
di P ci restare.

931
00:52:44,480 --> 00:52:48,599
Adesso quella lì, poiché non può avere

932
00:52:48,599 --> 00:52:51,079
una intersezione

933
00:52:51,079 --> 00:52:53,480
con altri insiemi che sta dentro P di

934
00:52:53,480 --> 00:52:57,040
Pippo, non può in particolare avere

935
00:52:57,040 --> 00:52:58,799
un'intersezione

936
00:52:58,799 --> 00:53:00,839
con gli insiemi Toni i true, toni i

937
00:53:00,839 --> 00:53:03,079
false.

938
00:53:03,079 --> 00:53:05,799
Tigoni tigoni false erano stati definiti

939
00:53:05,799 --> 00:53:08,559
per associare quali letterari diventano

940
00:53:08,559 --> 00:53:11,599
falsi con quel letterale. Quindi la

941
00:53:11,599 --> 00:53:13,760
coppia che mi che mi compare dentro

942
00:53:13,760 --> 00:53:16,079
Pippo mi sta dicendo quale letterale sta

943
00:53:16,079 --> 00:53:18,559
verificando la causa. Questo è un altro

944
00:53:18,559 --> 00:53:21,440
modo per dimostrarvi. Ok? Da cui sigma

945
00:53:21,440 --> 00:53:23,640
Pippo deve per forza soddisfare la

946
00:53:23,640 --> 00:53:26,839
formula fai. Ok?

947
00:53:26,839 --> 00:53:33,079
Chiaro? Alright, 10 minuti di pausa.

948
00:53:40,560 --> 00:53:45,269
[Musica]

949
00:53:49,440 --> 00:53:51,880
Ok, allora quello che vediamo ora è un

950
00:53:51,880 --> 00:53:54,640
problema che sicuramente avete visto, il

951
00:53:54,640 --> 00:53:56,839
problema della Bisaccia, che è una cosa

952
00:53:56,839 --> 00:53:59,799
classica in ricerca operativa, l'avrete

953
00:53:59,799 --> 00:54:03,280
vista o al corsi di algoritmi eccetera

954
00:54:03,280 --> 00:54:06,119
che è il problema del problema del

955
00:54:06,119 --> 00:54:09,119
NAPSAP.

956
00:54:13,280 --> 00:54:15,680
Ok,

957
00:54:15,680 --> 00:54:17,920
me lo sapete definire?

958
00:54:17,920 --> 00:54:20,160
Vi ricordate com'è definito il problema

959
00:54:20,160 --> 00:54:23,400
del NAPS?

960
00:54:23,410 --> 00:54:26,440
[Musica]

961
00:54:26,440 --> 00:54:31,440
trovare gli elementi con la dienti e la

962
00:54:31,440 --> 00:54:34,440
capmaile

963
00:54:38,640 --> 00:54:42,640
da elementi selezionati dal vale che

964
00:54:42,640 --> 00:54:45,000
superino la
Esattamente. Sì, questo è il

965
00:54:45,000 --> 00:54:48,000
problema della Bisaccia classico. Ok,

966
00:54:48,000 --> 00:54:49,960
come le ho chiamate qua le cose, così

967
00:54:49,960 --> 00:54:55,040
non ci perdiamo. Ok. sia

968
00:54:55,040 --> 00:54:59,960
1 n un insieme di oggetti.

969
00:54:59,960 --> 00:55:05,119
Per ognuno di loro abbiamo un peso Boni

970
00:55:05,119 --> 00:55:10,839
e doppia v con i e un valore con i

971
00:55:10,839 --> 00:55:16,920
e poi abbiamo una soglia w grande.

972
00:55:16,920 --> 00:55:19,359
Quello che noi vogliamo trovare è un

973
00:55:19,359 --> 00:55:21,240
sottinsieme

974
00:55:21,240 --> 00:55:23,839
di 1 n

975
00:55:23,839 --> 00:55:26,119
tale che

976
00:55:26,119 --> 00:55:30,359
la somma di i che appartiene a s di w

977
00:55:30,359 --> 00:55:35,079
con i non ecceda w e la somma per i che

978
00:55:35,079 --> 00:55:37,920
appartiene a s dei valori di quegli

979
00:55:37,920 --> 00:55:40,559
oggetti è

980
00:55:40,559 --> 00:55:43,359
massima.

981
00:55:43,359 --> 00:55:46,359
Ok?

982
00:55:47,559 --> 00:55:51,160
Vi ripeto, il problema del Napizzato.

983
00:55:51,160 --> 00:55:56,079
Abbiamo un insieme di oggetti 1 N. Ad

984
00:55:56,079 --> 00:56:00,079
ognuno di loro è associato un peso w di,

985
00:56:00,079 --> 00:56:03,480
ad ognuno di loro è associato un valore

986
00:56:03,480 --> 00:56:06,400
di con i e poi abbiamo una soglia di

987
00:56:06,400 --> 00:56:09,559
peso w maiuscolo. Quello che noi

988
00:56:09,559 --> 00:56:13,000
vogliamo trovare è un sottoinsieme

989
00:56:13,000 --> 00:56:16,480
degli oggetti tali per cui la somma dei

990
00:56:16,480 --> 00:56:18,920
pesi degli oggetti selezionati non

991
00:56:18,920 --> 00:56:22,839
ecceda w grande e la somma dei valori

992
00:56:22,839 --> 00:56:26,319
degli oggetti selezionati è massimo. Sì.

993
00:56:26,319 --> 00:56:28,480
La sommatoria cosa siè scritto?
Come?

994
00:56:28,480 --> 00:56:30,440
Scusi. Sommatoria cosa cè scritto?

995
00:56:30,440 --> 00:56:33,000
Sommatoria per i che appartiene ad s di

996
00:56:33,000 --> 00:56:35,839
w con i e qui è sommatoria per i che

997
00:56:35,839 --> 00:56:38,680
appartiene a s di v con i. Questo

998
00:56:38,680 --> 00:56:42,799
problema sta in np?

999
00:56:44,200 --> 00:56:45,319
Sì.

1000
00:56:45,319 --> 00:56:49,359
Sì, perché una volta che indoviniamo il

1001
00:56:49,359 --> 00:56:54,039
eh il sottoinsieme basta verificare

1002
00:56:55,680 --> 00:56:59,240
Massimo.
Mh. Questo problema sta in NP.

1003
00:56:59,240 --> 00:57:03,000
Ah,
no, perché

1004
00:57:03,000 --> 00:57:05,599
perché non è un problema di decisione,

1005
00:57:05,599 --> 00:57:06,880
ok? Questo è un problema di

1006
00:57:06,880 --> 00:57:09,880
ottimizzazione, così definito. Quindi a

1007
00:57:09,880 --> 00:57:15,480
noi serve una variante di decisione. Ok?

1008
00:57:15,480 --> 00:57:18,079
La variante di decisione la facciamo in

1009
00:57:18,079 --> 00:57:20,440
questo modo. State attenti che quello è

1010
00:57:20,440 --> 00:57:23,280
un errore comune. In NP e in P ci stanno

1011
00:57:23,280 --> 00:57:25,079
solo i problemi di decisione. Problemi

1012
00:57:25,079 --> 00:57:29,559
di ottimizzazione non stanno là,

1013
00:57:29,680 --> 00:57:32,000
anche perché vi faccio notare, poi lo

1014
00:57:32,000 --> 00:57:33,960
vedremo, spero che ci arriviamo in una

1015
00:57:33,960 --> 00:57:37,280
delle lezioni.

1016
00:57:38,480 --> 00:57:42,599
è difficile trovare gessare una una

1017
00:57:42,599 --> 00:57:45,039
soluzione migliore che ce lo garantisce

1018
00:57:45,039 --> 00:57:47,799
che che lo è.

1019
00:57:47,799 --> 00:57:50,640
Cioè non c'è un certificato facile, ok?

1020
00:57:50,640 --> 00:57:53,240
Cioè serve altro. Quindi in realtà il

1021
00:57:53,240 --> 00:57:55,680
problema di ottimizzazione è più

1022
00:57:55,680 --> 00:57:57,880
complicato.

1023
00:57:57,880 --> 00:58:01,799
Quindi la versione che noi abbiamo è

1024
00:58:01,799 --> 00:58:06,720
dato un insieme di oggetti 1 n per

1025
00:58:06,720 --> 00:58:09,440
ognuno dei quali abbiamo un peso e un

1026
00:58:09,440 --> 00:58:14,280
valore e due interi w e k.

1027
00:58:14,280 --> 00:58:18,599
Vogliamo trovare un sottoinsieme

1028
00:58:18,599 --> 00:58:22,720
di eh degli oggetti tale per cui il peso

1029
00:58:22,720 --> 00:58:26,359
totale non eccede w e

1030
00:58:26,359 --> 00:58:29,559
il valore totale

1031
00:58:29,559 --> 00:58:33,760
è almeno K. Ok? Quindi questa è la

1032
00:58:33,760 --> 00:58:35,680
versione di decisione del problema.

1033
00:58:35,680 --> 00:58:40,280
Adesso questo sta in NP. Ok? Quindi noi

1034
00:58:40,280 --> 00:58:44,039
vogliamo dimostrare che Napsa è NP

1035
00:58:44,039 --> 00:58:47,039
completo.

1036
00:58:49,160 --> 00:58:52,160
Membership.

1037
00:58:55,920 --> 00:58:57,839
Come facciamo a dimostrare che la

1038
00:58:57,839 --> 00:58:59,799
variante di decisioni di Napsac, quindi

1039
00:58:59,799 --> 00:59:02,079
il NAPSAC, così come l'abbiamo definito,

1040
00:59:02,079 --> 00:59:05,520
è in NP.

1041
00:59:14,720 --> 00:59:17,200
E semplicemente troviamo sotto insieme,

1042
00:59:17,200 --> 00:59:19,559
quindi poi verifichiamo che i valori la

1043
00:59:19,559 --> 00:59:21,400
somma dei valori

1044
00:59:21,400 --> 00:59:24,119
e che la somma dei pesi non eccetera W.

1045
00:59:24,119 --> 00:59:26,640
Ok? Quindi la dimostrazione che il

1046
00:59:26,640 --> 00:59:28,520
problema in NP è abbastanza semplice.

1047
00:59:28,520 --> 00:59:31,400
Guess polinomiale, check polinomiale.

1048
00:59:31,400 --> 00:59:33,240
Ok?

1049
00:59:33,240 --> 00:59:36,319
La questione più spinosa è mostrarne la

1050
00:59:36,319 --> 00:59:39,319
hardness.

1051
00:59:42,400 --> 00:59:44,079
Ok?

1052
00:59:44,079 --> 00:59:47,119
La hardness, come vi anticipavo, la

1053
00:59:47,119 --> 00:59:50,400
mostriamo tramite riduzione da exact

1054
00:59:50,400 --> 00:59:55,920
cover. Quindi riduciamo exact

1055
00:59:57,760 --> 01:00:00,680
verso il Napsap.

1056
01:00:00,680 --> 01:00:03,680
Ok?

1057
01:00:06,039 --> 01:00:07,760
Ora vi faccio notare che appunto questa

1058
01:00:07,760 --> 01:00:10,319
trasformazione è una cosa un po' strana

1059
01:00:10,319 --> 01:00:13,640
perché che cos'è? Vi ricordate che cos'è

1060
01:00:13,640 --> 01:00:18,160
un'istanza dell'exact cover? Una coppia

1061
01:00:18,160 --> 01:00:22,599
U e F.
F. Sì. Che cos'è un'istanza di

1062
01:00:22,599 --> 01:00:24,240
Napsac?

1063
01:00:24,240 --> 01:00:28,400
È tanta roba. Che cos'è?

1064
01:00:28,400 --> 01:00:32,079
Un insieme di oggetti.

1065
01:00:32,079 --> 01:00:36,240
un insieme di pesi.

1066
01:00:39,400 --> 01:00:43,400
V1 pa pa VN,

1067
01:00:43,400 --> 01:00:47,359
un insieme di valori

1068
01:00:48,440 --> 01:00:52,520
e poi due interi w B grande e K grande.

1069
01:00:52,520 --> 01:00:55,799
Ok? Quindi noi dobbiamo trovare una

1070
01:00:55,799 --> 01:00:57,799
trasformazione

1071
01:00:57,799 --> 01:01:02,039
F che dà una coppia universo, insiemi di

1072
01:01:02,039 --> 01:01:04,599
sottinsiemi dell'universo, ci tira fuori

1073
01:01:04,599 --> 01:01:07,000
un insieme di oggetti,

1074
01:01:07,000 --> 01:01:09,359
dei pesi associati, dei valori

1075
01:01:09,359 --> 01:01:10,880
associati,

1076
01:01:10,880 --> 01:01:13,520
un target di valore e una soglia massima

1077
01:01:13,520 --> 01:01:16,160
di peso, ok? Cioè sta F deve tirare

1078
01:01:16,160 --> 01:01:20,039
fuori tutta questa roba qui, ok? e lo

1079
01:01:20,039 --> 01:01:23,720
deve fare in maniera tale che dentro f

1080
01:01:23,720 --> 01:01:26,599
ci sta una partizione di U. Se è solo se

1081
01:01:26,599 --> 01:01:29,720
l'istanza di Napsac che generiamo

1082
01:01:29,720 --> 01:01:31,680
ammette un modo di scegliere oggetti

1083
01:01:31,680 --> 01:01:34,160
tale per cui la somma dei pesi non

1084
01:01:34,160 --> 01:01:36,839
eccede w e la somma dei valori è almeno

1085
01:01:36,839 --> 01:01:40,240
k. Ok? Quindi insomma questa funzione f

1086
01:01:40,240 --> 01:01:43,359
deve fare un gran bel lavoro. Ok? Ci

1087
01:01:43,359 --> 01:01:45,359
dobbiamo inventare una cosa un po'

1088
01:01:45,359 --> 01:01:48,960
tricchy. Ok? Allora, vi

1089
01:01:48,960 --> 01:01:53,520
do un primo un primo input, ve lo do io,

1090
01:01:53,520 --> 01:01:55,480
dopodiché ci ragioniamo un po' assieme,

1091
01:01:55,480 --> 01:01:59,920
ok? Allora, l'istanza

1092
01:01:59,920 --> 01:02:03,520
che noi andremo a costruire di Napsac,

1093
01:02:03,520 --> 01:02:05,839
guardate che

1094
01:02:05,839 --> 01:02:09,119
queste questi oggetti qua che la formula

1095
01:02:09,119 --> 01:02:12,400
F costruisce possono essere qualsiasi.

1096
01:02:12,400 --> 01:02:15,000
L'importante è che rispettino il mapping

1097
01:02:15,000 --> 01:02:16,880
di istanze sì su istanze sì e istanze no

1098
01:02:16,880 --> 01:02:18,720
su istanze no. Ma non è che abbiamo dei

1099
01:02:18,720 --> 01:02:23,359
vincoli che debbano avere, no, debbano o

1100
01:02:23,359 --> 01:02:25,920
non debbono avere una forma particolare.

1101
01:02:25,920 --> 01:02:29,160
Allora, fra tutte le istanze di Napsac

1102
01:02:29,160 --> 01:02:31,680
che F può tirare fuori, noi ne

1103
01:02:31,680 --> 01:02:35,079
costruiremo una molto particolare che ci

1104
01:02:35,079 --> 01:02:37,640
permette di semp semplificarci un po' le

1105
01:02:37,640 --> 01:02:39,400
cose.

1106
01:02:39,400 --> 01:02:43,000
Nonostante questa riduzione costruisca

1107
01:02:43,000 --> 01:02:46,079
un'istanza di Napsac molto specifica,

1108
01:02:46,079 --> 01:02:47,920
quello non toglierà nulla alla

1109
01:02:47,920 --> 01:02:50,599
difficoltà del problema Napsac se noi

1110
01:02:50,599 --> 01:02:53,279
siamo in grado di evappare in ogni caso

1111
01:02:53,279 --> 01:02:55,920
exact su NAPSAC. Ok? Cioè il fatto che

1112
01:02:55,920 --> 01:03:00,279
noi costruiamo in maniera molto peculiar

1113
01:03:00,279 --> 01:03:02,559
istanze del problema di di destinazione

1114
01:03:02,559 --> 01:03:05,359
non significa nulla, significa che

1115
01:03:05,359 --> 01:03:08,119
quelle stanze, quella classe di stanze

1116
01:03:08,119 --> 01:03:12,000
molto limitata già dai loro è NP ardua.

1117
01:03:12,000 --> 01:03:15,480
Ok? Tutto qua. Allora, nella riduzione

1118
01:03:15,480 --> 01:03:18,319
fongo,

1119
01:03:18,319 --> 01:03:20,880
noi avremo che

1120
01:03:20,880 --> 01:03:27,680
w v I sarà uguale a V con I. per ogni i

1121
01:03:27,680 --> 01:03:31,000
edoltre avremo che W grande sarà uguale

1122
01:03:31,000 --> 01:03:32,839
a Kand,

1123
01:03:32,839 --> 01:03:35,760
ok? Quindi sarà l'istanza che F

1124
01:03:35,760 --> 01:03:39,119
costruirà sarà un'istanza molto

1125
01:03:39,119 --> 01:03:42,720
particolare, un'istanza in cui ogni

1126
01:03:42,720 --> 01:03:47,039
oggetto vale tanto quanto pesa

1127
01:03:47,039 --> 01:03:52,599
e W sarà uguale a K.

1128
01:03:53,960 --> 01:03:59,319
Come
problema diventa possibilità.
Mh.

1129
01:03:59,319 --> 01:04:02,559
Allora, guardate la definizione voi la

1130
01:04:02,559 --> 01:04:08,760
vedete là? Sì, vedete tutto? Ok. Sì.

1131
01:04:11,119 --> 01:04:16,079
K.
La F che noi costruiremo costruirà

1132
01:04:16,079 --> 01:04:19,599
sputerà in output fuori un W = K. Avrà

1133
01:04:19,599 --> 01:04:22,119
questa peculiarità. Possiamo decidere di

1134
01:04:22,119 --> 01:04:25,920
farlo. Sì, gli elementi che poi cioè che

1135
01:04:25,920 --> 01:04:28,039
si deve essere contemporaneamente.

1136
01:04:28,039 --> 01:04:30,319
Esattamente. E questa l'osservazione che

1137
01:04:30,319 --> 01:04:31,960
vi volevo fare. Il nostro collega è

1138
01:04:31,960 --> 01:04:34,559
stato molto veloce in questo, ha

1139
01:04:34,559 --> 01:04:38,039
individuato questa cosa. Siccome W

1140
01:04:38,039 --> 01:04:43,279
grande è uguale a K e le W con I piccole

1141
01:04:43,279 --> 01:04:47,520
sono uguali alle V, siccome noi dobbiamo

1142
01:04:47,520 --> 01:04:50,760
verificare sia questo che questo, il

1143
01:04:50,760 --> 01:04:55,279
tutto si riduce a Ma esiste un insieme

1144
01:04:55,279 --> 01:04:59,839
delle w con i che sommate da esattamente

1145
01:04:59,839 --> 01:05:01,920
w

1146
01:05:01,920 --> 01:05:05,240
se noi andiamo a costruire, cioè se f

1147
01:05:05,240 --> 01:05:07,799
tra tutte tutte le stanze di Napsak che

1148
01:05:07,799 --> 01:05:10,599
può tirare fuori, sputa queste qui

1149
01:05:10,599 --> 01:05:13,279
particolari. Queste stanze saranno

1150
01:05:13,279 --> 01:05:17,119
istanze sì se esiste un modo di

1151
01:05:17,119 --> 01:05:20,400
scegliere degli oggetti tale per cui la

1152
01:05:20,400 --> 01:05:24,520
somma dei loro pesi è esattamente w. Ok?

1153
01:05:24,520 --> 01:05:28,520
Quindi ci siamo andati a ridurre a

1154
01:05:28,520 --> 01:05:30,559
ricondurre a un problema molto più

1155
01:05:30,559 --> 01:05:33,520
semplice. Ok? È chiaro? Cosa? Cosa

1156
01:05:33,520 --> 01:05:36,880
facciamo? il trucco e noi sfruttiamo

1157
01:05:36,880 --> 01:05:40,599
questo per la riduzione da exact. Ok?

1158
01:05:40,599 --> 01:05:43,480
Cioè se consideriamo questa cosa qua, la

1159
01:05:43,480 --> 01:05:46,799
riduzione da exacterà

1160
01:05:46,799 --> 01:05:50,400
una cosa aliena. Ok?

1161
01:05:50,400 --> 01:05:54,640
Allora, il trucco è

1162
01:05:54,640 --> 01:05:57,520
eh No, no, pensiamoci un po' assieme.

1163
01:05:57,520 --> 01:06:00,520
Ok? Allora,

1164
01:06:00,520 --> 01:06:02,400
quello che noi dobbiamo inventarci,

1165
01:06:02,400 --> 01:06:04,279
quindi è chiaro? Quindi noi stiamo

1166
01:06:04,279 --> 01:06:06,160
partendo,

1167
01:06:06,160 --> 01:06:08,079
abbiamo il nostro programma di partenza

1168
01:06:08,079 --> 01:06:11,520
che sta qua, bello, visualizzatelo. UF

1169
01:06:11,520 --> 01:06:14,559
un insieme di oggetti che è l'universo,

1170
01:06:14,559 --> 01:06:18,079
più una famiglia di sottoinsiemi

1171
01:06:18,079 --> 01:06:20,160
e noi ci vogliamo chiedere se questa

1172
01:06:20,160 --> 01:06:23,200
famiglia di sottoinsiemi contenga

1173
01:06:23,200 --> 01:06:26,319
o meno una partizione di u. Quindi qua

1174
01:06:26,319 --> 01:06:28,920
c'abbiamo la nostra istanza. Dall'altro

1175
01:06:28,920 --> 01:06:31,799
lato, immaginate la bella separata,

1176
01:06:31,799 --> 01:06:37,039
abbiamo un insieme di numeri

1177
01:06:37,359 --> 01:06:41,279
più un numero grosso W.

1178
01:06:41,279 --> 01:06:45,079
E noi ci vogliamo chiedere se esista un

1179
01:06:45,079 --> 01:06:49,279
modo o meno di selezionare numeri da

1180
01:06:49,279 --> 01:06:52,599
questa lista tale che tali che la loro

1181
01:06:52,599 --> 01:06:55,880
somma sia esattamente W. Quindi da un

1182
01:06:55,880 --> 01:06:59,079
lato mi chiedo se posso scegliere

1183
01:06:59,079 --> 01:07:03,760
insiemi che partizionino u. Dall'altro

1184
01:07:03,760 --> 01:07:07,599
mi chiedo, esistono numeri che sommati

1185
01:07:07,599 --> 01:07:10,079
fanno w.

1186
01:07:10,079 --> 01:07:13,760
Che numeri ci possiamo inventare?

1187
01:07:13,760 --> 01:07:17,680
Io potrei partire da ho una partizione

1188
01:07:17,680 --> 01:07:21,039
m ho n elemento nella parezione.
Ah ah

1189
01:07:21,039 --> 01:07:23,160
indice 1 n sono il numero di elementi

1190
01:07:23,160 --> 01:07:25,039
che ho nella partizione. Il numero di

1191
01:07:25,039 --> 01:07:26,880
insieme che ho nella parzione.
Ok. Ok.

1192
01:07:26,880 --> 01:07:28,760
Un attimo. Quello che voglio capire è

1193
01:07:28,760 --> 01:07:31,559
lei sta le le hanno consegnato in mano

1194
01:07:31,559 --> 01:07:33,319
una partizione

1195
01:07:33,319 --> 01:07:36,599
e lei sta trasformando la partizione.

1196
01:07:36,599 --> 01:07:38,520
Non si può fare perché noi dobbiamo

1197
01:07:38,520 --> 01:07:42,520
trasformare UF, non l'insieme pippo. Ok?

1198
01:07:42,520 --> 01:07:46,760
A noi ci danno U ed. Questi due cosi

1199
01:07:46,760 --> 01:07:49,520
devono diventare un insieme di numeri,

1200
01:07:49,520 --> 01:07:53,200
una lista di numeri e un numero w grande

1201
01:07:53,200 --> 01:07:57,079
tale per cui dalla lista dei numeri noi

1202
01:07:57,079 --> 01:08:00,599
possiamo sceglierne alcuni che sommino a

1203
01:08:00,599 --> 01:08:04,920
w grande se solo se dentro f potevamo

1204
01:08:04,920 --> 01:08:07,640
scegliere in qualche modo una partizione

1205
01:08:07,640 --> 01:08:13,039
dello dell'insieme U. Chiaro?

1206
01:08:14,920 --> 01:08:17,480
Come si può fare? Io tengo un occhio

1207
01:08:17,480 --> 01:08:20,480
sull'orologio.

1208
01:08:23,159 --> 01:08:26,719
Sì, prego. Eh, magari dat Q ed f per

1209
01:08:26,719 --> 01:08:30,759
potremmo trovare insiemi eh di fsi

1210
01:08:30,759 --> 01:08:34,759
compongono la partizione e quindi da lì,

1211
01:08:34,759 --> 01:08:38,080
quindi verificando il polinomiale.

1212
01:08:38,080 --> 01:08:40,679
Attenzione perché se lei mi sta dicendo

1213
01:08:40,679 --> 01:08:44,839
io dentro f mi calcolo la partizione di

1214
01:08:44,839 --> 01:08:47,600
u e quella cosa io non la so fare in

1215
01:08:47,600 --> 01:08:50,159
tempo polinomiale perché perché exact

1216
01:08:50,159 --> 01:08:54,359
cover è np completo. Quindi tirarmi

1217
01:08:54,359 --> 01:08:58,839
fuori da f la partizione di u se c'è non

1218
01:08:58,839 --> 01:09:01,239
lo riesco a fare in tempo polinomiale.

1219
01:09:01,239 --> 01:09:03,239
Dobbiamo fare un'altra cosa che

1220
01:09:03,239 --> 01:09:07,120
prescinda dal verificare se f contenga o

1221
01:09:07,120 --> 01:09:09,000
meno una partizione, perché se io me lo

1222
01:09:09,000 --> 01:09:14,159
chiedo ci impiego troppo tempo.

1223
01:09:14,159 --> 01:09:16,880
Come
la funzione f deve essere

1224
01:09:16,880 --> 01:09:19,880
deterministica.

1225
01:09:20,080 --> 01:09:21,839
deve essere deterministica e calcolarsi

1226
01:09:21,839 --> 01:09:24,960
in tempo polinomiale. Sì,
è un'idea che

1227
01:09:24,960 --> 01:09:29,719
ma noi accettiamo tutto.
E u io lo

1228
01:09:29,719 --> 01:09:33,000
metterei come la nostra lista di oggetto

1229
01:09:33,000 --> 01:09:37,359
essenzialmente. Ah,
e poi per a partire

1230
01:09:37,359 --> 01:09:40,880
da f per creare i che poi sono uguali ai

1231
01:09:40,880 --> 01:09:44,400
valori per assunzione andrei a contare

1232
01:09:44,400 --> 01:09:48,319
dentro fante volte appare il singolo

1233
01:09:48,319 --> 01:09:52,679
oggetto del tipo m
se ho l'oggetto uno

1234
01:09:52,679 --> 01:09:54,679
che appare due volte quello è il suo

1235
01:09:54,679 --> 01:09:59,719
valore, il suo peso.
Ok? Eh,

1236
01:09:59,719 --> 01:10:02,920
potrebbe essere una strada.

1237
01:10:02,920 --> 01:10:06,880
Si tratta sì di trasformare, cioè l'idea

1238
01:10:06,880 --> 01:10:08,920
da cui dobbiamo partire è più tipo

1239
01:10:08,920 --> 01:10:10,719
questa che ci dice la nostra collega,

1240
01:10:10,719 --> 01:10:13,320
cioè andare a guardare la struttura di f

1241
01:10:13,320 --> 01:10:16,880
e tirarci fuori dei numeri. Non possiamo

1242
01:10:16,880 --> 01:10:19,480
calcolarci la partizione, serve troppo

1243
01:10:19,480 --> 01:10:22,040
tempo. Prego.
Ho una domanda. Gli

1244
01:10:22,040 --> 01:10:24,560
insiemati

1245
01:10:24,560 --> 01:10:28,440
F. gli insiemi in fini

1246
01:10:28,440 --> 01:10:31,440
insieme,

1247
01:10:31,440 --> 01:10:34,400
scusi,
l'insieme matematico di solito

1248
01:10:34,400 --> 01:10:38,480
non possiamo usar
Ok, no? Cioè dentro f

1249
01:10:38,480 --> 01:10:42,199
ci stanno possibili sottoinsiemi di U

1250
01:10:42,199 --> 01:10:45,199
che possono avere intersezione vuota o

1251
01:10:45,199 --> 01:10:47,920
non vuota, eccetera. Perché la questione

1252
01:10:47,920 --> 01:10:50,640
è: "Ma tra tutta la roba che ci sta in f

1253
01:10:50,640 --> 01:10:52,800
io ne posso selezionare qualcuno che mi

1254
01:10:52,800 --> 01:10:55,360
partizioni uno?" e dall'altro lato. Ma

1255
01:10:55,360 --> 01:10:57,520
tra questi numeri che ho ne posso

1256
01:10:57,520 --> 01:11:00,600
selezionare qualcuno?

1257
01:11:00,600 --> 01:11:05,199
Alcuni che sommati fanno W?

1258
01:11:07,440 --> 01:11:10,640
Ok, sta prendendo del tempo. Vi do un

1259
01:11:10,640 --> 01:11:13,640
hint.

1260
01:11:16,560 --> 01:11:18,600
Ok.

1261
01:11:18,600 --> 01:11:20,440
Rappresentazione

1262
01:11:20,440 --> 01:11:25,320
binaria dei numeri. Vi dice niente?

1263
01:11:32,120 --> 01:11:35,880
Come il tutto si può partire. Ok, poi ci

1264
01:11:35,880 --> 01:11:37,760
dobbiamo un po' lavorare su

1265
01:11:37,760 --> 01:11:42,400
rappresentazione binaria di numeri.

1266
01:11:44,520 --> 01:11:48,239
Rappresentazione binaria di numeri 01.

1267
01:11:48,239 --> 01:11:51,719
quel 01 possono essere le cifre del

1268
01:11:51,719 --> 01:11:54,679
numero binario oppure possono dirci che

1269
01:11:54,679 --> 01:11:58,600
cosa? Appartenenza
appartenenza o meno

1270
01:11:58,600 --> 01:12:02,239
di che cosa?

1271
01:12:02,239 --> 01:12:05,239
Come

1272
01:12:05,679 --> 01:12:07,760
un attimo

1273
01:12:07,760 --> 01:12:09,679
appartenenza a un sottoinsieme di un

1274
01:12:09,679 --> 01:12:12,880
determinato
un sottinsieme di cosa?
Eh,

1275
01:12:12,880 --> 01:12:18,159
dell
IF. Ok, la sua idea. Ok. Allora,

1276
01:12:18,159 --> 01:12:20,199
l'idea principale, poi la dobbiamo

1277
01:12:20,199 --> 01:12:22,920
rifinire perché adesso vedremo un po' di

1278
01:12:22,920 --> 01:12:24,679
cose,

1279
01:12:24,679 --> 01:12:29,199
è che gli insiemi dentro f No, vi faccio

1280
01:12:29,199 --> 01:12:32,480
un esempio specifico

1281
01:12:32,480 --> 01:12:34,159
che poi ci servirà anche per dopo.

1282
01:12:34,159 --> 01:12:37,840
Supponiamo di avere u in questo modo, 1

1283
01:12:37,840 --> 01:12:45,199
2 3 e 4. Ok? Ed f è fatto così.

1284
01:12:45,199 --> 01:12:47,960
3 4

1285
01:12:47,960 --> 01:12:51,520
2 4

1286
01:12:51,679 --> 01:12:58,639
2 3 e 4. Ok? Allora, l'idea e siccome

1287
01:12:58,639 --> 01:13:00,800
questa U e questa F devono essere

1288
01:13:00,800 --> 01:13:04,040
mappati verso una lista di interi e un

1289
01:13:04,040 --> 01:13:06,360
numero w,

1290
01:13:06,360 --> 01:13:08,480
allora come ci propongono i nostri

1291
01:13:08,480 --> 01:13:11,679
colleghi è che questa f,

1292
01:13:11,679 --> 01:13:15,920
quindi se questa è f1, f2

1293
01:13:15,920 --> 01:13:18,920
f3,

1294
01:13:19,159 --> 01:13:24,719
questo qui diventa il numero w di

1295
01:13:24,719 --> 01:13:29,800
La qui rappresentazione binaria è 001

1296
01:13:29,800 --> 01:13:32,679
1 in base 2.

1297
01:13:32,679 --> 01:13:38,639
Da qui io ottengo w2 che è 01

1298
01:13:38,639 --> 01:13:44,080
in base 2 e da qui ottengo V3

1299
01:13:44,080 --> 01:13:50,280
che è 0 1 in base 2.

1300
01:13:50,800 --> 01:13:54,080
Ok, peremp

1301
01:13:54,080 --> 01:14:00,440
f1
come
f3 con f160

1302
01:14:02,199 --> 01:14:06,480
cap3
sì
in quel esempio in più di f1 e

1303
01:14:06,480 --> 01:14:09,000
di f1

1304
01:14:09,000 --> 01:14:12,239
casistica?
Ma perché no? È un caso del

1305
01:14:12,239 --> 01:14:14,000
del problema di Exact cover. Noi

1306
01:14:14,000 --> 01:14:18,000
dobbiamo essere in grado di di ah di

1307
01:14:18,000 --> 01:14:19,639
essere dobbiamo essere in grado di

1308
01:14:19,639 --> 01:14:22,040
trasformare qualsiasi istanza di exacto

1309
01:14:22,040 --> 01:14:24,520
cover. Ok? Particolare questa che vi ho

1310
01:14:24,520 --> 01:14:26,480
scritto qua è un'istanza sì o un'istanza

1311
01:14:26,480 --> 01:14:29,120
no di exact cover? È un'istanza no

1312
01:14:29,120 --> 01:14:30,880
perché

1313
01:14:30,880 --> 01:14:33,400
possiamo inventarci quello che vogliamo.

1314
01:14:33,400 --> 01:14:35,400
Noi l'oggetto uno non lo copriamo in

1315
01:14:35,400 --> 01:14:36,719
nessun modo. Ok? Quindi questa è

1316
01:14:36,719 --> 01:14:39,440
un'istanza no. Però l'idea che i nostri

1317
01:14:39,440 --> 01:14:41,840
colleghi ci hanno dato è che noi

1318
01:14:41,840 --> 01:14:44,800
partiamo da f1,

1319
01:14:44,800 --> 01:14:49,440
f2, f3 e in base agli oggetti che stanno

1320
01:14:49,440 --> 01:14:54,560
in f con i costruiamo il peso w con i in

1321
01:14:54,560 --> 01:14:57,320
cui se c'è l'oggetto

1322
01:14:57,320 --> 01:15:02,520
j mettiamo il digit, la cifra 1 nella

1323
01:15:02,520 --> 01:15:04,880
rappresentazione binaria di W con. Se

1324
01:15:04,880 --> 01:15:06,960
l'oggetto j non ci sta, noi ci mettiamo

1325
01:15:06,960 --> 01:15:10,040
la cifra zero. Ok? Quindi questo qua che

1326
01:15:10,040 --> 01:15:16,920
cos'è? Questo è 3, questo è 5 e questo è

1327
01:15:16,920 --> 01:15:20,679
7. Ok?

1328
01:15:21,639 --> 01:15:23,960
Per W.

1329
01:15:23,960 --> 01:15:27,480
W otteniamo da questo. W grande. Che

1330
01:15:27,480 --> 01:15:32,280
cos'è? È tutti 1.

1331
01:15:32,320 --> 01:15:35,040
Ok? Quindi questo quanto vale? Questo

1332
01:15:35,040 --> 01:15:38,280
vale 15.

1333
01:15:38,280 --> 01:15:41,360
È chiaro?

1334
01:15:41,960 --> 01:15:44,480
Chiaro per tutti? Quindi l'idea di fondo

1335
01:15:44,480 --> 01:15:47,760
è trasformare

1336
01:15:47,760 --> 01:15:52,639
gli insiemi dentro fso numeri che in

1337
01:15:52,639 --> 01:15:55,360
qualche modo codifichino cosa ci sta

1338
01:15:55,360 --> 01:16:00,600
dentro f e cosa non ci sta dentro f. Ok?

1339
01:16:00,600 --> 01:16:02,520
E lo facciamo andando a guardare la

1340
01:16:02,520 --> 01:16:06,320
rappresentazione binaria dei dopp con.

1341
01:16:06,320 --> 01:16:09,840
Se l'oggetto J c'è, usiamo la cifra 1,

1342
01:16:09,840 --> 01:16:12,480
la corrispondente cifra 1. Se l'oggetto

1343
01:16:12,480 --> 01:16:15,639
J non c'è,

1344
01:16:15,639 --> 01:16:20,360
usiamo la corrispondente cifra 0. Ok?

1345
01:16:20,360 --> 01:16:22,480
Quindi, sostanzialmente,

1346
01:16:22,480 --> 01:16:25,719
se noi invece quelle

1347
01:16:25,719 --> 01:16:28,280
stringhe binarie,

1348
01:16:28,280 --> 01:16:30,199
quelle quei numeri in binario, le

1349
01:16:30,199 --> 01:16:32,040
interpretassimo semplicemente come delle

1350
01:16:32,040 --> 01:16:34,040
stringhe di bureani, staremmo

1351
01:16:34,040 --> 01:16:36,960
riconducendo l'or logico di quelle

1352
01:16:36,960 --> 01:16:39,880
stringhe di bureani a fare la somma di

1353
01:16:39,880 --> 01:16:42,600
str di numeri rappresentati binari.

1354
01:16:42,600 --> 01:16:45,040
Cioè, questa è la è il mapping che

1355
01:16:45,040 --> 01:16:48,199
stiamo cercando di ottenere. Ok?

1356
01:16:48,199 --> 01:16:51,000
Vi è chiara almeno l'intuizione?

1357
01:16:51,000 --> 01:16:54,840
Questa cosa funziona così com'è o no?

1358
01:16:54,840 --> 01:16:57,679
No. Perché?

1359
01:16:57,679 --> 01:16:59,000
Perché in questo caso abbiamo un'istanza

1360
01:16:59,000 --> 01:17:02,480
normale
arriviamo a un'istanza sì.

1361
01:17:02,480 --> 01:17:04,239
Arriveremo a un'istanza sì di questo

1362
01:17:04,239 --> 01:17:07,040
Napsa perché perché quando facciamo la

1363
01:17:07,040 --> 01:17:11,400
somma qual è il problema?

1364
01:17:12,040 --> 01:17:13,960
Ah, ok.

1365
01:17:13,960 --> 01:17:18,040
0 1 che è quello là.

1366
01:17:18,040 --> 01:17:21,480
+ 01

1367
01:17:21,480 --> 01:17:26,960
che è il secondo + 1 1 uguale

1368
01:17:26,960 --> 01:17:31,600
1 1 1 1. Il problema dove sta?

1369
01:17:31,600 --> 01:17:34,600
L'orologico non dà la stringa di buleani

1370
01:17:34,600 --> 01:17:38,520
tutti uno, ma la somma dà la stringa la

1371
01:17:38,520 --> 01:17:40,280
il numero la cui rappresentazione

1372
01:17:40,280 --> 01:17:42,800
binaria è tutti uno. Dov'è il problema?

1373
01:17:42,800 --> 01:17:46,679
È che corrisponde a W.
Corrisponde a W.

1374
01:17:46,679 --> 01:17:50,159
Ok, ma in questa somma, qual è il

1375
01:17:50,159 --> 01:17:52,120
problema di questa somma che non ci

1376
01:17:52,120 --> 01:17:55,199
permette di replicare l'or logico di

1377
01:17:55,199 --> 01:17:57,480
queste? Se noi interpretassimo quelli

1378
01:17:57,480 --> 01:17:59,960
come stringhe di buleani?

1379
01:17:59,960 --> 01:18:02,360
È il riporto, ok? Cioè noi in questa

1380
01:18:02,360 --> 01:18:04,280
somma abbiamo il riporto che ci crea dei

1381
01:18:04,280 --> 01:18:06,400
problemi, quindi noi ci dobbiamo

1382
01:18:06,400 --> 01:18:08,080
inventare

1383
01:18:08,080 --> 01:18:11,679
dei numeri tali per cui il riporto non

1384
01:18:11,679 --> 01:18:14,679
ci dia dei problemi. È chiaro? Tutto lì.

1385
01:18:14,679 --> 01:18:17,040
Poi se noi riusciamo a superare questo

1386
01:18:17,040 --> 01:18:19,440
ostacolo, il l'ostacolo del riporto, il

1387
01:18:19,440 --> 01:18:21,280
gioco è fatto, la riduzione

1388
01:18:21,280 --> 01:18:25,280
funzionerebbe. Ok? Allora, spostiamoci

1389
01:18:25,280 --> 01:18:27,880
su un'altra pagina.

1390
01:18:27,880 --> 01:18:30,639
Quindi noi abbiamo un'istanza U fatta di

1391
01:18:30,639 --> 01:18:34,239
oggetti da 1 a n

1392
01:18:34,239 --> 01:18:38,440
e un insieme ftoinsiemi

1393
01:18:40,120 --> 01:18:44,560
di U che sono F1 FM.

1394
01:18:44,560 --> 01:18:47,920
Quindi un pezzo noi

1395
01:18:47,920 --> 01:18:50,080
già lo sappiamo, questa cosa qua deve

1396
01:18:50,080 --> 01:18:53,719
essere trasformata in un insieme di

1397
01:18:53,719 --> 01:18:58,760
numeri w con 1, w con m e poi un w

1398
01:18:58,760 --> 01:19:01,760
grande. Ok? Questa è la trasformazione

1399
01:19:01,760 --> 01:19:04,360
che vogliamo ottenere in maniera tale

1400
01:19:04,360 --> 01:19:06,800
che è possibile selezionare nella lista

1401
01:19:06,800 --> 01:19:10,000
W con1 W con m

1402
01:19:10,000 --> 01:19:14,360
dei numeri da lì la cui somma sia w.

1403
01:19:14,360 --> 01:19:16,960
Abbiamo visto che la codifica binaria

1404
01:19:16,960 --> 01:19:21,960
del peso eh ottenere i pesi tramite la

1405
01:19:21,960 --> 01:19:24,280
codifica binaria dell'appartenenza o

1406
01:19:24,280 --> 01:19:27,560
meno di oggetti a F agli F con J è una

1407
01:19:27,560 --> 01:19:30,840
buona idea. Il problema è il riporto.

1408
01:19:30,840 --> 01:19:33,520
Ok? Quello è il riporto. Quindi dobbiamo

1409
01:19:33,520 --> 01:19:35,159
inventarci

1410
01:19:35,159 --> 01:19:40,520
dei W con i o W con J tali che il

1411
01:19:40,520 --> 01:19:44,000
riporto sicuramente non ci dà problemi.

1412
01:19:44,000 --> 01:19:47,239
Come facciamo?

1413
01:19:48,320 --> 01:19:51,320
L'orologico

1414
01:19:52,679 --> 01:19:54,880
perché

1415
01:19:54,880 --> 01:19:56,840
l'orologico non lo possiamo usare perché

1416
01:19:56,840 --> 01:19:58,360
nel problema di arrivo non stiamo

1417
01:19:58,360 --> 01:20:00,000
facendo lor di stringhe e goleare,

1418
01:20:00,000 --> 01:20:02,880
stiamo facendo somme di numeri. Quindi è

1419
01:20:02,880 --> 01:20:04,520
la definizione del problema che ci

1420
01:20:04,520 --> 01:20:07,040
costringe a guardare la somma. Allora

1421
01:20:07,040 --> 01:20:09,360
noi dobbiamo inventarci però dei numeri

1422
01:20:09,360 --> 01:20:11,800
tali per cui il riporto non ci dia

1423
01:20:11,800 --> 01:20:15,639
fastidio. Quella è la è la questione.

1424
01:20:15,639 --> 01:20:17,239
Come si fa?

1425
01:20:17,239 --> 01:20:19,280
convertibile

1426
01:20:19,280 --> 01:20:23,719
alla fine per riconvertire invece

1427
01:20:25,920 --> 01:20:28,159
no perché quello che noi dobbiamo

1428
01:20:28,159 --> 01:20:30,679
ottenere è una trasformazione degli f

1429
01:20:30,679 --> 01:20:35,440
con j nelle w con j tale per cui il

1430
01:20:35,440 --> 01:20:39,239
solutore del naps che di or logico non

1431
01:20:39,239 --> 01:20:42,040
ne sa proprio nulla selezioni i numeri

1432
01:20:42,040 --> 01:20:44,159
li sommi e ti dice sì riescono a sommare

1433
01:20:44,159 --> 01:20:47,480
a doppio q ok Come possiamo fare a

1434
01:20:47,480 --> 01:20:51,360
evitare che

1435
01:20:51,719 --> 01:20:55,239
Sì,
posso usare tipo il bit di parità,

1436
01:20:55,239 --> 01:20:57,960
potremmo usare tipo un bit di parità

1437
01:20:57,960 --> 01:21:00,960
oppure

1438
01:21:01,440 --> 01:21:03,400
vi guido perché sennò non finiamo per

1439
01:21:03,400 --> 01:21:06,679
tempo. Ok? In questo esempio specifico,

1440
01:21:06,679 --> 01:21:11,840
in questo esempio specifico UF, quanti f

1441
01:21:11,840 --> 01:21:14,760
Quanti F con hanno dentro f?

1442
01:21:14,760 --> 01:21:18,280
3
3.
Ciò significa che nella peggiore

1443
01:21:18,280 --> 01:21:21,000
delle ipotesi noi avremo tre numeri da

1444
01:21:21,000 --> 01:21:23,760
sommare. Ok? Come facciamo a essere

1445
01:21:23,760 --> 01:21:25,320
sicuri

1446
01:21:25,320 --> 01:21:29,920
che la somma di tre unità non generi

1447
01:21:29,920 --> 01:21:32,920
riporto?

1448
01:21:35,320 --> 01:21:37,440
Scegliamo tre. Che cosa?
Togliamo

1449
01:21:37,440 --> 01:21:40,920
togliamo tre. No,

1450
01:21:40,920 --> 01:21:44,280
che quegli un Sì.

1451
01:21:44,280 --> 01:21:46,960
al massimo

1452
01:21:46,960 --> 01:21:50,120
cifre se un
eh ok però una possibile

1453
01:21:50,120 --> 01:21:52,120
soluzione potrebbe contemplare di

1454
01:21:52,120 --> 01:21:55,520
prenderle tutte. Come facciamo a essere

1455
01:21:55,520 --> 01:21:59,320
sicuri che la somma di tre unità non

1456
01:21:59,320 --> 01:22:02,520
genne di riporto?

1457
01:22:02,520 --> 01:22:04,159
Questo è proprio un volo di fantasia,

1458
01:22:04,159 --> 01:22:06,239
eh? Ci prendiamo qualche secondo, poi ve

1459
01:22:06,239 --> 01:22:08,080
la dico, perché senò non finisce. Sì,

1460
01:22:08,080 --> 01:22:10,239
vado ad espandere

1461
01:22:10,239 --> 01:22:13,159
il la somma dal punto di vista gli

1462
01:22:13,159 --> 01:22:15,480
elementi.
Quello lo potremmo fare, però

1463
01:22:15,480 --> 01:22:17,679
poi a un certo punto avremo dei riporti

1464
01:22:17,679 --> 01:22:21,199
che si vanno a collocare su colonne che

1465
01:22:21,199 --> 01:22:23,920
noi non vogliamo.
Se cambiassimo la

1466
01:22:23,920 --> 01:22:28,679
base,
in che base? E 13.
Attenzione

1467
01:22:28,679 --> 01:22:31,280
perché 1 + 1 + 1 in base 3 fa 0 e

1468
01:22:31,280 --> 01:22:33,760
riporta di 1 in base 4. Noi

1469
01:22:33,760 --> 01:22:38,360
interpretiamo questi uni in base

1470
01:22:38,360 --> 01:22:40,440
4.

1471
01:22:40,440 --> 01:22:42,080
Ok?

1472
01:22:42,080 --> 01:22:46,760
E questi qua, siccome ne costruiamo m,

1473
01:22:46,760 --> 01:22:49,719
li interpretiamo in base m + 1. In

1474
01:22:49,719 --> 01:22:52,719
quello abbiamo la certezza che la somma

1475
01:22:52,719 --> 01:22:57,560
di m unità in base m + 1 non genereranno

1476
01:22:57,560 --> 01:23:02,920
mai un riporto. Ok? Quindi, e qua adesso

1477
01:23:02,920 --> 01:23:06,199
vi scrivo la formulona che è questa qui.

1478
01:23:06,199 --> 01:23:10,840
Noi abbiamo che W v con i

1479
01:23:10,840 --> 01:23:14,679
è uguale a che cosa?

1480
01:23:14,679 --> 01:23:16,880
Alla sommatoria

1481
01:23:16,880 --> 01:23:19,719
degli oggetti jartono

1482
01:23:19,719 --> 01:23:28,520
a f con i di 1 * m + 1 elev n - j.

1483
01:23:28,520 --> 01:23:30,880
Questo questa cosa complicatissima che

1484
01:23:30,880 --> 01:23:34,679
ho scritto è semplicemente questi numeri

1485
01:23:34,679 --> 01:23:36,880
qui

1486
01:23:36,880 --> 01:23:39,639
interpretati in base m + 1, in quel in

1487
01:23:39,639 --> 01:23:41,960
questo caso 4. Quindi questa è la

1488
01:23:41,960 --> 01:23:45,159
formulazione generica. W con i è il

1489
01:23:45,159 --> 01:23:49,159
numero. Le qui cifre sono 0 e 1 e gli

1490
01:23:49,159 --> 01:23:51,880
uni stanno in corrispondenza degli

1491
01:23:51,880 --> 01:23:56,360
oggetti che stanno dentro eh l'insieme f

1492
01:23:56,360 --> 01:23:59,320
con i, però interpretati in base m + 1.

1493
01:23:59,320 --> 01:24:03,360
Ecco perché scriviamo questa cosa qua

1494
01:24:03,360 --> 01:24:05,800
per semplicemente dire che quella è la

1495
01:24:05,800 --> 01:24:09,320
cifra 1. Ok? Ovviamente dove non c'è

1496
01:24:09,320 --> 01:24:13,280
sarebbe 0 per e auguri. Ok?

1497
01:24:13,280 --> 01:24:18,080
Chiaro? Quindi W con i è interpretato in

1498
01:24:18,080 --> 01:24:22,480
questo modo. A quel a quel similmente

1499
01:24:22,480 --> 01:24:26,800
avremo che K è uguale alla sommatoria

1500
01:24:26,800 --> 01:24:30,120
per J

1501
01:24:30,960 --> 01:24:36,800
+ 1 elev n - j. Questo cos'è? Questo K w

1502
01:24:36,800 --> 01:24:39,840
ok? La stessa cosa. Che cos'è? è

1503
01:24:39,840 --> 01:24:43,639
semplicemente il numero in base m + 1

1504
01:24:43,639 --> 01:24:47,320
fatto di tutte e cifre 1. Ok?

1505
01:24:47,320 --> 01:24:49,400
Alrght

1506
01:24:49,400 --> 01:24:51,719
ora noi dobbiamo dimostrare è che

1507
01:24:51,719 --> 01:24:54,159
un'istanza C di Exact Cover viene

1508
01:24:54,159 --> 01:24:56,520
trasformata in un'istanza C di Napsac in

1509
01:24:56,520 --> 01:24:59,440
questo modo e le istanze Sì di Napsac

1510
01:24:59,440 --> 01:25:01,800
ottenute tramite questa trasformazione

1511
01:25:01,800 --> 01:25:05,360
partivano da istanze sì di exact cover.

1512
01:25:05,360 --> 01:25:09,440
Ok? Alri,

1513
01:25:11,040 --> 01:25:14,360
quindi se

1514
01:25:14,360 --> 01:25:19,040
UF, non mi ricordo se usavo le parentesi

1515
01:25:19,040 --> 01:25:25,520
angolari, ok? UF è un'istanza

1516
01:25:26,480 --> 01:25:28,159
sì

1517
01:25:28,159 --> 01:25:33,320
di exact cover. Allora,

1518
01:25:34,600 --> 01:25:37,600
l'istanza

1519
01:25:37,800 --> 01:25:41,760
F di UF

1520
01:25:41,760 --> 01:25:44,810
di Napsak

1521
01:25:44,810 --> 01:25:46,440
[Musica]

1522
01:25:46,440 --> 01:25:48,840
è

1523
01:25:48,840 --> 01:25:53,159
questa è una unistanza.

1524
01:25:54,520 --> 01:25:59,400
Sì. Ok. Come si dimostra?

1525
01:25:59,400 --> 01:26:01,880
Supponiamo di star partendo da

1526
01:26:01,880 --> 01:26:05,280
un'istanza sì di

1527
01:26:05,280 --> 01:26:09,800
ah exact cover. Ok? L'istanza di Napsac,

1528
01:26:09,800 --> 01:26:12,119
vi ripeto, non è un'istanza di Napsac a

1529
01:26:12,119 --> 01:26:15,560
caso, è un'istanza di Napsac ottenuta

1530
01:26:15,560 --> 01:26:18,679
con con questi numeri molto specifici,

1531
01:26:18,679 --> 01:26:20,840
eh? Ok.

1532
01:26:20,840 --> 01:26:23,320
Se partiamo da un'istanza s di exact

1533
01:26:23,320 --> 01:26:26,760
cover, allora dentro f

1534
01:26:26,760 --> 01:26:30,520
ci stanno dei sottoinsiemi di u che

1535
01:26:30,520 --> 01:26:37,119
costituiscono una partizione di u. Ok?

1536
01:26:37,920 --> 01:26:41,080
i numeri. Se io prendo le stringhe

1537
01:26:41,080 --> 01:26:43,639
buleane che rappresentano questi

1538
01:26:43,639 --> 01:26:47,679
insiemi, quali oggetti ci stanno o no,

1539
01:26:47,679 --> 01:26:50,320
avremo che queste stringhe buleane non

1540
01:26:50,320 --> 01:26:53,119
avranno uni in comune sulla stessa

1541
01:26:53,119 --> 01:26:56,239
colonna e su ogni colonna ci sarà almeno

1542
01:26:56,239 --> 01:27:00,679
un uno. Ciò significa che i rispettivi

1543
01:27:00,679 --> 01:27:04,000
numeri w V con i ottenuti in quel modo

1544
01:27:04,000 --> 01:27:08,199
là sono numeri in base m + 1 la cui

1545
01:27:08,199 --> 01:27:11,679
somma è esattamente w v perché è il

1546
01:27:11,679 --> 01:27:15,360
numero in base m + 1 dove c'è la cifra 1

1547
01:27:15,360 --> 01:27:20,800
a tutti colonne. Ok? Quindi se passo se

1548
01:27:20,800 --> 01:27:24,040
parto da un'istanza sì di exact cover

1549
01:27:24,040 --> 01:27:26,960
ottengo un'istanza sì. Quella è stanza

1550
01:27:26,960 --> 01:27:29,440
di X. Ok. Eh? Sì, prego.
Se io per la

1551
01:27:29,440 --> 01:27:35,159
funzione fatto da tutti, cioè sono

1552
01:27:35,159 --> 01:27:38,840
giunti
non sono necessariamente giunti f

1553
01:27:38,840 --> 01:27:41,560
la soluzione,

1554
01:27:41,560 --> 01:27:45,520
cioè dentro f io devo trovare alcuni di

1555
01:27:45,520 --> 01:27:48,440
loro che sono disgiunti e sommano a u,

1556
01:27:48,440 --> 01:27:51,960
però dentro f gli f1, f2, f3 i lì

1557
01:27:51,960 --> 01:27:54,360
principi possono sovrapporsi. sta al

1558
01:27:54,360 --> 01:27:56,440
solutore decidere di non prenderli

1559
01:27:56,440 --> 01:27:59,600
assieme, seò era facile,

1560
01:27:59,600 --> 01:28:02,000
ok? Quello che rende il problema

1561
01:28:02,000 --> 01:28:04,320
complicato, il fatto che dentro fgli f

1562
01:28:04,320 --> 01:28:06,560
con i si sovrappongono in linea di

1563
01:28:06,560 --> 01:28:08,239
principio. Quindi qual è che prendo?

1564
01:28:08,239 --> 01:28:10,560
Quale questi due si sovrappongono? Quale

1565
01:28:10,560 --> 01:28:12,679
dei due preferisco prendere? Perché lì

1566
01:28:12,679 --> 01:28:15,320
dici magari uno mi preclude la

1567
01:28:15,320 --> 01:28:17,040
costruzione della soluzione e l'altra

1568
01:28:17,040 --> 01:28:19,159
no. Ma io non lo so da principio, devo

1569
01:28:19,159 --> 01:28:21,280
semplicemente provare.
Però quelli che

1570
01:28:21,280 --> 01:28:24,840
prendono in distanza sì so che per sono

1571
01:28:24,840 --> 01:28:27,000
quelli che prendiamo. Il discorso è un

1572
01:28:27,000 --> 01:28:28,920
po' diverso. Se io parto da un'istanza,

1573
01:28:28,920 --> 01:28:31,960
sì, vuol dire che esiste una soluzione.

1574
01:28:31,960 --> 01:28:34,760
Ma chi sia, non lo so. So solo che ne

1575
01:28:34,760 --> 01:28:38,320
esiste una la cui struttura sarà questa,

1576
01:28:38,320 --> 01:28:42,360
cioè che le strano le stringhe buleane

1577
01:28:42,360 --> 01:28:45,719
01 degli fno parte di una soluzione che

1578
01:28:45,719 --> 01:28:49,840
non conosco, non avranno uno in comune e

1579
01:28:49,840 --> 01:28:52,400
copriranno tutte le colonne, quindi i

1580
01:28:52,400 --> 01:28:54,800
rispettivi numeri in base a n + 1

1581
01:28:54,800 --> 01:28:59,600
sommeranno a quel w. Ok?

1582
01:28:59,600 --> 01:29:02,280
Supponiamo di essere arrivati, quindi

1583
01:29:02,280 --> 01:29:03,440
questo è il primo verso della

1584
01:29:03,440 --> 01:29:06,600
dimostrazione. Supponiamo

1585
01:29:06,600 --> 01:29:09,480
quindi questo l'altro verso è questo

1586
01:29:09,480 --> 01:29:12,560
qua. Se

1587
01:29:12,560 --> 01:29:15,280
f di

1588
01:29:15,280 --> 01:29:17,600
UF

1589
01:29:17,600 --> 01:29:21,960
è un'istanza

1590
01:29:23,080 --> 01:29:27,000
sì di Napsak,

1591
01:29:27,679 --> 01:29:33,480
no? Opsac. Ok. Allora,

1592
01:29:33,600 --> 01:29:35,480
UF

1593
01:29:35,480 --> 01:29:39,920
è un'istanza

1594
01:29:40,480 --> 01:29:45,760
sì di exact cover.

1595
01:29:45,760 --> 01:29:49,000
Mamma mia, non sapevo male. Ok,

1596
01:29:49,000 --> 01:29:52,080
supponiamo di essere arrivati. Qui c'è

1597
01:29:52,080 --> 01:29:55,080
il giochetto del riporto, eh. Supponiamo

1598
01:29:55,080 --> 01:29:58,480
di essere arrivati a un'istanza sì di

1599
01:29:58,480 --> 01:30:01,600
NAPSA. Vi ripeto, l'istanza sì a qui

1600
01:30:01,600 --> 01:30:03,840
arriviamo non è un'istanza a caso, è

1601
01:30:03,840 --> 01:30:06,040
quella, eh, cioè ha quella forma

1602
01:30:06,040 --> 01:30:09,040
specifica. Supponiamo di aver costruito

1603
01:30:09,040 --> 01:30:11,600
che f abbia costruito un'istanza dif che

1604
01:30:11,600 --> 01:30:14,320
è un'istanza i allora vuol dire che fra

1605
01:30:14,320 --> 01:30:18,199
tutti w con i,

1606
01:30:18,199 --> 01:30:23,360
mettiamolo qua, ok? Fra tutti W con i

1607
01:30:23,360 --> 01:30:26,639
che ha tirato fuori f ne esistono alcuni

1608
01:30:26,639 --> 01:30:30,280
di loro che sommati fanno w.

1609
01:30:30,280 --> 01:30:36,719
Ok? Guardiamo questo W. Questo W è il

1610
01:30:36,719 --> 01:30:41,840
numero che in base m + 1 è formato da

1611
01:30:41,840 --> 01:30:45,679
tutte cifre 1.

1612
01:30:46,159 --> 01:30:51,639
Siccome io le W che ho sono al più m

1613
01:30:51,639 --> 01:30:53,960
e le sto considerando come numeri in

1614
01:30:53,960 --> 01:30:57,719
base m + 1 e sono numeri le cui cifre

1615
01:30:57,719 --> 01:31:02,480
sono 0 1 ma in base m + 1, io non potrò

1616
01:31:02,480 --> 01:31:08,119
mai generare un riporto nella somma di m

1617
01:31:08,119 --> 01:31:12,440
numeri in cui la cifre sono 0 1 se sono

1618
01:31:12,440 --> 01:31:17,080
in base m + 1. Quindi se la loro somma

1619
01:31:17,080 --> 01:31:21,719
produce un numero che in base m + 1 è 1

1620
01:31:21,719 --> 01:31:24,840
1 1 1 1 1 1 1 1 1 e questa somma non ha

1621
01:31:24,840 --> 01:31:28,000
mai generato riporto, allora vuol dire

1622
01:31:28,000 --> 01:31:33,000
che in tutte le colonne deve comparire 1

1623
01:31:33,000 --> 01:31:35,880
e in tutte le colonne non deve comparire

1624
01:31:35,880 --> 01:31:38,840
più di uno, senò alla somma avremmo un

1625
01:31:38,840 --> 01:31:42,239
altro simbolo, ok? avremmo zero, avremmo

1626
01:31:42,239 --> 01:31:45,440
un'altra cosa. Quindi che cosa avremmo?

1627
01:31:45,440 --> 01:31:47,679
Che su tutte le colonne compare

1628
01:31:47,679 --> 01:31:51,080
esattamente una cifra uno. Quindi quelle

1629
01:31:51,080 --> 01:31:54,600
w con i che sommano a w grande

1630
01:31:54,600 --> 01:31:57,119
provengono da f con i che sono una

1631
01:31:57,119 --> 01:32:01,000
partizione dell'U di partenza. Quindi se

1632
01:32:01,000 --> 01:32:03,800
abbiamo se F ha costruito un'istanza s

1633
01:32:03,800 --> 01:32:06,840
di Napsa era perché partivamo da

1634
01:32:06,840 --> 01:32:12,560
un'istanza s di Exact da cui Napsa è NP2

1635
01:32:12,560 --> 01:32:15,800
e poiché Napsa si può esprimere come un

1636
01:32:15,800 --> 01:32:17,639
problema di programmazione lineare

1637
01:32:17,639 --> 01:32:19,320
intera, non so se l'avete vista ricerca

1638
01:32:19,320 --> 01:32:21,719
operativa, tutta la programmazione

1639
01:32:21,719 --> 01:32:24,520
lineare intera è NP alua. La prova che

1640
01:32:24,520 --> 01:32:26,920
sia in NP è abbastanza sofisticata, non

1641
01:32:26,920 --> 01:32:28,639
la vediamo. Però una programmazione

1642
01:32:28,639 --> 01:32:30,400
lineare intera, poiché può esprimere

1643
01:32:30,400 --> 01:32:35,000
Naps e Naps di decisione e NPO, allora

1644
01:32:35,000 --> 01:32:37,360
la programmazione lineare intera è NP

1645
01:32:37,360 --> 01:32:42,520
ASA. Prego. La reazione da moltiplica

1646
01:32:42,520 --> 01:32:44,719
Ok,

1647
01:32:44,719 --> 01:32:48,000
ci serve su solamente

1648
01:32:48,000 --> 01:32:50,960
Sì,
che mi la parzione.
Sì, perché io

1649
01:32:50,960 --> 01:32:55,639
sto partendo da una partizione di
quindi

1650
01:32:55,639 --> 01:32:58,840
Sì. Se io dico suppongo di partire da

1651
01:32:58,840 --> 01:33:03,119
un'istanza su UF, allora dentro f ci sta

1652
01:33:03,119 --> 01:33:06,000
una partizione di U. Non devo cercare la

1653
01:33:06,000 --> 01:33:09,040
No, io so che esiste.

1654
01:33:09,040 --> 01:33:11,400
Questo è un passaggio fondamentale. Se

1655
01:33:11,400 --> 01:33:14,400
volete andare andate, ci siamo. Però

1656
01:33:14,400 --> 01:33:16,840
questo è è un passaggio fondamentale

1657
01:33:16,840 --> 01:33:20,760
perché un conto è dire

1658
01:33:20,760 --> 01:33:23,639
questa partizione me la devo calcolare.

1659
01:33:23,639 --> 01:33:26,080
un conto e dire questa partizione esiste

1660
01:33:26,080 --> 01:33:28,520
e ha queste proprietà,

1661
01:33:28,520 --> 01:33:30,600
cioè non mi importa averla in mano, so

1662
01:33:30,600 --> 01:33:32,719
che una c'è e ha una proprietà

1663
01:33:32,719 --> 01:33:35,719
particolare, indipendentemente da chi

1664
01:33:35,719 --> 01:33:39,639
essa effettivamente sia,

1665
01:33:39,639 --> 01:33:41,840
quindi in quel caso non ho bisogno di

1666
01:33:41,840 --> 01:33:44,119
calcolarla. In quel caso io dico ci sta

1667
01:33:44,119 --> 01:33:46,480
e ha questa proprietà, tutto quanto.

1668
01:33:46,480 --> 01:33:50,239
Quindi non è che mi serve ottenerla,

1669
01:33:50,239 --> 01:33:52,480
mi serve sapere che c'è e che abbia

1670
01:33:52,480 --> 01:33:55,679
alcune caratteristiche.

1671
01:33:55,679 --> 01:33:57,560
Chiaro?

1672
01:33:57,560 --> 01:33:59,920
Va bene. Grazie mille per aver per

1673
01:33:59,920 --> 01:34:02,280
essere venuti a questa lezione il 24 di

1674
01:34:02,280 --> 01:34:06,119
aprile e immagino avreste preferito fare

1675
01:34:06,119 --> 01:34:08,639
altro.

1676
01:34:08,639 --> 01:34:10,880
Ah.